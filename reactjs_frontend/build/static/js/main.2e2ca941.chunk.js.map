{"version":3,"sources":["store/actions/actionTypes.js","axios.js","services/userService.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManageUser.js","containers/HomePage/Section/OutStandingDoctor.js","store/actions/appActions.js","store/actions/userActions.js","store/actions/adminActions.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/Login.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ManageSpecialty.js","containers/System/Clinic/ManageClinic.js","routes/System.js","assets/logo.svg","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MediacalFacility.js","containers/HomePage/Section/HandBook.js","containers/HomePage/Section/About.js","containers/HomePage/HomeFooter.js","containers/HomePage/HomePage.js","containers/Patient/Doctor/ProfileDoctor.js","components/Input/DatePicker.js","containers/Patient/Doctor/Modal/BookingModal.js","containers/Patient/Doctor/DoctorSchedule.js","containers/Patient/Doctor/DoctorExtraInfor.js","containers/Patient/SocialPlugin/LikeAndShare.js","containers/Patient/SocialPlugin/Comment.js","containers/Patient/Doctor/DetailDoctor.js","containers/System/Doctor/ManageSchedule.js","containers/System/Doctor/RemedyModal.js","containers/System/Doctor/ManagePatient.js","routes/Doctor.js","containers/Patient/VerifyEmail.js","containers/Patient/Specialty/DetailSpecialty.js","containers/Patient/Clinic/DetailClinic.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","utils/constant.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomToast.js","components/CustomScrollbars.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAIlDED","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAIlDED","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAIlDED","SAVE_USER_SUCCESS","SAVE_USER_FAILDED","CREATE_USER_SUCCESS","CREATE_USER_FAILED","EDIT_USER_SUCCESS","EDIT_USER_FAILED","DELETE_USER_SUCCESS","DELETE_USER_FAILED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAIlDED","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAIlDED","FETCH_ALL_DOCTORS_SUCCESS","FETCH_ALL_DOCTORS_FAIlDED","CREATE_INFOR_DOCTOR_SUCCESS","CREATE_INFOR_DOCTOR_FAIlDED","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED","FETCH_REQUIRED_DOCTOR_INFOR_START","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAIlDED","instance","axios","create","baseURL","process","interceptors","response","use","data","handleLoginApi","userEmail","userPassword","post","email","password","getAllUsers","inputId","get","createNewUserService","deleteUserService","userId","delete","id","updateUserService","inputdata","put","getAllCodeService","getTopDoctorHomeService","limit","getAllDoctors","createInforDoctor","getDetailInforDoctor","saveBulkScheduleDoctor","getSheduleDoctorByDate","doctorId","date","getExtraInforDoctorById","getprofileDoctorById","postPatientBookAppointment","postVerifyBookAppointment","createNewSpecialty","getAllSpecialty","getAllDetailSpecialtyById","location","createNewClinic","getAllClinic","getAllDetailClinicById","getAllPatientForDoctor","postSendRemedy","UserRedux","props","handleOnchangeImage","event","a","target","files","file","CommonUtils","getBase64","base64","objectUrl","URL","createObjectURL","setState","previewImgURL","avatar","openPreviewImage","state","isOpen","onChangeInput","copyState","value","console","log","checkValidateInput","isValid","arrCheck","i","length","handleSaveUser","action","CRUD_ACTIONS","CREATE","createNewUser","firstName","lastName","address","gender","roleId","role","phonenumber","phoneNumber","positionId","position","editAUserRedux","userEditId","handleEditUserFromParent","user","imageBase64","image","Buffer","toString","EDIT","genderArr","positionArr","roleArr","this","getGenderStart","getPositionStart","getRoleStart","prevProps","prevState","snapshot","genderRedux","arrGenders","keyMap","positionRedux","arrPositions","roleRedux","arrRoles","listUsers","genders","roles","positions","language","isLoadingGender","className","type","onChange","disabled","aria-label","map","item","index","LANGUAGES","VI","valueVi","valueEn","hidden","htmlFor","style","backgroundImage","onClick","handleEditUserFromParentkey","mainSrc","onCloseRequest","Component","connect","app","admin","users","dispatch","actions","fetchUserRedux","mdParser","MarkdownIt","handleEditorChange","html","text","TableManageUser","handleDeleteUser","deleteUserRedux","handleEditUser","userRedux","arrUsers","Fragment","height","renderHTML","render","OutStandingDoctor","handleViewDetailDoctor","doctor","history","push","arrDoctors","topDoctorsRedux","loadTopDoctors","settings","nameVi","positionData","nameEn","withRouter","isLoggedIn","topDoctors","changeLanguageApp","languageInput","userLoginSuccess","userInfo","processLogout","fetchGenderStart","getState","res","errCode","fetchGenderSuccess","fetchGenderFaided","genderData","fetchPositionStart","fetchPositionSuccess","fetchPositionFaided","fetchRoleStart","fetchRoleSuccess","fetchRoleFaided","roleData","toast","success","saveUserSuccess","fetchAllUserStart","error","saveUserFailed","reverse","fetchAllUserSuccess","fetchAllUserFaided","Data","deleteAUser","deleteUserSuccess","deleteUserFailed","editAUser","editUserSuccess","editUserFailed","fetchTopDoctor","dataDoctors","fetchALLDoctors","dataDr","CreateInforDoctor","fetchALLScheduleTime","dataTime","getAllRequiredDoctorInfor","resPrice","resPayment","resProvince","resSpecialty","resClinic","fetchRequiredDoctorInforSuccess","fetchRequiredDoctorInforFailed","allRequireData","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","allDoctors","allScheduleTime","allRequiredDoctorInfor","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","createBrowserHistory","basename","REACT_APP_ROUTER_BASE_NAME","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","to","Login","handleOnChangeUsername","username","handleOnChangePassword","handleLogin","errMessage","message","handleShowHidePassword","isShowPassword","handleKeyDown","keyCode","placeholder","onKeyDown","color","navigate","path","userInfor","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","toggle","toggleFormParent","handleOnChangeInput","checkValideInput","arrInput","alert","handleAddNewUser","listenToEmitter","on","Modal","size","centered","ModalHeader","ModalBody","ModalFooter","Button","ModalEditUser","handleUpdateUser","editUser","currentUser","_","isEmpty","UserManage","getAllUsersFromReact","isOpenModalUser","toggleUserModal","toggleUserEditModal","isOpenModalEditUser","emit","userEdit","e","MenuGroup","name","children","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","React","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","handleChangeLanguage","changeLanguageAppRedux","menuApp","USER_ROLE","ADMIN","DOCTOR","EN","title","ManageDoctor","builDataInputSelect","inputData","result","object","labelVi","labelEn","label","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","description","selectedOption","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","clinicId","selectedClinic","specialtyId","selectedSpecialty","handleChangeSelect","listPayment","listPrice","listProvince","listSpecialty","listClinic","markdown","paymentId","priceId","provinceId","doctor_info","find","handleChangeSelectDoctorInfor","stateName","stateCopy","handleOnChangeText","listDoctors","dataSelect","dataSelectPrice","dataSelectPayment","dataSelectProvince","dataSelectSpecialty","dataSelectClinic","options","ManageSpecialty","descriptionHTML","descriptionMarkdown","handleSaveNewSpecialty","ManageClinic","handleSaveNewClinic","System","component","HomeHeader","changeLanguage","returnToHome","src","logo","alt","isShowBanner","Specialty","handleViewDetailSpecialty","dataSpecialty","MediacalFacility","handleViewDetailClinic","clinic","dataClinics","HandBook","About","width","frameBorder","allow","allowFullScreen","HomeFooter","HomePage","handleAfterChange","slick","currentSlide","dots","infinite","speed","slidesToShow","slideToScroll","afterChange","ProfileDoctor","getInforDoctor","renderTimeBooking","time","timeTypeData","moment","unix","format","locale","dataProfile","isShowDescriptionDoctor","isShowPrice","isShowLinkDetail","priceTypeData","displayType","thousandSeparator","suffix","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","which","KeyCodeUtils","ENTER","preventDefault","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","autoFormatOnChange","seperator","input","RegExp","test","substr","values","split","v","replace","join","onInputChange","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","otherProps","dateFormat","allowInput","disableMobile","BookingModal","buildDataaGender","handleOnchangeInput","valueInput","handleOnchangeDatepicker","birthday","selecteOption","selectedGender","buildTimeBooking","buildoctorName","doctorData","handleConfirmBooking","isShowLoading","Date","getTime","timeString","doctorName","fullName","reason","timeType","closeBookingClose","getGenders","isOpenModal","spinner","DoctorSchedule","getArrDays","allDays","ddMM","today","add","capitalizeFirstLetter","startOf","valueOf","handleOnChangeSelect","doctorIdFromParent","allAvalableTime","handleClickScheduleTime","isOpenModalBooking","dataScheduleTimeModal","string","toUpperCase","slice","timeDisplay","DoctorExtraInfor","showHideDetailInfor","status","isShowDetailInfor","extraInfor","paymentTypeData","LikeAndShare","window","FB","XFBML","parse","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","document","initFacebookSDK","dataHref","data-href","data-width","data-layout","data-action","data-size","data-share","Comment","numPost","data-numPost","DetailDoctor","detailDoctor","currentDoctorId","match","params","currentURL","dangerouslySetInnerHTML","__html","ManageSchedule","selectedDoctor","handleOnChangeDatePicker","currentDate","handleClickBtnTime","rangeTime","isSelected","handleSaveSchedule","formatedDate","selectedTime","filter","schedule","arrSchedule","yesterday","setDate","getDate","RemedyModal","handleOnchangeEmail","imgBase64","handleSendRemedy","sendRemedy","dataModal","closeRemedyModal","aria-hidden","ManagePatient","getDataPatient","dataPatient","handleOnchangeDatePicker","handleBtnConfirm","patientId","patientData","patientName","isOpenRemedyModal","dataChild","timeTypeDataPatient","colSpan","textAlign","Doctor","DoctorMenuPath","VerfyEmail","statusVerify","search","urlParams","URLSearchParams","token","DetailSpecialty","arrDoctorId","arr","doctorSpecialty","dataDetailSpecialty","dataProvince","unshift","createAt","DetailClinic","dataDetailClinic","doctorClinic","App","handlePersistorState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","CustomScrollbars","HOME","exact","LOGIN","SYSTEM","HOMEPAGE","DETAIL_DOCTOR","DETAIL_SPCIALTY","DETAIL_CLINIC","VERIFY_EMAIL_BOOKING","VerifyEmail","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","hostname","messages","LanguageUtils","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store","navigator","serviceWorker","ready","registration","unregister","LOG_OUT","DELETE","READ","PATIENT","reject","reader","FileReader","readAsDataURL","onload","onerror","UP","DOWN","TAB","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","prefixedKey","assign","messages_vi","messages_en","lang","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","autoHide","autoHideTimeout","hideTracksWhenNotNeeded"],"mappings":"mIAAA,IAAMA,EAAcC,OAAOC,OAAO,CAE9BC,sBAAuB,wBACvBC,6BAA8B,+BAC9BC,gBAAiB,kBAGjBC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,gBAAiB,kBACjBC,eAAgB,iBAGhBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,qBAAsB,uBAEtBC,uBAAwB,yBACxBC,uBAAwB,yBAExBC,mBAAoB,qBACpBC,mBAAoB,qBAEpBC,kBAAmB,oBACnBC,kBAAmB,oBAEnBC,oBAAqB,sBACrBC,mBAAoB,qBAEpBC,kBAAmB,oBACnBC,iBAAkB,mBAElBC,oBAAqB,sBACrBC,mBAAoB,qBAEpBC,wBAAyB,0BACzBC,wBAAyB,0BAEzBC,yBAA0B,2BAC1BC,yBAA0B,2BAE1BC,0BAA2B,4BAC3BC,0BAA2B,4BAE3BC,4BAA6B,8BAC7BC,4BAA6B,8BAE7BC,oCAAqC,sCACrCC,oCAAqC,sCAErCC,kCAAmC,oCACnCC,oCAAqC,sCACrCC,oCAAqC,wCAK1BrC,O,0kKCrDTsC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAASC,iCAoBbJ,EAASK,aAAaC,SAASC,KAC3B,SAACD,GAGG,OAAOA,EAASE,QAmCTR,QC9DTS,EAAiB,SAACC,EAAWC,GACjC,OAAOV,EAAMW,KAAK,aAAc,CAAEC,MAAOH,EAAWI,SAAUH,KAG1DI,EAAc,SAACC,GACnB,OAAOf,EAAMgB,IAAN,gCAAmCD,KAGtCE,EAAuB,SAACV,GAC5B,OAAOP,EAAMW,KAAK,uBAAwBJ,IAGtCW,EAAoB,SAACC,GACzB,OAAOnB,EAAMoB,OAAO,mBAAoB,CACtCb,KAAM,CAAEc,GAAIF,MAIVG,EAAoB,SAACC,GACzB,OAAOvB,EAAMwB,IAAI,iBAAkBD,IAG/BE,EAAoB,SAACF,GACzB,OAAOvB,EAAMgB,IAAN,4BAA+BO,KAGlCG,EAA0B,SAACC,GAC/B,OAAO3B,EAAMgB,IAAN,qCAAwCW,KAG3CC,EAAgB,WACpB,OAAO5B,EAAMgB,IAAI,yBAGba,EAAoB,SAACtB,GACzB,OAAOP,EAAMW,KAAK,2BAA4BJ,IAG1CuB,EAAuB,SAACT,GAC5B,OAAOrB,EAAMgB,IAAN,0CAA6CK,KAGhDU,EAAyB,SAACxB,GAC9B,OAAOP,EAAMW,KAAK,4BAA6BJ,IAG3CyB,EAAyB,SAACC,EAAUC,GACxC,OAAOlC,EAAMgB,IAAN,oDAAuDiB,EAAvD,iBAAwEC,KAG3EC,EAA0B,SAACF,GAC/B,OAAOjC,EAAMgB,IAAN,qDAAwDiB,KAG3DG,EAAuB,SAACH,GAC5B,OAAOjC,EAAMgB,IAAN,iDAAoDiB,KAGvDI,EAA6B,SAAC9B,GAClC,OAAOP,EAAMW,KAAK,gCAAiCJ,IAG/C+B,EAA4B,SAAC/B,GACjC,OAAOP,EAAMW,KAAK,+BAAgCJ,IAG9CgC,EAAqB,SAAChC,GAC1B,OAAOP,EAAMW,KAAK,4BAA6BJ,IAG3CiC,EAAkB,WACtB,OAAOxC,EAAMgB,IAAI,uBAGbyB,EAA4B,SAAClC,GACjC,OAAOP,EAAMgB,IAAN,6CAAgDT,EAAKc,GAArD,qBAAoEd,EAAKmC,YAG5EC,EAAkB,SAACpC,GACvB,OAAOP,EAAMW,KAAK,yBAA0BJ,IAGxCqC,EAAe,WACnB,OAAO5C,EAAMgB,IAAI,oBAGb6B,EAAyB,SAACtC,GAC9B,OAAOP,EAAMgB,IAAN,0CAA6CT,EAAKc,MAGrDyB,EAAyB,SAACvC,GAC9B,OAAOP,EAAMgB,IAAN,oDAAuDT,EAAK0B,SAA5D,iBAA6E1B,EAAK2B,QAGrFa,EAAiB,SAACxC,GACtB,OAAOP,EAAMW,KAAK,mBAAoBJ,K,owGCpFlCyC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAqFVC,oBAtFmB,uCAsFG,WAAOC,GAAP,qBAAAC,EAAA,yDACd7C,EAAO4C,EAAME,OAAOC,QACpBC,EAAOhD,EAAK,IAFE,gCAIKiD,IAAYC,UAAUF,GAJ3B,OAIVG,EAJU,OAKVC,EAAYC,IAAIC,gBAAgBN,GACpC,EAAKO,SAAS,CACVC,cAAeJ,EACfK,OAAQN,IARE,2CAtFH,wDAoGnBO,iBAAmB,WACV,EAAKC,MAAMH,eAChB,EAAKD,SAAS,CAAEK,QAAQ,KAtGT,EAyGnBC,cAAgB,SAACjB,EAAO9B,GACpB,IAAIgD,EAAS,eAAQ,EAAKH,OAC1BG,EAAUhD,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eACOO,IACJ,WACCE,QAAQC,IAAI,0BAA2B,EAAKN,WA/GjC,EAoHnBO,mBAAqB,WAGjB,IAFA,IAAIC,GAAU,EACVC,EAAW,CAAC,QAAS,WAAY,YAAa,WAAY,cAAe,WACpEC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACjC,IAAK,EAAKV,MAAMS,EAASC,IAAK,CAC1BF,GAAU,EACV,MAGR,OAAOA,GA7HQ,EAgInBI,eAAiB,YAEG,IADF,EAAKL,uBAEF,EAAKP,MAAhBa,SACSC,IAAaC,OAGxB,EAAKhC,MAAMiC,cAAc,CACrBtE,MAAO,EAAKsD,MAAMtD,MAClBC,SAAU,EAAKqD,MAAMrD,SACrBsE,UAAW,EAAKjB,MAAMiB,UACtBC,SAAU,EAAKlB,MAAMkB,SACrBC,QAAS,EAAKnB,MAAMmB,QACpBC,OAAQ,EAAKpB,MAAMoB,OACnBC,OAAQ,EAAKrB,MAAMsB,KACnBC,YAAa,EAAKvB,MAAMwB,YACxBC,WAAY,EAAKzB,MAAM0B,SACvB5B,OAAQ,EAAKE,MAAMF,SAIvB,EAAKf,MAAM4C,eAAe,CACtBxE,GAAI,EAAK6C,MAAM4B,WACflF,MAAO,EAAKsD,MAAMtD,MAClBuE,UAAW,EAAKjB,MAAMiB,UACtBC,SAAU,EAAKlB,MAAMkB,SACrBC,QAAS,EAAKnB,MAAMmB,QACpBI,YAAa,EAAKvB,MAAMwB,YACxBJ,OAAQ,EAAKpB,MAAMoB,OACnBC,OAAQ,EAAKrB,MAAMsB,KACnBG,WAAY,EAAKzB,MAAM0B,SACvB5B,OAAQ,EAAKE,MAAMF,WA/JZ,EAwKnB+B,yBAA2B,SAACC,GACxB,IAAIC,EAAc,GAEdD,EAAKE,QAGLD,EAAc,IAAIE,EAAOH,EAAKE,MAAO,UAAUE,SAAS,WAI5D,EAAKtC,SAAS,CACVlD,MAAOoF,EAAKpF,MACZC,SAAU,WACVsE,UAAWa,EAAKb,UAChBC,SAAUY,EAAKZ,SACfM,YAAaM,EAAKP,YAClBJ,QAASW,EAAKX,QACdC,OAAQU,EAAKV,OACbE,KAAMQ,EAAKT,OACXK,SAAUI,EAAKL,WACf3B,OAAQiC,EACRlC,cAAekC,EACflB,OAAQC,IAAaqB,KACrBP,WAAYE,EAAK3E,MA7LrB,EAAK6C,MAAQ,CACToC,UAAW,GACXC,YAAa,GACbC,QAAS,GACTzC,cAAe,GACfI,QAAQ,EAERvD,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVM,YAAa,GACbL,QAAS,GACTC,OAAQ,GACRM,SAAU,GACVJ,KAAM,GACNxB,OAAQ,GACRe,OAAQ,GACRe,WAAY,IApBD,E,4FAwBnB,sBAAA1C,EAAA,sDACIqD,KAAKxD,MAAMyD,iBACXD,KAAKxD,MAAM0D,mBACXF,KAAKxD,MAAM2D,eAHf,gD,sFAkBA,SAAmBC,EAAWC,EAAWC,GACrC,GAAIF,EAAUG,cAAgBP,KAAKxD,MAAM+D,YAAa,CAClD,IAAIC,EAAaR,KAAKxD,MAAM+D,YAC5BP,KAAK3C,SAAS,CACVwC,UAAWW,EACX3B,OAAQ2B,GAAcA,EAAWpC,OAAS,EAAIoC,EAAW,GAAGC,OAAS,KAG7E,GAAIL,EAAUM,gBAAkBV,KAAKxD,MAAMkE,cAAe,CACtD,IAAIC,EAAeX,KAAKxD,MAAMkE,cAC9BV,KAAK3C,SAAS,CACVyC,YAAaa,EACbxB,SAAUwB,GAAgBA,EAAavC,OAAS,EAAIuC,EAAa,GAAGF,OAAS,KAGrF,GAAIL,EAAUQ,YAAcZ,KAAKxD,MAAMoE,UAAW,CAC9C,IAAIC,EAAWb,KAAKxD,MAAMoE,UAC1BZ,KAAK3C,SAAS,CACV0C,QAASc,EACT9B,KAAM8B,GAAYA,EAASzC,OAAS,EAAIyC,EAAS,GAAGJ,OAAS,KAGrE,GAAIL,EAAUU,YAAcd,KAAKxD,MAAMsE,UAAW,CAC9C,IAAIN,EAAaR,KAAKxD,MAAM+D,YACxBM,EAAWb,KAAKxD,MAAMoE,UACtBD,EAAeX,KAAKxD,MAAMkE,cAE9BV,KAAK3C,SAAS,CACVlD,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVM,YAAa,GACbL,QAAS,GACTC,OAAQ2B,GAAcA,EAAWpC,OAAS,EAAIoC,EAAW,GAAGC,OAAS,GACrEtB,SAAUwB,GAAgBA,EAAavC,OAAS,EAAIuC,EAAa,GAAGF,OAAS,GAC7E1B,KAAM8B,GAAYA,EAASzC,OAAS,EAAIyC,EAAS,GAAGJ,OAAS,GAC7DlD,OAAQ,GACRD,cAAe,GACfgB,OAAQC,IAAaC,Y,oBAkHjC,WAAU,IAAD,OACDuC,EAAUf,KAAKvC,MAAMoC,UACrBmB,EAAQhB,KAAKvC,MAAMsC,QACnBkB,EAAYjB,KAAKvC,MAAMqC,YACvBoB,EAAWlB,KAAKxD,MAAM0E,SACtBC,EAAkBnB,KAAKxD,MAAM2E,gBACjC,EAA6FnB,KAAKvC,MAA5FtD,EAAN,EAAMA,MAAOC,EAAb,EAAaA,SAAUsE,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,SAAUM,EAA5C,EAA4CA,YAAaL,EAAzD,EAAyDA,QAASC,EAAlE,EAAkEA,OAAQM,EAA1E,EAA0EA,SAAUJ,EAApF,EAAoFA,KACpF,OACI,sBAAKqC,UAAU,uBAAf,UACI,qBAAKA,UAAU,QAAf,gCACA,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,cAAf,SAA6B,cAAC,IAAD,CAAkBxG,GAAG,sBAClD,qBAAKwG,UAAU,SAAf,UAA6C,IAApBD,EAA2B,iBAAmB,KACvE,sBAAKC,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,wBAC5B,uBAAOwG,UAAU,eAAeC,KAAK,QACjCxD,MAAO1D,EACPmH,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,UACjD6E,SAAUvB,KAAKvC,MAAMa,SAAWC,IAAaqB,UAGrD,sBAAKwB,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,2BAC5B,uBAAOwG,UAAU,eAAeC,KAAK,WACjCxD,MAAOzD,EACPkH,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,aACjD6E,SAAUvB,KAAKvC,MAAMa,SAAWC,IAAaqB,UAGrD,sBAAKwB,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,6BAC5B,uBAAOwG,UAAU,eAAeC,KAAK,OACjCxD,MAAOa,EACP4C,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,mBAGzD,sBAAK0E,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,4BAC5B,uBAAOwG,UAAU,eAAeC,KAAK,OACjCxD,MAAOc,EACP2C,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,kBAGzD,sBAAK0E,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,+BAC5B,uBAAOwG,UAAU,eAAeC,KAAK,OACjCxD,MAAOoB,EACPqC,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,qBAGzD,sBAAK0E,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,0BAC5B,uBAAOwG,UAAU,eAAeC,KAAK,OACjCxD,MAAOe,EACP0C,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,iBAGzD,sBAAK0E,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,yBAC5B,wBAAQwG,UAAU,cAAcI,aAAW,yBACvCF,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,WACjDmB,MAAOgB,EAFX,SAIKkC,GAAWA,EAAQ3C,OAAS,GAAK2C,EAAQU,KAAI,SAACC,EAAMC,GACjD,OACI,wBAAoB9D,MAAO6D,EAAKjB,OAAhC,SAAyCS,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,SAA5EJ,WAK7B,sBAAKP,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,2BAC5B,wBAAQwG,UAAU,cAAcI,aAAW,yBACvCF,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,aACjDmB,MAAOsB,EAFX,SAIK8B,GAAaA,EAAU7C,OAAS,GAAK6C,EAAUQ,KAAI,SAACC,EAAMC,GACvD,OACI,wBAAoB9D,MAAO6D,EAAKjB,OAAhC,SAAyCS,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,SAA5EJ,WAK7B,sBAAKP,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,yBAC5B,wBAAQwG,UAAU,cAAcI,aAAW,yBACvCF,SAAU,SAAC5E,GAAY,EAAKiB,cAAcjB,EAAO,SACjDmB,MAAOkB,EAFX,SAIKiC,GAASA,EAAM5C,OAAS,GAAK4C,EAAMS,KAAI,SAACC,EAAMC,GAC3C,OACI,wBAAoB9D,MAAO6D,EAAKjB,OAAhC,SAAyCS,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,SAA5EJ,WAK7B,sBAAKP,UAAU,QAAf,UACI,gCAAO,cAAC,IAAD,CAAkBxG,GAAG,wBAC5B,sBAAKwG,UAAU,wBAAf,UACI,uBAAOxG,GAAG,aAAayG,KAAK,OAAOD,UAAU,eAAeY,QAAM,EAC9DV,SAAU,SAAC5E,GAAD,OAAW,EAAKD,oBAAoBC,MAElD,wBAAO0E,UAAU,eAAea,QAAQ,aAAxC,+BAA6D,mBAAGb,UAAU,qBAC1E,qBAAKA,UAAU,gBACXc,MAAO,CAAEC,gBAAgB,OAAD,OAASnC,KAAKvC,MAAMH,cAApB,MACxB8E,QAAS,kBAAM,EAAK5E,4BAIhC,qBAAK4D,UAAU,cAAf,SACI,wBAAQA,UAAWpB,KAAKvC,MAAMa,SAAWC,IAAaqB,KAAO,kBAAoB,kBAC7EwC,QAAS,kBAAM,EAAK/D,kBADxB,SAGK2B,KAAKvC,MAAMa,SAAWC,IAAaqB,KAAO,cAAC,IAAD,CAAkBhF,GAAG,qBAAwB,cAAC,IAAD,CAAkBA,GAAG,yBAGrH,qBAAKwG,UAAU,cAAf,SACI,cAAC,IAAD,CACIiB,4BAA6BrC,KAAKV,yBAClChB,OAAQ0B,KAAKvC,MAAMa,mBAQb,IAAtB0B,KAAKvC,MAAMC,QACX,cAAC,IAAD,CACI4E,QAAStC,KAAKvC,MAAMH,cACpBiF,eAAgB,kBAAM,EAAKlF,SAAS,CAAEK,QAAQ,c,GAzU9C8E,aAwWTC,uBAtBS,SAAAhF,GACpB,MAAO,CACHyD,SAAUzD,EAAMiF,IAAIxB,SACpBX,YAAa9C,EAAMkF,MAAM5B,QACzBH,UAAWnD,EAAMkF,MAAM3B,MACvBN,cAAejD,EAAMkF,MAAM1B,UAC3BE,gBAAiB1D,EAAMkF,MAAMxB,gBAC7BL,UAAWrD,EAAMkF,MAAMC,UAIJ,SAAAC,GACvB,MAAO,CACH5C,eAAgB,kBAAM4C,EAASC,QAC/B5C,iBAAkB,kBAAM2C,EAASC,QACjC3C,aAAc,kBAAM0C,EAASC,QAC7BrE,cAAe,SAAC3E,GAAD,OAAU+I,EAASC,IAAsBhJ,KACxDiJ,eAAgB,kBAAMF,EAASC,QAC/B1D,eAAgB,SAACtF,GAAD,OAAU+I,EAASC,IAAkBhJ,QAI9C2I,CAA6ClG,K,6KCpWtDyG,EAAW,IAAIC,IAGrB,SAASC,EAAT,GAA6C,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAClCtF,QAAQC,IAAI,qBAAsBoF,EAAMC,G,IAIpCC,E,kDAEJ,WAAY7G,GAAQ,IAAD,8BACjB,cAAMA,IAkBR8G,iBAAmB,SAAC/D,GAClB,EAAK/C,MAAM+G,gBAAgBhE,EAAK3E,KApBf,EAuBnB4I,eAAiB,SAACjE,GAChB,EAAK/C,MAAM6F,4BAA4B9C,IAtBvC,EAAK9B,MAAQ,CACXgG,UAAW,IAHI,E,qDAOnB,WACEzD,KAAKxD,MAAMuG,mB,gCAGb,SAAmB3C,EAAWC,EAAWC,GACnCF,EAAUU,YAAcd,KAAKxD,MAAMsE,WACrCd,KAAK3C,SAAS,CACZoG,UAAWzD,KAAKxD,MAAMsE,c,oBAc5B,WAAU,IAAD,OAGH4C,EAAW1D,KAAKvC,MAAMgG,UAC1B,OACE,eAAC,IAAME,SAAP,WACE,uBAAO/I,GAAG,kBAAV,SACE,kCACE,+BACE,uCACA,4CACA,2CACA,yCACA,8CACA,2CAED8I,GAAYA,EAAStF,OAAS,GAC7BsF,EAASjC,KAAI,SAACC,EAAMC,GAClB,OACE,+BACE,6BAAKD,EAAKvH,QACV,6BAAKuH,EAAKhD,YACV,6BAAKgD,EAAK/C,WACV,6BAAK+C,EAAK9C,UACV,6BAAK8C,EAAK1C,cACV,+BACE,wBAAQoC,UAAU,WAChBgB,QAAS,kBAAM,EAAKoB,eAAe9B,IADrC,SAEC,mBAAGN,UAAU,wBACd,wBAAQA,UAAU,aAChBgB,QAAS,kBAAM,EAAKkB,iBAAiB5B,IADvC,SAEC,mBAAGN,UAAU,wBAZTO,WAsBnB,cAAC,IAAD,CAAUO,MAAO,CAAE0B,OAAQ,SAAWC,WAAY,SAAAT,GAAI,OAAIJ,EAASc,OAAOV,IAAO9B,SAAU4B,W,GAvErEV,aA2FfC,uBAbS,SAAAhF,GACtB,MAAO,CACLqD,UAAWrD,EAAMkF,MAAMC,UAIA,SAAAC,GACzB,MAAO,CACLE,eAAgB,kBAAMF,EAASC,QAC/BS,gBAAiB,SAAC3I,GAAD,OAAQiI,EAASC,IAAoBlI,QAI3C6H,CAA6CY,I,oKC1GtDU,E,kDACJ,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IAkBRwH,uBAAyB,SAACC,GACxBnG,QAAQC,IAAIkG,GACR,EAAKzH,MAAM0H,SACb,EAAK1H,MAAM0H,QAAQC,KAAnB,yBAA0CF,EAAOrJ,MApBnD,EAAK6C,MAAQ,CACX2G,WAAY,IAHG,E,sDAOnB,SAAmBhE,EAAWC,EAAWC,GACnCF,EAAUiE,kBAAoBrE,KAAKxD,MAAM6H,iBAC3CrE,KAAK3C,SAAS,CACZ+G,WAAYpE,KAAKxD,MAAM6H,oB,+BAK7B,WACErE,KAAKxD,MAAM8H,mB,oBAWb,WAAU,IAAD,OACHF,EAAapE,KAAKvC,MAAM2G,WACxBlD,EAAWlB,KAAKxD,MAAM0E,SAG1B,OACE,qBAAKE,UAAU,2CAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAgC,cAAC,IAAD,CAAkBxG,GAAG,mCACrD,wBAAQwG,UAAU,cAAlB,SAAgC,cAAC,IAAD,CAAkBxG,GAAG,6BAEvD,qBAAKwG,UAAU,eAAf,SACE,cAAC,IAAD,2BAAYpB,KAAKxD,MAAM+H,UAAvB,aAEGH,GAAcA,EAAWhG,OAAS,GACjCgG,EAAW3C,KAAI,SAACC,EAAMC,GACpB,IAAInC,EAAc,GACdkC,EAAKjC,QAGPD,EAAc,IAAIE,EAAOgC,EAAKjC,MAAO,UAAUE,SAAS,WAE1D,IAAI6E,EAAM,UAAM9C,EAAK+C,aAAa3C,QAAxB,aAAoCJ,EAAK/C,SAAzC,YAAqD+C,EAAKhD,WAChEgG,EAAM,UAAMhD,EAAK+C,aAAa1C,QAAxB,aAAoCL,EAAKhD,UAAzC,YAAsDgD,EAAK/C,UACrE,OACE,qBAAKyC,UAAU,oBAAgCgB,QAAS,kBAAM,EAAK4B,uBAAuBtC,IAA1F,SACE,sBAAKN,UAAU,mBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,sCACbc,MAAO,CAAEC,gBAAgB,OAAD,OAAS3C,EAAT,UAG5B,sBAAK4B,UAAU,uBAAf,UACE,8BAAMF,IAAaU,IAAUC,GAAK2C,EAASE,IAC3C,6EATkC/C,oB,GAtD5Ba,aA8FjBmC,gBAAWlC,mBAdF,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvBP,gBAAiB5G,EAAMkF,MAAMkC,WAC7B3D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,CACLyB,eAAgB,kBAAMzB,EAASC,WAITL,CAA6CsB,M,4tBC5F1De,EAAoB,SAACC,GAAD,MAAoB,CACjD1D,KAAMrK,IAAYK,gBAClB6J,SAAU6D,ICRDC,EAAmB,SAACC,GAAD,MAAe,CAC3C5D,KAAMrK,IAAYO,mBAClB0N,SAAUA,IAODC,EAAgB,iBAAO,CAChC7D,KAAMrK,IAAYS,iB,wCCHT0N,EAAmB,WAC9B,8CAAO,WAAOtC,EAAUuC,GAAjB,eAAAzI,EAAA,sEAEHkG,EAAS,CAAExB,KAAMrK,IAAYU,qBAF1B,SAGasD,YAAkB,UAH/B,QAGCqK,EAHD,SAIwB,IAAhBA,EAAIC,QACbzC,EAAS0C,EAAmBF,EAAIvL,OAEhC+I,EAAS2C,KAPR,gDAUH3C,EAAS2C,KACT1H,QAAQC,IAAI,uBAAZ,MAXG,yDAAP,yDAiBWwH,EAAqB,SAACE,GAAD,MAAiB,CACjDpE,KAAMrK,IAAYW,qBAClBmC,KAAM2L,IAGKD,EAAoB,iBAAO,CACtCnE,KAAMrK,IAAYY,uBAGP8N,EAAqB,WAChC,8CAAO,WAAO7C,EAAUuC,GAAjB,eAAAzI,EAAA,sEAEHkG,EAAS,CAAExB,KAAMrK,IAAYU,qBAF1B,SAGasD,YAAkB,YAH/B,QAGCqK,EAHD,SAIwB,IAAhBA,EAAIC,QACbzC,EAAS8C,EAAqBN,EAAIvL,OAElC+I,EAAS+C,KAPR,gDAUH/C,EAAS+C,KACT9H,QAAQC,IAAI,uBAAZ,MAXG,yDAAP,yDAiBW4H,EAAuB,SAAClB,GAAD,MAAmB,CACrDpD,KAAMrK,IAAYa,uBAClBiC,KAAM2K,IAGKmB,EAAsB,iBAAO,CACxCvE,KAAMrK,IAAYc,yBAGP+N,EAAiB,WAC5B,8CAAO,WAAOhD,EAAUuC,GAAjB,eAAAzI,EAAA,sEAEHkG,EAAS,CAAExB,KAAMrK,IAAYU,qBAF1B,SAGasD,YAAkB,QAH/B,QAGCqK,EAHD,SAIwB,IAAhBA,EAAIC,QACbzC,EAASiD,EAAiBT,EAAIvL,OAE9B+I,EAASkD,KAPR,gDAUHlD,EAASkD,KACTjI,QAAQC,IAAI,uBAAZ,MAXG,yDAAP,yDAiBW+H,EAAmB,SAACE,GAAD,MAAe,CAC7C3E,KAAMrK,IAAYe,mBAClB+B,KAAMkM,IAGKD,EAAkB,iBAAO,CACpC1E,KAAMrK,IAAYgB,qBAGPyG,EAAgB,SAAC3E,GAC5B,8CAAO,WAAO+I,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEanC,YAAqBV,GAFlC,QAECuL,EAFD,SAGwB,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,8BACdrD,EAASsD,KACTtD,EAASuD,OAETH,IAAMI,MAAM,wBACZxD,EAASyD,MATR,gDAYHL,IAAMI,MAAM,wBACZxD,EAASyD,KACTxI,QAAQC,IAAI,sBAAZ,MAdG,yDAAP,yDAoBWoI,EAAkB,iBAAO,CACpC9E,KAAMrK,IAAYmB,sBAGPmO,EAAiB,iBAAO,CACnCjF,KAAMrK,IAAYoB,qBAIPgO,EAAoB,WAC/B,8CAAO,WAAOvD,EAAUuC,GAAjB,iBAAAzI,EAAA,+EAEatC,YAAY,OAFzB,QAECgL,EAFD,SAGwB,IAAhBA,EAAIC,SACT1C,EAAQyC,EAAIzC,MAAM2D,UACtB1D,EAAS2D,EAAoB5D,MAE7BqD,IAAMI,MAAM,2BACZxD,EAAS4D,MARR,gDAWHR,IAAMI,MAAM,2BACZxD,EAAS4D,KACT3I,QAAQC,IAAI,uBAAZ,MAbG,yDAAP,yDAmBWyI,EAAsB,SAACE,GAAD,MAAW,CAC5CrF,KAAMrK,IAAYyB,wBAClBmK,MAAO8D,IAGID,EAAqB,iBAAO,CACvCpF,KAAMrK,IAAY0B,0BAIPiO,EAAc,SAACjM,GAC1B,8CAAO,WAAOmI,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEalC,YAAkBC,GAF/B,QAEC2K,EAFD,SAGwB,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,wBACdrD,EAAS+D,KACT/D,EAASuD,OAETH,IAAMI,MAAM,sBACZxD,EAASgE,MATR,gDAYHZ,IAAMI,MAAM,sBACZxD,EAASgE,KACT/I,QAAQC,IAAI,sBAAZ,MAdG,yDAAP,yDAmBW6I,EAAoB,iBAAO,CACtCvF,KAAMrK,IAAYuB,sBAGPsO,EAAmB,iBAAO,CACrCxF,KAAMrK,IAAYwB,qBAGPsO,EAAY,SAACvH,GACxB,8CAAO,WAAOsD,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEa9B,YAAkB0E,GAF/B,QAEC8F,EAFD,SAGwB,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,wBACdrD,EAASkE,KACTlE,EAASuD,OAETH,IAAMI,MAAM,sBACZxD,EAASmE,MATR,gDAYHf,IAAMI,MAAM,sBACZxD,EAASmE,KACTlJ,QAAQC,IAAI,sBAAZ,MAdG,yDAAP,yDAmBWgJ,EAAkB,iBAAO,CACpC1F,KAAMrK,IAAYmB,sBAGP6O,EAAiB,iBAAO,CACnC3F,KAAMrK,IAAYoB,qBAGP6O,EAAiB,WAC5B,8CAAO,WAAOpE,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEa1B,YAAwB,IAFrC,QAECoK,EAFD,SAGwB,IAAhBA,EAAIC,QACbzC,EAAS,CACPxB,KAAMrK,IAAY2B,yBAClBuO,YAAa7B,EAAIvL,OAGnB+I,EAAS,CACPxB,KAAMrK,IAAY4B,2BAVnB,gDAcHqN,IAAMI,MAAM,wBAAZ,MACAxD,EAAS,CACPxB,KAAMrK,IAAY4B,2BAhBjB,yDAAP,yDAgCWuO,EAAkB,WAC7B,8CAAO,WAAOtE,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEaxB,cAFb,QAECkK,EAFD,SAGwB,IAAhBA,EAAIC,QACbzC,EAAS,CACPxB,KAAMrK,IAAY6B,0BAClBuO,OAAQ/B,EAAIvL,OAGd+I,EAAS,CACPxB,KAAMrK,IAAY8B,4BAVnB,gDAcHmN,IAAMI,MAAM,wBAAZ,MACAxD,EAAS,CACPxB,KAAMrK,IAAY8B,4BAhBjB,yDAAP,yDAsBWuO,EAAoB,SAACvN,GAChC,8CAAO,WAAO+I,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEavB,YAAkBtB,GAF/B,QAECuL,EAFD,SAGwB,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,gCACdrD,EAAS,CACPxB,KAAMrK,IAAY+B,gCAGpBkN,IAAMI,MAAM,gCACZxD,EAAS,CACPxB,KAAMrK,IAAYgC,+BAXnB,gDAeHiN,IAAMI,MAAM,+BAAZ,MACAxD,EAAS,CACPxB,KAAMrK,IAAYgC,8BAjBjB,yDAAP,yDAuBWsO,EAAuB,WAClC,8CAAO,WAAOzE,EAAUuC,GAAjB,eAAAzI,EAAA,+EAEa3B,YAAkB,QAF/B,QAECqK,EAFD,SAGwB,IAAhBA,EAAIC,QACbzC,EAAS,CACPxB,KAAMrK,IAAYiC,oCAClBsO,SAAUlC,EAAIvL,OAGhB+I,EAAS,CACPxB,KAAMrK,IAAYkC,sCAVnB,gDAcH+M,IAAMI,MAAM,uCAAZ,MACAxD,EAAS,CACPxB,KAAMrK,IAAYkC,sCAhBjB,yDAAP,yDAsBWsO,EAA4B,WACvC,8CAAO,WAAO3E,EAAUuC,GAAjB,yBAAAzI,EAAA,sEAEHkG,EAAS,CAAExB,KAAMrK,IAAYmC,oCAF1B,SAGkB6B,YAAkB,SAHpC,cAGCyM,EAHD,gBAIoBzM,YAAkB,WAJtC,cAIC0M,EAJD,iBAKqB1M,YAAkB,YALvC,eAKC2M,EALD,iBAMsB5L,cANtB,eAMC6L,EAND,iBAOmBzL,cAPnB,QAOC0L,EAPD,OASCJ,GAAiC,IAArBA,EAASnC,SACpBoC,GAAqC,IAAvBA,EAAWpC,SACzBqC,GAAuC,IAAxBA,EAAYrC,SAC3BsC,GAAyC,IAAzBA,EAAatC,SAC7BuC,GAAmC,IAAtBA,EAAUvC,SACtBxL,EAAO,CACT2N,SAAUA,EAAS3N,KACnB4N,WAAYA,EAAW5N,KACvB6N,YAAaA,EAAY7N,KACzB8N,aAAcA,EAAa9N,KAC3B+N,UAAWA,EAAU/N,MAEvB+I,EAASiF,EAAgChO,KAEzC+I,EAASkF,KAvBR,kDA0BH9B,IAAMI,MAAM,kCAAZ,MACAxD,EAASkF,KA3BN,0DAAP,yDAgCWD,EAAkC,SAACE,GAAD,MAAqB,CAClE3G,KAAMrK,IAAYoC,oCAClBU,KAAMkO,IAGKD,EAAiC,iBAAO,CACnD1G,KAAMrK,IAAYqC,uC,+rBCvVd4O,EAAe,CACjBC,SAAS,EACThH,SAAU,KACViH,eAAgB,sBAChBC,sBAAsB,eAXQ,CAC9B1K,QAAQ,EACR2K,UAAW,GACXC,WAAY,KACZC,SAAU,QAsCCC,EA1BI,WAAmC,IAAlC/K,EAAiC,uDAAzBwK,EAAc3J,EAAW,uCACjD,OAAQA,EAAO+C,MACX,KAAKrK,IAAYG,sBACb,OAAO,2BACAsG,GADP,IAEIyK,SAAS,IAEjB,KAAKlR,IAAYI,6BACb,OAAO,2BACAqG,GADP,IAEI2K,sBAAsB,2BACf3K,EAAM2K,uBACN9J,EAAO8J,yBAGtB,KAAKpR,IAAYK,gBAEb,OADAyG,QAAQC,IAAI,6BAA+BO,EAAO4C,UAC3C,2BACAzD,GADP,IAEIyD,SAAU5C,EAAO4C,WAEzB,QACI,OAAOzD,ICtCbwK,EAAe,CACnBrD,YAAY,EACZK,SAAU,MA4BGuD,EAzBI,WAAmC,IAAlC/K,EAAiC,uDAAzBwK,EAAc3J,EAAW,uCACnD,OAAQA,EAAO+C,MACb,KAAKrK,IAAYO,mBACf,OAAO,2BACFkG,GADL,IAEEmH,YAAY,EACZK,SAAU3G,EAAO2G,WAErB,KAAKjO,IAAYQ,gBAMjB,KAAKR,IAAYS,eACf,OAAO,2BACFgG,GADL,IAEEmH,YAAY,EACZK,SAAU,OAEd,QACE,OAAOxH,I,2BC1BPwK,EAAe,CACnB9G,iBAAiB,EACjBJ,QAAS,GACTC,MAAO,GACPC,UAAW,GACX2B,MAAO,GACPiC,WAAY,GACZ4D,WAAY,GACZC,gBAAiB,GACjBC,uBAAwB,IAkGXC,EA/FM,WAAmC,IAAlCnL,EAAiC,uDAAzBwK,EAAc3J,EAAW,uCACrD,OAAQA,EAAO+C,MACb,KAAKrK,IAAYU,mBACf,IAAIkG,EAAS,eAAQH,GAErB,OADAG,EAAUuD,iBAAkB,EACrB,eACFvD,GAEP,KAAK5G,IAAYW,qBAGf,OAFA8F,EAAMsD,QAAUzC,EAAOxE,KACvB2D,EAAM0D,iBAAkB,EACjB,eACF1D,GAEP,KAAKzG,IAAYY,qBAGf,OAFA6F,EAAM0D,iBAAkB,EACxB1D,EAAMsD,QAAU,GACT,eACFtD,GAEP,KAAKzG,IAAYa,uBAEf,OADA4F,EAAMwD,UAAY3C,EAAOxE,KAClB,eACF2D,GAEP,KAAKzG,IAAYc,uBAEf,OADA2F,EAAMwD,UAAY,GACX,eACFxD,GAEP,KAAKzG,IAAYe,mBAEf,OADA0F,EAAMuD,MAAQ1C,EAAOxE,KACd,eACF2D,GAEP,KAAKzG,IAAYgB,mBAEf,OADAyF,EAAMuD,MAAQ,GACP,eACFvD,GAEP,KAAKzG,IAAYyB,wBAEf,OADAgF,EAAMmF,MAAQtE,EAAOsE,MACd,eACFnF,GAEP,KAAKzG,IAAY0B,wBAEf,OADA+E,EAAMmF,MAAQ,GACP,eACFnF,GAEP,KAAKzG,IAAY2B,yBAEf,OADA8E,EAAMoH,WAAavG,EAAO4I,YACnB,eACFzJ,GAEP,KAAKzG,IAAY4B,yBAEf,OADA6E,EAAMoH,WAAa,GACZ,eACFpH,GAEP,KAAKzG,IAAY6B,0BAEf,OADA4E,EAAMgL,WAAanK,EAAO8I,OACnB,eACF3J,GAEP,KAAKzG,IAAY8B,0BAEf,OADA2E,EAAMgL,WAAa,GACZ,eACFhL,GAEP,KAAKzG,IAAYiC,oCAEf,OADAwE,EAAMiL,gBAAkBpK,EAAOiJ,SACxB,eACF9J,GAEP,KAAKzG,IAAYkC,oCAEf,OADAuE,EAAMiL,gBAAkB,GACjB,eACFjL,GAEP,KAAKzG,IAAYoC,oCAEf,OADAqE,EAAMkL,uBAAyBrK,EAAOxE,KAC/B,eACF2D,GAEP,KAAKzG,IAAYqC,oCAEf,OADAoE,EAAMkL,uBAAyB,GACxB,eACFlL,GAEP,QACE,OAAOA,IC9FPoL,EAAsB,CACxBC,Q,OAASA,EACTC,gBAAiBC,KAGfC,EAAiB,2BAChBJ,GADgB,IAEnBK,IAAK,OACLC,UAAW,CAAC,aAAc,cAGxBC,EAAgB,2BACfP,GADe,IAElBK,IAAK,MACLC,UAAW,CAAC,cCNT,IDUSjF,ECVHA,EAAUmF,YAAqB,CAAEC,SAAU5P,gQAAY6P,6BAE9DC,EAAuB,CACzBL,UAAW,CACPnS,IAAYG,sBACZH,IAAYK,kBAIdoS,GDCUvF,ECDsBA,EDCVwF,YAAgB,CACxCC,OAAQC,YAAc1F,GACtB3E,KAAMsK,YAAeZ,EAAmBa,GACxCpH,IAAKmH,YAAeT,EAAkBZ,GACtC7F,MAAOiG,KCJLmB,EAAa,CACfC,YAAiB9F,GACjB+F,IACAC,oCAA0BV,IAI9B,IAAMW,EAAkIC,IAElIC,EAAaC,YACfb,EACAU,EAAiBI,IAAe,WAAf,EAAmBR,KAK3BS,GAFWH,EAAWxH,SAEV4H,YAAaJ,IAEvBA,I,iCC5CTK,EAAiBC,IAAsB,IAEhCC,EAAsBC,kCAAwB,CACvDC,sBAAuB,SAAArN,GAAK,OAAIA,EAAM8B,KAAKqF,YAC3CmG,mBAAoB,sBACpBC,aAAc,WAGLC,EAAyBJ,kCAAwB,CAE1DC,sBAAuB,SAAArN,GAAK,OAAKA,EAAM8B,KAAKqF,YAC5CmG,mBAAoB,yBACpBC,aAAc,SAACvN,EAAOyN,GAAR,OAAqBR,EAAeS,sBAAsBD,IAAa,KACrFE,mBAAmB,I,cCZjBC,E,4JAEF,WACI,IACIC,EADmBtL,KAAKxD,MAApBoI,WAC0B,sBAAwB,QAE1D,OACI,cAAC,IAAD,CAAU2G,GAAID,Q,GAPP9I,aAwBJC,qBAXS,SAAAhF,GACpB,MAAO,CACHmH,WAAYnH,EAAM8B,KAAKqF,eAIJ,SAAA/B,GACvB,MAAO,KAIIJ,CAA6C4I,G,gECjBtDG,G,kDACJ,WAAYhP,GAAQ,IAAD,8BACjB,cAAMA,IASRiP,uBAAyB,SAAC/O,GACxB,EAAKW,SAAS,CACZqO,SAAUhP,EAAME,OAAOiB,SAZR,EAgBnB8N,uBAAyB,SAACjP,GACxB,EAAKW,SAAS,CACZjD,SAAUsC,EAAME,OAAOiB,SAlBR,EAsBnB+N,YAtBmB,wBAsBL,6BAAAjP,EAAA,6DACZ,EAAKU,SAAS,CACZwO,WAAY,KAFF,kBAKO9R,aAAe,EAAK0D,MAAMiO,SAAU,EAAKjO,MAAMrD,UALtD,QAKNN,EALM,SAMmB,IAAjBA,EAAKwL,SACf,EAAKjI,SAAS,CACZwO,WAAY/R,EAAKgS,UAGjBhS,GAAyB,IAAjBA,EAAKwL,UAEfxH,QAAQC,IAAI,mBAAoBjE,EAAKyF,MACrC,EAAK/C,MAAMwI,iBAAiBlL,EAAKyF,OAdzB,gDAiBVzB,QAAQC,IAAI,KAAEnE,SAASE,KAAKgS,SACxB,KAAElS,UACA,KAAEA,SAASE,MACb,EAAKuD,SAAS,CACZwO,WAAY,KAAEjS,SAASE,KAAKgS,UArBxB,yDAtBK,EAkDnBC,uBAAyB,WACvB,EAAK1O,SAAS,CACZ2O,gBAAiB,EAAKvO,MAAMuO,kBApDb,EAwDnBC,cAAgB,SAACvP,GACG,UAAdA,EAAMwM,KAAqC,KAAlBxM,EAAMwP,UACjCpO,QAAQC,IAAI,WAAarB,GACzB,EAAKkP,gBAzDP,EAAKnO,MAAQ,CACXiO,SAAU,GACVtR,SAAU,GACV4R,gBAAgB,EAChBH,WAAY,IANG,E,0CA+DnB,WAAU,IAAD,OAEP,OACE,qBAAKzK,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,oBAAf,mBACA,sBAAKA,UAAU,gCAAf,UACE,+CACA,uBAAOC,KAAK,OACVD,UAAU,eACV+K,YAAY,sBACZtO,MAAOmC,KAAKvC,MAAMiO,SAClBpK,SAAU,SAAC5E,GAAD,OAAW,EAAK+O,uBAAuB/O,SAGrD,sBAAK0E,UAAU,gCAAf,UACE,+CACA,sBAAKA,UAAU,wBAAf,UACE,uBAAOC,KAAMrB,KAAKvC,MAAMuO,eAAiB,OAAS,WAChD5K,UAAU,eACV+K,YAAY,sBACZtO,MAAOmC,KAAKvC,MAAMrD,SAClBkH,SAAU,SAAC5E,GAAD,OAAW,EAAKiP,uBAAuBjP,IACjD0P,UAAW,SAAC1P,GAAD,OAAW,EAAKuP,cAAcvP,MAE3C,sBAAM0F,QAAS,WAAQ,EAAK2J,0BAA5B,SAEE,mBAAG3K,UAAWpB,KAAKvC,MAAMuO,eAAiB,aAAe,6BAI/D,qBAAK5K,UAAU,SAASc,MAAO,CAAEmK,MAAO,OAAxC,SACGrM,KAAKvC,MAAMoO,aAEd,qBAAKzK,UAAU,oBAAf,SACE,wBAAQA,UAAU,YAAYgB,QAAS,WAAQ,EAAKwJ,eAApD,qBAEF,qBAAKxK,UAAU,SAAf,SACE,sBAAMA,UAAU,kBAAhB,qCAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAMA,UAAU,mBAAhB,8BAEF,sBAAKA,UAAU,sBAAf,UACE,mBAAGA,UAAU,gCACb,mBAAGA,UAAU,6C,GA9GPoB,aAqILC,sBAdS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,CACLyJ,SAAU,SAACC,GAAD,OAAU1J,EAASsB,aAAKoI,KAElCvH,iBAAkB,SAACwH,GAAD,OAAe3J,EAASC,KAAyB0J,QAIxD/J,CAA6C+I,I,qEC9ItDiB,GAAW,I,QAAIC,GACrBD,GAASE,gBAAgB,GAElB,IAAMC,GAAUH,GCCjBI,G,kDAEJ,WAAYrQ,GAAQ,IAAD,8BACjB,cAAMA,IAgCRsQ,OAAS,WACP,EAAKtQ,MAAMuQ,oBAlCM,EAqCnBC,oBAAsB,SAACtQ,EAAO9B,GAU5B,IAAIgD,EAAS,eAAQ,EAAKH,OAC1BG,EAAUhD,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eAAmBO,KAjDF,EAsDnBqP,iBAAmB,WAGjB,IAFA,IAAIhP,GAAU,EACViP,EAAW,CAAC,QAAS,WAAY,YAAa,WAAY,UAAW,eAChE/O,EAAI,EAAGA,EAAI+O,EAAS9O,OAAQD,IACnC,IAAK,EAAKV,MAAMyP,EAAS/O,IAAK,CAC5BF,GAAU,EACVkP,MAAM,uBAAyBD,EAAS/O,IACxC,MAGJ,OAAOF,GAhEU,EAmEnBmP,iBAAmB,YAED,IADF,EAAKH,oBAEjB,EAAKzQ,MAAMiC,cAAc,EAAKhB,QApEhC,EAAKA,MAAQ,CACXtD,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVC,QAAS,GACTI,YAAa,IAIf,EAAKqO,kBAZY,E,mDAenB,WAAmB,IAAD,OAChBT,GAAQU,GAAG,0BAA0B,WACnC,EAAKjQ,SAAS,CACZlD,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVC,QAAS,GACTI,YAAa,U,+BAQnB,c,oBA6CA,WAAU,IAAD,OACP,OACE,eAACuO,GAAA,EAAD,CACE7P,OAAQsC,KAAKxD,MAAMkB,OACnBoP,OAAQ,WAAQ,EAAKA,UACrB1L,UAAW,uBACXoM,KAAK,KACLC,UAAQ,EALV,UAOE,cAACC,GAAA,EAAD,CAAaZ,OAAQ,WAAQ,EAAKA,UAAlC,+BACA,cAACa,GAAA,EAAD,UACE,sBAAKvM,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,0CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,UACvDmB,MAAOmC,KAAKvC,MAAMtD,WAGtB,sBAAKiH,UAAU,kBAAf,UACE,6CACA,uBAAOC,KAAK,WACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,aACvDmB,MAAOmC,KAAKvC,MAAMrD,cAGtB,sBAAKgH,UAAU,kBAAf,UACE,+CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,cACvDmB,MAAOmC,KAAKvC,MAAMiB,eAGtB,sBAAK0C,UAAU,kBAAf,UACE,8CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,aACvDmB,MAAOmC,KAAKvC,MAAMkB,cAGtB,sBAAKyC,UAAU,iCAAf,UACE,4CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,YACvDmB,MAAOmC,KAAKvC,MAAMmB,aAGtB,sBAAKwC,UAAU,iCAAf,UACE,iDACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,gBACvDmB,MAAOmC,KAAKvC,MAAMuB,sBAoB1B,eAAC4O,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACExB,MAAM,UACNjL,UAAU,OACVgB,QAAS,WAAQ,EAAKgL,oBAHxB,yBAIuB,IACvB,cAACS,GAAA,EAAD,CAAQxB,MAAM,YAAYjL,UAAU,OAAOgB,QAAS,WAAQ,EAAK0K,UAAjE,6B,GA3JctK,aA6KTC,sBAVS,SAAAhF,GACtB,MAAO,MAIkB,SAAAoF,GACzB,MAAO,KAIMJ,CAA6CoK,I,oBC5KtDiB,G,kDAEJ,WAAYtR,GAAQ,IAAD,8BACjB,cAAMA,IA8CRsQ,OAAS,WACP,EAAKtQ,MAAMuQ,oBAhDM,EAmDnBC,oBAAsB,SAACtQ,EAAO9B,GAU5B,IAAIgD,EAAS,eAAQ,EAAKH,OAC1BG,EAAUhD,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eAAmBO,KA/DF,EAoEnBqP,iBAAmB,WAGjB,IAFA,IAAIhP,GAAU,EACViP,EAAW,CAAC,QAAS,WAAY,YAAa,WAAY,UAAW,eAChE/O,EAAI,EAAGA,EAAI+O,EAAS9O,OAAQD,IACnC,IAAK,EAAKV,MAAMyP,EAAS/O,IAAK,CAC5BF,GAAU,EACVkP,MAAM,uBAAyBD,EAAS/O,IACxC,MAGJ,OAAOF,GA9EU,EAiFnB8P,iBAAmB,YAED,IADF,EAAKd,oBAEjB,EAAKzQ,MAAMwR,SAAS,EAAKvQ,QAlF3B,EAAKA,MAAQ,CACX7C,GAAI,GACJT,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVC,QAAS,GACTI,YAAa,IAIf,EAAKqO,kBAbY,E,mDAgBnB,WAAmB,IAAD,OAChBT,GAAQU,GAAG,0BAA0B,WACnC,EAAKjQ,SAAS,CACZlD,MAAO,GACPC,SAAU,GACVsE,UAAW,GACXC,SAAU,GACVC,QAAS,GACTI,YAAa,U,+BAQnB,WACE,IAAIO,EAAOS,KAAKxD,MAAMyR,YAElB1O,IAAS2O,KAAEC,QAAQ5O,IACrBS,KAAK3C,SAAS,CACZzC,GAAI2E,EAAK3E,GACTT,MAAOoF,EAAKpF,MACZC,SAAU,WACVsE,UAAWa,EAAKb,UAChBC,SAAUY,EAAKZ,SACfC,QAASW,EAAKX,QACdI,YAAaO,EAAKP,gB,oBA+CxB,WAAU,IAAD,OACP,OACE,eAACuO,GAAA,EAAD,CACE7P,OAAQsC,KAAKxD,MAAMkB,OACnBoP,OAAQ,WAAQ,EAAKA,UACrB1L,UAAW,uBACXoM,KAAK,KACLC,UAAQ,EALV,UAOE,cAACC,GAAA,EAAD,CAAaZ,OAAQ,WAAQ,EAAKA,UAAlC,6BACA,cAACa,GAAA,EAAD,UACE,sBAAKvM,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,0CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,UACvDmB,MAAOmC,KAAKvC,MAAMtD,MAClBoH,UAAQ,OAGZ,sBAAKH,UAAU,kBAAf,UACE,6CACA,uBAAOC,KAAK,WACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,aACvDmB,MAAOmC,KAAKvC,MAAMrD,SAClBmH,UAAQ,OAGZ,sBAAKH,UAAU,kBAAf,UACE,+CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,cACvDmB,MAAOmC,KAAKvC,MAAMiB,eAGtB,sBAAK0C,UAAU,kBAAf,UACE,8CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,aACvDmB,MAAOmC,KAAKvC,MAAMkB,cAGtB,sBAAKyC,UAAU,iCAAf,UACE,4CACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,YACvDmB,MAAOmC,KAAKvC,MAAMmB,aAGtB,sBAAKwC,UAAU,iCAAf,UACE,iDACA,uBAAOC,KAAK,OACVC,SAAU,SAAC5E,GAAY,EAAKsQ,oBAAoBtQ,EAAO,gBACvDmB,MAAOmC,KAAKvC,MAAMuB,sBAoB1B,eAAC4O,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACExB,MAAM,UACNjL,UAAU,OACVgB,QAAS,WAAQ,EAAK2L,oBAHxB,yBAIuB,IACvB,cAACF,GAAA,EAAD,CAAQxB,MAAM,YAAYjL,UAAU,OAAOgB,QAAS,WAAQ,EAAK0K,UAAjE,6B,GA3KkBtK,aA6LbC,sBAVS,SAAAhF,GACtB,MAAO,MAIkB,SAAAoF,GACzB,MAAO,KAIMJ,CAA6CqL,IC3LtDM,G,kDAEF,WAAY5R,GAAQ,IAAD,8BACf,cAAMA,IAaV6R,qBAdmB,wBAcI,6BAAA1R,EAAA,sEACEtC,aAAY,OADd,QACfT,EADe,SAGkB,IAArBA,EAAS0L,SACrB,EAAKjI,SAAS,CACVqG,SAAU9J,EAASgJ,QALR,2CAdJ,EAwBnBwK,iBAAmB,WACf,EAAK/P,SAAS,CACViR,iBAAiB,KA1BN,EA8BnBC,gBAAkB,WACd,EAAKlR,SAAS,CACViR,iBAAkB,EAAK7Q,MAAM6Q,mBAhClB,EAoCnBE,oBAAsB,WAClB,EAAKnR,SAAS,CACVoR,qBAAsB,EAAKhR,MAAM6Q,mBAtCtB,EA0CnB7P,cA1CmB,yCA0CH,WAAO3E,GAAP,gBAAA6C,EAAA,6DACZmB,QAAQC,IAAIjE,GADA,kBAGaU,aAAqBV,GAHlC,YAGJF,EAHI,SAI6B,IAArBA,EAAS0L,QAJjB,gBAKJ6H,MAAMvT,EAASiS,YALX,wCAOE,EAAKwC,uBAPP,QAQJ,EAAKhR,SAAS,CACViR,iBAAiB,IAErB1B,GAAQ8B,KAAK,0BAXT,0DAcR5Q,QAAQC,IAAR,MAdQ,0DA1CG,wDA6DnBuF,iBA7DmB,yCA6DA,WAAO/D,GAAP,gBAAA5C,EAAA,+EAEKlC,aAAkB8E,EAAK3E,IAF5B,YAEPyK,EAFO,SAGgB,IAAhBA,EAAIC,QAHJ,gCAID,EAAK+I,uBAJJ,8BAMPlB,MAAM,yBANC,oHA7DA,wDA0EnB3J,eA1EmB,yCA0EF,WAAOjE,GAAP,UAAA5C,EAAA,sDACb,IACI,EAAKU,SAAS,CACVoR,qBAAqB,EACrBE,SAAUpP,IAEhB,MAAOqP,IANI,2CA1EE,wDAqFnBb,iBArFmB,yCAqFA,WAAOxO,GAAP,gBAAA5C,EAAA,+EAEK9B,aAAkB0E,GAFvB,YAEP8F,EAFO,SAGgB,IAAhBA,EAAIC,QAHJ,wBAIP,EAAKjI,SAAS,CACVoR,qBAAqB,IALlB,SAOD,EAAKJ,uBAPJ,+BASPlB,MAAM,0CAA2C9H,EAAIC,SAT9C,0DAYXxH,QAAQC,IAAR,MAZW,0DArFA,sDAEf,EAAKN,MAAQ,CACTiG,SAAU,GACV4K,iBAAiB,EACjBG,qBAAqB,EACrBE,SAAU,IANC,E,8FAUnB,uBAAAhS,EAAA,sEACUqD,KAAKqO,uBADf,gD,0EAqGA,WAAU,IAAD,OACD3K,EAAW1D,KAAKvC,MAAMiG,SAC1B,OACI,sBAAKtC,UAAU,kBAAf,UACI,cAAC,GAAD,CACI1D,OAAQsC,KAAKvC,MAAM6Q,gBACnBvB,iBAAkB/M,KAAKuO,gBACvB9P,cAAeuB,KAAKvB,gBAGpBuB,KAAKvC,MAAMgR,qBAEX,cAAC,GAAD,CACI/Q,OAAQsC,KAAKvC,MAAMgR,oBACnB1B,iBAAkB/M,KAAKwO,oBACvBP,YAAajO,KAAKvC,MAAMkR,SACxBX,SAAUhO,KAAK+N,mBAGvB,qBAAK3M,UAAU,oBAAf,oCAGA,qBAAKA,UAAU,OAAf,SACI,yBAAQA,UAAU,uBACdgB,QAAS,kBAAM,EAAKgL,oBADxB,UAC4C,mBAAGhM,UAAU,gBADzD,qBAGJ,qBAAKA,UAAU,wBAAf,SACI,uBAAOxG,GAAG,YAAV,SACI,kCACI,+BACI,uCACA,4CACA,2CACA,yCACA,8CACA,2CAGH8I,GAAYA,EAASjC,KAAI,SAACC,EAAMC,GAC7B,OACI,+BACI,6BAAKD,EAAKvH,QACV,6BAAKuH,EAAKhD,YACV,6BAAKgD,EAAK/C,WACV,6BAAK+C,EAAK9C,UACV,6BAAK8C,EAAK1C,cACV,+BACI,wBAAQoC,UAAU,WAAWgB,QAAS,kBAAM,EAAKoB,eAAe9B,IAAhE,SAAuE,mBAAGN,UAAU,wBACpF,wBAAQA,UAAU,aAAagB,QAAS,kBAAM,EAAKkB,iBAAiB5B,IAApE,SAA2E,mBAAGN,UAAU,0C,GAjK3GoB,aA4LVC,sBAVS,SAAAhF,GACpB,MAAO,MAIgB,SAAAoF,GACvB,MAAO,KAIIJ,CAA6C2L,I,yEC9LtDS,G,4JAEF,WACI,MAA2B7O,KAAKxD,MAAxBsS,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACd,OACI,qBAAI3N,UAAU,aAAd,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,KAAD,CAAkBxG,GAAIkU,MAE1B,oBAAI1N,UAAU,0BAAd,SACK2N,W,GAVGvM,aAiBlBwM,G,4JAEF,WACI,MAA2EhP,KAAKxD,MAAxEsS,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,KAAMH,EAA5B,EAA4BA,SAAU3M,EAAtC,EAAsCA,QAAS+M,EAA/C,EAA+CA,WAAYC,EAA3D,EAA2DA,YAC3D,OACI,oBAAIhO,UAAW,QAAU+N,EAAa,gBAAkB,KAAcF,EAAS,UAAY,IAA3F,SACKE,EACG,eAAC,WAAD,WACI,uBACIE,cAAY,WACZjO,UAAW,sBACXgB,QAASA,EACTkN,gBAAe,QAJnB,UAMI,cAAC,KAAD,CAAkB1U,GAAIkU,IACtB,qBAAK1N,UAAU,aAAf,SACI,mBAAGA,UAAW,4BAGtB,8BACI,oBAAIA,UAAU,8BAAd,SACK2N,SAKT,cAAC,KAAD,CAAMxD,GAAI2D,EAAM9N,UAAU,YAAYgB,QAASgN,EAA/C,SACI,cAAC,KAAD,CAAkBxU,GAAIkU,Y,GA3B/BtM,aAmCb+M,G,4MAEFC,aAAe,SAAAjD,GACX,OAAO,EAAK/P,MAAMP,SAASwT,WAAalD,EAAO,SAAW,I,4CAG9D,WACI,MAAoCvM,KAAKxD,MAAjCsS,EAAR,EAAQA,KAAMI,EAAd,EAAcA,KAAME,EAApB,EAAoBA,YACpB,OACI,oBAAIhO,UAAW,YAAcpB,KAAKwP,aAAaN,GAA/C,SACI,cAAC,KAAD,CAAM3D,GAAI2D,EAAM9N,UAAU,gBAAgBgB,QAASgN,EAAnD,SACI,cAAC,KAAD,CAAkBxU,GAAIkU,Y,GAXpBtM,aAkBhBkN,GAAsB/K,YAAWkK,IACjCc,GAAiBhL,YAAWqK,IAC5BY,GAAoBjL,YAAW4K,IAkB/BM,G,4MACFpS,MAAQ,CACJqS,aAAc,I,EAGlBhD,OAAS,SAACiD,EAAYC,GAClB,IAAMF,EAAe,MAC0D,IAA1D,EAAKrS,MAAMqS,aAAaC,EAAa,IAAMC,MAE5DF,EAAaC,EAAa,IAAMC,IAAa,GAGjD,EAAK3S,SAAS,CACVyS,aAAcA,K,EAItBG,uBAAyB,SAAChU,EAAUiU,EAAUhB,GAC1C,GAAIgB,EAAU,CACV,GAAwB,IAApBA,EAAS9R,OACT,OAAO,EAIX,IADA,IAAM+R,EAAclU,EAASwT,SACpBtR,EAAI,EAAGA,EAAI+R,EAAS9R,OAAQD,IAAK,CAEtC,GADgB+R,EAAS/R,GACb+Q,OAASiB,EACjB,OAAO,GAKnB,QAAIjB,GACO,EAAK1S,MAAMP,SAASwT,WAAaP,G,EAMhDkB,gBAAkB,WACd,MAA4B,EAAK5T,MAAzB6T,EAAR,EAAQA,MAAOpU,EAAf,EAAeA,SACfqU,EACA,IAAK,IAAInS,EAAI,EAAGA,EAAIkS,EAAMjS,OAAQD,IAAK,CACnC,IAAMoS,EAAQF,EAAMlS,GACpB,GAAIoS,EAAMF,OAASE,EAAMF,MAAMjS,OAAS,EACpC,IAAK,IAAIoS,EAAI,EAAGA,EAAID,EAAMF,MAAMjS,OAAQoS,IAAK,CACzC,IAAMC,EAAOF,EAAMF,MAAMG,GACzB,GAAIC,EAAKP,UAAYO,EAAKP,SAAS9R,OAAS,GACpC,EAAK6R,uBAAuBhU,EAAUwU,EAAKP,SAAU,MAAO,CAC5D,IAAMhH,EAAM/K,EAAI,IAAMqS,EACtB,EAAKnT,SAAS,CACVyS,aAAa,gBACR5G,GAAM,KAGf,MAAMoH,M,uDAQ9B,WACItQ,KAAKoQ,oB,gCAiBT,SAAmBhQ,EAAWC,GACLL,KAAKxD,MAAlBP,WAC2BmE,EAA3BnE,UAEJ+D,KAAKoQ,oB,oBAIb,WAAU,IAAD,OACL,EAAyCpQ,KAAKxD,MAAtC6T,EAAR,EAAQA,MAAOpU,EAAf,EAAeA,SAAUmT,EAAzB,EAAyBA,YACzB,OACI,cAAC,WAAD,UACI,oBAAIhO,UAAU,+BAAd,SAEQiP,EAAM5O,KAAI,SAAC8O,EAAOR,GACd,OACI,cAAC,WAAD,UACI,cAACL,GAAD,CAAqBZ,KAAMyB,EAAMzB,KAAjC,SACKyB,EAAMF,MACHE,EAAMF,MAAM5O,KAAI,SAACgP,EAAMT,GACnB,IAAMC,EAAyB,EAAKA,uBAAuBhU,EAAUwU,EAAKP,SAAUO,EAAKvB,MACnFwB,GAA0E,IAA1D,EAAKjT,MAAMqS,aAAaC,EAAa,IAAMC,GACjE,OACI,cAACL,GAAD,CAEIV,OAAQgB,EACRnB,KAAM2B,EAAK3B,KACXI,KAAMuB,EAAKvB,KACXC,WAAYsB,EAAKP,SACjBxS,OAAQgT,EACRtO,QAAS,kBAAM,EAAK0K,OAAOiD,EAAYC,IACvCZ,YAAaA,EARjB,SAUKqB,EAAKP,UAAYO,EAAKP,SAASzO,KAAI,SAACkP,EAASC,GAAV,OAChC,cAAChB,GAAD,CAEId,KAAM6B,EAAQ7B,KACdI,KAAMyB,EAAQzB,KACd9M,QAAS,EAAKyO,iBACdzB,YAAaA,GAJRwB,OAXRZ,MAqBjB,QA7BGD,c,GAjGvBvN,aAoJTsO,GApKY,SAACC,GAAsB,IAExCC,EAFuC,4JAGzC,WACI,MAAgChR,KAAKxD,MAA7ByU,EAAR,EAAQA,WAAeC,EAAvB,mBACA,OAAO,cAACH,EAAD,2BAAsBG,GAAtB,IAA4BC,IAAKF,SALH,GAETG,IAAM5O,WAOpC6O,EAAmB1M,YAAWqM,EAAuB,CAAEM,SAAS,IAEtE,OAAOF,IAAMH,YAAW,SAACzU,EAAO2U,GAC5B,OAAO,cAACE,EAAD,2BAAsB7U,GAAtB,IAA6ByU,WAAYE,QAwJzCL,CAAmBrO,mBAVV,SAAAhF,GACpB,MAAO,MAIgB,SAAAoF,GACvB,MAAO,KAIuBJ,CAA6CoN,KCrPlE0B,GAAY,CACrB,CACIzC,KAAM,yBACNuB,MAAO,CACH,CACIvB,KAAM,kBAAmBI,KAAM,uBAEnC,CACIJ,KAAM,wBAAyBI,KAAM,sBAEzC,CACIJ,KAAM,2BAA4BI,KAAM,yBAU5C,CACIJ,KAAM,8BAA+BI,KAAM,6BAKvD,CACIJ,KAAM,oBACNuB,MAAO,CACH,CACIvB,KAAM,2BAA4BI,KAAM,2BAMpD,CACIJ,KAAM,uBACNuB,MAAO,CACH,CACIvB,KAAM,8BAA+BI,KAAM,8BAMvD,CACIJ,KAAM,sBACNuB,MAAO,CACH,CACIvB,KAAM,6BAA8BI,KAAM,8BAQ7CsC,GAAa,CACtB,CACI1C,KAAM,yBACNuB,MAAO,CACH,CACIvB,KAAM,8BAA+BI,KAAM,2BAE/C,CACIJ,KAAM,6BAA8BI,KAAM,6BCxDpDuC,I,yDACF,WAAYjV,GAAQ,IAAD,8BACf,cAAMA,IAKVkV,qBAAuB,SAACxQ,GACpB,EAAK1E,MAAMmV,uBAAuBzQ,IALlC,EAAKzD,MAAQ,CACTmU,QAAS,IAHE,E,qDAUnB,WACI,IAAM3M,EAAajF,KAAKxD,MAAlByI,SACFwL,EAAO,GACX,GAAIxL,IAAaiJ,KAAEC,QAAQlJ,GAAW,CAClC,IAAIlG,EAAOkG,EAASnG,OAChBC,IAAS8S,IAAUC,QACnBrB,EAAOc,IAEPxS,IAAS8S,IAAUE,SACnBtB,EAAOe,IAIfxR,KAAK3C,SAAS,CACVuU,QAASnB,M,oBAKjB,WAAU,IAAD,OACL,EAA8CzQ,KAAKxD,MAA3C0I,EAAR,EAAQA,cAAehE,EAAvB,EAAuBA,SAAU+D,EAAjC,EAAiCA,SAGjC,OAFAnH,QAAQC,IAAI,qBAAsBkH,EAASvG,UAAWuG,EAAStG,UAG3D,sBAAKyC,UAAU,mBAAf,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,GAAD,CAAWiP,MAAOrQ,KAAKvC,MAAMmU,YAEjC,sBAAKxQ,UAAU,YAAf,UACI,uBAAMA,UAAU,UAAhB,UAA0B,cAAC,KAAD,CAAkBxG,GAAG,wBAC1CqK,GAAYA,EAASvG,UAAYuG,EAASvG,UAAY,GAD3D,KACiEuG,GAAYA,EAAStG,SAAWsG,EAAStG,SAAW,GADrH,QAEA,sBACIyC,UAAWF,IAAaU,IAAUoQ,GAAK,qBAAuB,cAC9D5P,QAAS,kBAAM,EAAKsP,qBAAqB9P,IAAUoQ,KAFvD,gBAIA,sBACI5Q,UAAWF,IAAaU,IAAUC,GAAK,qBAAuB,cAC9DO,QAAS,kBAAM,EAAKsP,qBAAqB9P,IAAUC,KAFvD,gBAKA,qBAAKT,UAAU,iBAAiBgB,QAAS8C,EAAe+M,MAAM,UAA9D,SACI,mBAAG7Q,UAAU,oC,GArDhBoB,cA6ENC,sBAfS,SAAAhF,GACpB,MAAO,CACHmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,SACpB+D,SAAUxH,EAAM8B,KAAK0F,aAIF,SAAApC,GACvB,MAAO,CACHqC,cAAe,kBAAMrC,EAASC,SAC9B6O,uBAAwB,SAACzQ,GAAD,OAAc2B,EAASC,KAA0B5B,QAIlEuB,CAA6CgP,I,wDCvEtDzO,GAAW,IAAIC,KAEfiP,G,kDAEJ,WAAY1V,GAAQ,IAAD,8BACjB,cAAMA,IAmCR2V,oBAAsB,SAACC,EAAW/Q,GAChC,IAAIgR,EAAS,GACPnR,EAAa,EAAK1E,MAAlB0E,SAkDN,OAjDIkR,GAAaA,EAAUhU,OAAS,IACrB,UAATiD,GACF+Q,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACTC,EAAO,UAAM7Q,EAAK/C,SAAX,YAAuB+C,EAAKhD,WACnC8T,EAAO,UAAM9Q,EAAKhD,UAAX,YAAwBgD,EAAK/C,UACxC2T,EAAOG,MAAQvR,IAAaU,IAAUC,GAAK0Q,EAAUC,EACrDF,EAAOzU,MAAQ6D,EAAK9G,GACpByX,EAAOlO,KAAKmO,MAGH,UAATjR,GACF+Q,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACTC,EAAO,UAAM7Q,EAAKI,SAClB0Q,EAAO,UAAM9Q,EAAKK,QAAX,QACXuQ,EAAOG,MAAQvR,IAAaU,IAAUC,GAAK0Q,EAAUC,EACrDF,EAAOzU,MAAQ6D,EAAKjB,OACpB4R,EAAOlO,KAAKmO,MAGH,YAATjR,GAA+B,aAATA,GACxB+Q,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACTC,EAAO,UAAM7Q,EAAKI,SAClB0Q,EAAO,UAAM9Q,EAAKK,SACtBuQ,EAAOG,MAAQvR,IAAaU,IAAUC,GAAK0Q,EAAUC,EACrDF,EAAOzU,MAAQ6D,EAAKjB,OACpB4R,EAAOlO,KAAKmO,MAGH,cAATjR,GACF+Q,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACbA,EAAOG,MAAQ/Q,EAAKoN,KACpBwD,EAAOzU,MAAQ6D,EAAK9G,GACpByX,EAAOlO,KAAKmO,MAGH,WAATjR,GACF+Q,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACbA,EAAOG,MAAQ/Q,EAAKoN,KACpBwD,EAAOzU,MAAQ6D,EAAK9G,GACpByX,EAAOlO,KAAKmO,OAKXD,GAxFU,EAiInB/O,iBAAmB,SAAC/D,KAjID,EAqInB2D,mBAAqB,YAAqB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,EAAK/F,SAAS,CACZqV,gBAAiBtP,EACjBuP,YAAaxP,KAxIE,EA4InByP,0BAA4B,WAC1B,IAAMC,EAAe,EAAKpV,MAApBoV,WACN,EAAKrW,MAAMpB,kBAAkB,CAC3BuX,YAAa,EAAKlV,MAAMkV,YACxBD,gBAAiB,EAAKjV,MAAMiV,gBAC5BI,YAAa,EAAKrV,MAAMqV,YACxBtX,SAAU,EAAKiC,MAAMsV,eAAelV,MACpCS,QAAuB,IAAfuU,EAAsBtU,IAAaqB,KAAOrB,IAAaC,OAE/DwU,cAAe,EAAKvV,MAAMuV,cAAcnV,MACxCoV,gBAAiB,EAAKxV,MAAMwV,gBAAgBpV,MAC5CqV,iBAAkB,EAAKzV,MAAMyV,iBAAiBrV,MAC9CsV,WAAY,EAAK1V,MAAM0V,WACvBC,cAAe,EAAK3V,MAAM2V,cAC1BC,KAAM,EAAK5V,MAAM4V,KACjBC,SAAU,EAAK7V,MAAM8V,gBAAkB,EAAK9V,MAAM8V,eAAe1V,MAAQ,EAAKJ,MAAM8V,eAAe1V,MAAQ,GAC3G2V,YAAa,EAAK/V,MAAMgW,kBAAkB5V,SA5J3B,EAgKnB6V,mBAhKmB,yCAgKE,WAAOX,GAAP,wDAAApW,EAAA,6DACnB,EAAKU,SAAS,CAAE0V,mBADG,EAEuD,EAAKtV,MAAzEkW,EAFa,EAEbA,YAAaC,EAFA,EAEAA,UAAWC,EAFX,EAEWA,aAAcC,EAFzB,EAEyBA,cAAeC,EAFxC,EAEwCA,WAFxC,SAIH1Y,aAAqB0X,EAAelV,OAJjC,QAIfwH,EAJe,SAKQ,IAAhBA,EAAIC,SAAiBD,EAAIvL,MAAQuL,EAAIvL,KAAKka,UAC/CA,EAAW3O,EAAIvL,KAAKka,SACpBZ,EAAgB,GAAID,EAAa,GAAIE,EAAO,GAC9CY,EAAY,GAAIC,EAAU,GAAIC,EAAa,GAAIX,EAAc,GAAIF,EAAW,GAC5EL,EAAkB,GAAID,EAAgB,GAAIE,EAAmB,GAAIK,EAAiB,GAClFE,EAAoB,GAClBpO,EAAIvL,KAAKsa,cACXhB,EAAgB/N,EAAIvL,KAAKsa,YAAYhB,cACrCD,EAAa9N,EAAIvL,KAAKsa,YAAYjB,WAClCE,EAAOhO,EAAIvL,KAAKsa,YAAYf,KAC5BY,EAAY5O,EAAIvL,KAAKsa,YAAYH,UACjCC,EAAU7O,EAAIvL,KAAKsa,YAAYF,QAC/BC,EAAa9O,EAAIvL,KAAKsa,YAAYD,WAClCX,EAAcnO,EAAIvL,KAAKsa,YAAYZ,YACnCF,EAAWjO,EAAIvL,KAAKsa,YAAYd,SAEhCL,EAAkBU,EAAYU,MAAK,SAAA3S,GACjC,OAAOA,GAAQA,EAAK7D,QAAUoW,KAEhCjB,EAAgBY,EAAUS,MAAK,SAAA3S,GAC7B,OAAOA,GAAQA,EAAK7D,QAAUqW,KAEhChB,EAAmBW,EAAaQ,MAAK,SAAA3S,GACnC,OAAOA,GAAQA,EAAK7D,QAAUsW,KAGhCV,EAAoBK,EAAcO,MAAK,SAAA3S,GACrC,OAAOA,GAAQA,EAAK7D,QAAU2V,KAEhCD,EAAiBQ,EAAWM,MAAK,SAAA3S,GAC/B,OAAOA,GAAQA,EAAK7D,QAAUyV,MAGlC,EAAKjW,SAAS,CACZsV,YAAaqB,EAASrB,YACtBD,gBAAiBsB,EAAStB,gBAC1BI,YAAakB,EAASlB,YACtBD,YAAY,EACZO,cAAeA,EACfD,WAAYA,EACZE,KAAMA,EACNJ,gBAAiBA,EACjBD,cAAeA,EACfE,iBAAkBA,EAClBO,kBAAmBA,EACnBF,eAAgBA,KAGlB,EAAKlW,SAAS,CACZsV,YAAa,GACbD,gBAAiB,GACjBI,YAAa,GACbD,YAAY,EACZO,cAAe,GACfD,WAAY,GACZE,KAAM,GACNJ,gBAAiB,GACjBD,cAAe,GACfE,iBAAkB,GAClBO,kBAAmB,GACnBF,eAAgB,KAjED,2CAhKF,wDAuOnBe,8BAvOmB,yCAuOa,WAAOvB,EAAgBjE,GAAvB,kBAAAnS,EAAA,sDAC1B4X,EAAYzF,EAAKA,MACjB0F,EAF0B,eAET,EAAK/W,QAChB8W,GAAaxB,EACvB,EAAK1V,SAAL,eACKmX,IALyB,2CAvOb,0DAgPnBC,mBAAqB,SAAC/X,EAAO9B,GAC3B,IAAI4Z,EAAS,eAAQ,EAAK/W,OAC1B+W,EAAU5Z,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eACKmX,KAlPL,EAAK/W,MAAQ,CAEXiV,gBAAiB,GACjBC,YAAa,GACbI,eAAgB,GAChBD,YAAa,GACb4B,YAAa,GACb7B,YAAY,EAEZe,UAAW,GACXD,YAAa,GACbE,aAAc,GACdE,WAAY,GACZD,cAAe,GAEfd,cAAe,GACfC,gBAAiB,GACjBC,iBAAkB,GAClBK,eAAgB,GAChBE,kBAAmB,GACnBN,WAAY,GACZC,cAAe,GACfC,KAAM,GACNC,SAAU,GACVE,YAAa,IA1BE,E,8FA+BnB,uBAAA7W,EAAA,sDACEqD,KAAKxD,MAAM2K,kBACXnH,KAAKxD,MAAMgL,4BAFb,gD,sFA4DA,SAAmBpH,EAAWC,EAAWC,GACvC,GAAIF,EAAUqI,aAAezI,KAAKxD,MAAMiM,WAAY,CAClD,IAAIkM,EAAa3U,KAAKmS,oBAAoBnS,KAAKxD,MAAMiM,WAAY,SACjEzI,KAAK3C,SAAS,CACZqX,YAAaC,IAIjB,GAAIvU,EAAUuI,yBAA2B3I,KAAKxD,MAAMmM,uBAAwB,CAC1E,MAAqE3I,KAAKxD,MAAMmM,uBAA1EjB,EAAN,EAAMA,WAAYD,EAAlB,EAAkBA,SAAUE,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aAAcC,EAAvD,EAAuDA,UACnD+M,EAAkB5U,KAAKmS,oBAAoB1K,EAAU,SACrDoN,EAAoB7U,KAAKmS,oBAAoBzK,EAAY,WACzDoN,EAAqB9U,KAAKmS,oBAAoBxK,EAAa,YAC3DoN,EAAsB/U,KAAKmS,oBAAoBvK,EAAc,aAC7DoN,EAAmBhV,KAAKmS,oBAAoBtK,EAAW,UAC3D7H,KAAK3C,SAAS,CACZuW,UAAWgB,EACXjB,YAAakB,EACbhB,aAAciB,EACdhB,cAAeiB,EACfhB,WAAYiB,IAGhB,GAAI5U,EAAUc,WAAalB,KAAKxD,MAAM0E,SAAU,CAC9C,IAAIyT,EAAa3U,KAAKmS,oBAAoBnS,KAAKxD,MAAMiM,WAAY,SACjE,EAA4CzI,KAAKxD,MAAMmM,uBAAjDjB,EAAN,EAAMA,WAAYD,EAAlB,EAAkBA,SAAUE,EAA5B,EAA4BA,YACxBiN,EAAkB5U,KAAKmS,oBAAoB1K,EAAU,SACrDoN,EAAoB7U,KAAKmS,oBAAoBzK,EAAY,WACzDoN,EAAqB9U,KAAKmS,oBAAoBxK,EAAa,YAC/D3H,KAAK3C,SAAS,CACZqX,YAAaC,EACbf,UAAWgB,EACXjB,YAAakB,EACbhB,aAAciB,O,oBA6HpB,WAAU,IAAD,OACDjC,EAAe7S,KAAKvC,MAApBoV,WACN,OACE,sBAAKzR,UAAU,0BAAf,UACE,sBAAKA,UAAU,sBAAf,UAAqC,cAAC,KAAD,CAAkBxG,GAAG,8BAA1D,OACA,sBAAKwG,UAAU,aAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,wCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMsV,eAClBzR,SAAUtB,KAAK0T,mBACfuB,QAASjV,KAAKvC,MAAMiX,YACpBvI,YAAa,cAAC,KAAD,CAAkBvR,GAAG,2CAGtC,sBAAKwG,UAAU,2BAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,gCAC5B,0BAAUwG,UAAU,eAClBE,SAAU,SAAC5E,GAAD,OAAW,EAAK+X,mBAAmB/X,EAAO,gBACpDmB,MAAOmC,KAAKvC,MAAMqV,oBAIxB,sBAAK1R,UAAU,uBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,gCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMuV,cAClB1R,SAAUtB,KAAKsU,8BACfW,QAASjV,KAAKvC,MAAMmW,UACpBzH,YAAa,cAAC,KAAD,CAAkBvR,GAAG,8BAClCkU,KAAK,qBAGT,sBAAK1N,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,kCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMwV,gBAClB3R,SAAUtB,KAAKsU,8BACfW,QAASjV,KAAKvC,MAAMkW,YACpBxH,YAAa,cAAC,KAAD,CAAkBvR,GAAG,gCAClCkU,KAAK,uBAGT,sBAAK1N,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,mCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMyV,iBAClB5R,SAAUtB,KAAKsU,8BACfW,QAASjV,KAAKvC,MAAMoW,aACpB1H,YAAa,cAAC,KAAD,CAAkBvR,GAAG,iCAClCkU,KAAK,wBAGT,sBAAK1N,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,qCAC5B,uBAAOwG,UAAU,eACfE,SAAU,SAAC5E,GAAD,OAAW,EAAK+X,mBAAmB/X,EAAO,eACpDmB,MAAOmC,KAAKvC,MAAM0V,gBAGtB,sBAAK/R,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,wCAC5B,uBAAOwG,UAAU,eACfE,SAAU,SAAC5E,GAAD,OAAW,EAAK+X,mBAAmB/X,EAAO,kBACpDmB,MAAOmC,KAAKvC,MAAM2V,mBAGtB,sBAAKhS,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,+BAC5B,uBAAOwG,UAAU,eACfE,SAAU,SAAC5E,GAAD,OAAW,EAAK+X,mBAAmB/X,EAAO,SACpDmB,MAAOmC,KAAKvC,MAAM4V,aAIxB,sBAAKjS,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,oCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMgW,kBAClBwB,QAASjV,KAAKvC,MAAMqW,cACpB3H,YAAa,cAAC,KAAD,CAAkBvR,GAAG,kCAClC0G,SAAUtB,KAAKsU,8BACfxF,KAAK,yBAGT,sBAAK1N,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,wCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAM8V,eAClB0B,QAASjV,KAAKvC,MAAMsW,WACpB5H,YAAa,cAAC,KAAD,CAAkBvR,GAAG,sCAClC0G,SAAUtB,KAAKsU,8BACfxF,KAAK,yBAIX,qBAAK1N,UAAU,uBAAf,SACE,cAAC,KAAD,CACEc,MAAO,CAAE0B,OAAQ,SACjBC,WAAY,SAAAT,GAAI,OAAIJ,GAASc,OAAOV,IACpC9B,SAAUtB,KAAKkD,mBACfrF,MAAOmC,KAAKvC,MAAMiV,oBAGtB,wBAAQtR,WAA0B,IAAfyR,EAAsB,sBAAwB,wBAAyBzQ,QAAS,kBAAM,EAAKwQ,6BAA9G,UACkB,IAAfC,EACC,+BAAM,cAAC,KAAD,CAAkBjY,GAAG,+BAAuC,+BAAM,cAAC,KAAD,CAAkBA,GAAG,uC,GAvW9E4H,aAiYZC,sBAlBS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,SACpBuH,WAAYhL,EAAMkF,MAAM8F,WACxBE,uBAAwBlL,EAAMkF,MAAMgG,2BAKb,SAAA9F,GACzB,MAAO,CACLsE,gBAAiB,kBAAMtE,EAASC,SAChC0E,0BAA2B,kBAAM3E,EAASC,SAC1C1H,kBAAmB,SAACtB,GAAD,OAAU+I,EAASC,KAA0BhJ,QAKrD2I,CAA6CyP,IC1YtDlP,I,OAAW,IAAIC,MAEfiS,G,kDACJ,WAAY1Y,GAAQ,IAAD,8BACjB,cAAMA,IAiBRwQ,oBAAsB,SAACtQ,EAAO9B,GAC5B,IAAI4Z,EAAS,eAAQ,EAAK/W,OAC1B+W,EAAU5Z,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eACKmX,KAtBY,EA0BnBtR,mBAAqB,YAAqB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,EAAK/F,SAAS,CACZ8X,gBAAiBhS,EACjBiS,oBAAqBhS,KA7BN,EAiCnB3G,oBAjCmB,yCAiCG,WAAOC,GAAP,oBAAAC,EAAA,yDAChB7C,EAAO4C,EAAME,OAAOC,QACpBC,EAAOhD,EAAK,IAFI,gCAICiD,IAAYC,UAAUF,GAJvB,OAIdG,EAJc,OAKlB,EAAKI,SAAS,CACZmC,YAAavC,IANG,2CAjCH,wDA4CnBoY,uBA5CmB,wBA4CM,6BAAA1Y,EAAA,sEACPb,aAAmB,EAAK2B,OADjB,QACnB4H,EADmB,SAEI,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,gCACd,EAAK7I,SAAS,CACZyR,KAAM,GACNtP,YAAa,GACb2V,gBAAiB,GACjBC,oBAAqB,OAGvBnP,IAAMI,MAAM,wBACZvI,QAAQC,IAAI,0BAA2BsH,IAZlB,2CA1CvB,EAAK5H,MAAQ,CACXqR,KAAM,GACNtP,YAAa,GACb2V,gBAAiB,GACjBC,oBAAqB,IANN,E,8FAUnB,uBAAAzY,EAAA,0F,sFAGA,SAAmByD,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBA8CxC,WAAU,IAAD,OAEP,OACE,sBAAKE,UAAU,6BAAf,UACE,qBAAKA,UAAU,WAAf,4CACA,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,0DACA,uBAAOA,UAAU,eAAe+K,YAAY,GAAG9K,KAAK,OAAOxD,MAAOmC,KAAKvC,MAAMqR,KAC3ExN,SAAU,SAAC5E,GAAD,OAAW,EAAKsQ,oBAAoBtQ,EAAO,cAEzD,sBAAK0E,UAAU,mBAAf,UACE,4DACA,uBAAOA,UAAU,oBAAoB+K,YAAY,GAAG9K,KAAK,OACvDC,SAAU,SAAC5E,GAAD,OAAW,EAAKD,oBAAoBC,SAElD,qBAAK0E,UAAU,SAAf,SACE,cAAC,KAAD,CACEc,MAAO,CAAE0B,OAAQ,SACjBC,WAAY,SAAAT,GAAI,OAAIJ,GAASc,OAAOV,IACpC9B,SAAUtB,KAAKkD,mBACfrF,MAAOmC,KAAKvC,MAAM2X,wBAGtB,qBAAKhU,UAAU,SAAf,SACE,wBAAQA,UAAU,qBAAqBgB,QAAS,kBAAM,EAAKiT,0BAA3D,8B,GAtFkB7S,aAyGfC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CyS,IC3GtDlS,I,OAAW,IAAIC,MAEfqS,G,kDACJ,WAAY9Y,GAAQ,IAAD,8BACjB,cAAMA,IAkBRwQ,oBAAsB,SAACtQ,EAAO9B,GAC5B,IAAI4Z,EAAS,eAAQ,EAAK/W,OAC1B+W,EAAU5Z,GAAM8B,EAAME,OAAOiB,MAC7B,EAAKR,SAAL,eACKmX,KAvBY,EA2BnBtR,mBAAqB,YAAqB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,EAAK/F,SAAS,CACZ8X,gBAAiBhS,EACjBiS,oBAAqBhS,KA9BN,EAkCnB3G,oBAlCmB,yCAkCG,WAAOC,GAAP,oBAAAC,EAAA,yDAChB7C,EAAO4C,EAAME,OAAOC,QACpBC,EAAOhD,EAAK,IAFI,gCAICiD,IAAYC,UAAUF,GAJvB,OAIdG,EAJc,OAKlB,EAAKI,SAAS,CACZmC,YAAavC,IANG,2CAlCH,wDA6CnBsY,oBA7CmB,wBA6CG,6BAAA5Y,EAAA,sEACJT,aAAgB,EAAKuB,OADjB,QAChB4H,EADgB,SAEO,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,gCACd,EAAK7I,SAAS,CACZyR,KAAM,GACNtP,YAAa,GACbZ,QAAS,GACTuW,gBAAiB,GACjBC,oBAAqB,OAGvBnP,IAAMI,MAAM,wBACZvI,QAAQC,IAAI,0BAA2BsH,IAbrB,2CA3CpB,EAAK5H,MAAQ,CACXqR,KAAM,GACNlQ,QAAS,GACTY,YAAa,GACb2V,gBAAiB,GACjBC,oBAAqB,IAPN,E,8FAWnB,uBAAAzY,EAAA,0F,sFAGA,SAAmByD,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBA+CxC,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,6BAAf,UACE,qBAAKA,UAAU,WAAf,8CACA,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,4DACA,uBAAOA,UAAU,eAAe+K,YAAY,GAAG9K,KAAK,OAAOxD,MAAOmC,KAAKvC,MAAMqR,KAC3ExN,SAAU,SAAC5E,GAAD,OAAW,EAAKsQ,oBAAoBtQ,EAAO,cAEzD,sBAAK0E,UAAU,mBAAf,UACE,8DACA,uBAAOA,UAAU,oBAAoB+K,YAAY,GAAG9K,KAAK,OACvDC,SAAU,SAAC5E,GAAD,OAAW,EAAKD,oBAAoBC,SAElD,sBAAK0E,UAAU,mBAAf,UACE,4EACA,uBAAOA,UAAU,eAAe+K,YAAY,GAAG9K,KAAK,OAAOxD,MAAOmC,KAAKvC,MAAMmB,QAC3E0C,SAAU,SAAC5E,GAAD,OAAW,EAAKsQ,oBAAoBtQ,EAAO,iBAEzD,qBAAK0E,UAAU,SAAf,SACE,cAAC,KAAD,CACEc,MAAO,CAAE0B,OAAQ,SACjBC,WAAY,SAAAT,GAAI,OAAIJ,GAASc,OAAOV,IACpC9B,SAAUtB,KAAKkD,mBACfrF,MAAOmC,KAAKvC,MAAM2X,wBAGtB,qBAAKhU,UAAU,SAAf,SACE,wBAAQA,UAAU,qBAAqBgB,QAAS,kBAAM,EAAKmT,uBAA3D,8B,GA5Fe/S,aA+GZC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6C6S,ICjHtDE,G,4JACF,WAEI,MAAuCxV,KAAKxD,MAApC2L,EAAR,EAAQA,eAAgBvD,EAAxB,EAAwBA,WACxB,OACI,eAAC,IAAMjB,SAAP,WACKiB,GAAc,cAAC,GAAD,IACf,qBAAKxD,UAAU,mBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmL,KAAK,sBAAsBkJ,UAAWrH,KAC7C,cAAC,IAAD,CAAO7B,KAAK,qBAAqBkJ,UAAWlZ,OAC5C,cAAC,IAAD,CAAOgQ,KAAK,wBAAwBkJ,UAAWvD,KAC/C,cAAC,IAAD,CAAO3F,KAAK,2BAA2BkJ,UAAWP,KAClD,cAAC,IAAD,CAAO3I,KAAK,wBAAwBkJ,UAAWH,KAC/C,cAAC,IAAD,CAAOG,UAAW,WAAQ,OAAQ,cAAC,IAAD,CAAUlK,GAAIpD,qB,GAfvD3F,aAoCNC,sBAZS,SAAAhF,GACpB,MAAO,CACH0K,eAAgB1K,EAAMiF,IAAIyF,eAC1BvD,WAAYnH,EAAM8B,KAAKqF,eAIJ,SAAA/B,GACvB,MAAO,KAIIJ,CAA6C+S,IC9C7C,I,OAAA,IAA0B,kCCWnCE,G,4MAEJC,eAAiB,SAACzU,GAChB,EAAK1E,MAAMmV,uBAAuBzQ,I,EAGpC0U,aAAe,WACT,EAAKpZ,MAAM0H,SACb,EAAK1H,MAAM0H,QAAQC,KAAnB,U,4CAIJ,WAAU,IAAD,OACHjD,EAAWlB,KAAKxD,MAAM0E,SAE1B,OACE,eAAC,IAAMyC,SAAP,WACE,qBAAKvC,UAAU,wBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,gBACb,qBAAKA,UAAU,cAAcyU,IAAKC,GAAM1T,QAAS,kBAAM,EAAKwT,gBAAgBG,IAAI,YAElF,sBAAK3U,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,8BAAK,4BAAG,cAAC,KAAD,CAAkBxG,GAAG,+BAC7B,8BAAK,cAAC,KAAD,CAAkBA,GAAG,mCAE5B,sBAAKwG,UAAU,gBAAf,UACE,8BAAK,4BAAG,cAAC,KAAD,CAAkBxG,GAAG,oCAC7B,8BAAK,cAAC,KAAD,CAAkBA,GAAG,iCAE5B,sBAAKwG,UAAU,gBAAf,UACE,8BAAK,4BAAG,cAAC,KAAD,CAAkBxG,GAAG,2BAC7B,8BAAK,cAAC,KAAD,CAAkBA,GAAG,mCAE5B,sBAAKwG,UAAU,gBAAf,UACE,8BAAK,4BAAG,cAAC,KAAD,CAAkBxG,GAAG,wBAC7B,8BAAK,cAAC,KAAD,CAAkBA,GAAG,qCAG9B,sBAAKwG,UAAU,gBAAf,UACE,sBAAKA,UAAU,UAAf,UAAyB,mBAAGA,UAAU,2BAA6B,cAAC,KAAD,CAAkBxG,GAAG,2BACxF,qBAAKwG,UAAWF,IAAaU,IAAUoQ,GAAK,qBAAuB,cAAnE,SAAkF,sBAAM5P,QAAS,kBAAM,EAAKuT,eAAe/T,IAAUoQ,KAAnD,kBAClF,qBAAK5Q,UAAWF,IAAaU,IAAUC,GAAK,qBAAuB,cAAnE,SAAkF,sBAAMO,QAAS,kBAAM,EAAKuT,eAAe/T,IAAUC,KAAnD,2BAI3D,IAA5B7B,KAAKxD,MAAMwZ,cACV,sBAAM5U,UAAU,qBAAhB,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,SAAf,SAAwB,cAAC,KAAD,CAAkBxG,GAAG,gCAC7C,qBAAKwG,UAAU,SAAf,SAAwB,cAAC,KAAD,CAAkBxG,GAAG,uCAC7C,sBAAKwG,UAAU,SAAf,UACE,mBAAGA,UAAU,kBACb,uBAAOC,KAAK,SAAS8K,YAAY,kDAGrC,qBAAK/K,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,sBACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,uCAEnD,sBAAKwG,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,wBACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,mCAEnD,sBAAKwG,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,wBACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,oCAEnD,sBAAKwG,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,mBACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,6BAEnD,sBAAKwG,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,yBACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,8BAEnD,sBAAKwG,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,mBAAGA,UAAU,+BACzC,qBAAKA,UAAU,aAAf,SAA4B,cAAC,KAAD,CAAkBxG,GAAG,kD,GAlF1C4H,aA4GVmC,eAAWlC,mBAdF,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvBK,SAAUxH,EAAM8B,KAAK0F,SACrB/D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,CACL8O,uBAAwB,SAACzQ,GAAD,OAAc2B,EAASiC,aAAkB5D,QAI3CuB,CAA6CiT,K,4BC/GjEO,G,kDAEJ,WAAYzZ,GAAQ,IAAD,8BACjB,cAAMA,IAkBRmZ,eAAiB,SAACzU,GAChB,EAAK1E,MAAMmV,uBAAuBzQ,IApBjB,EAuBnBgV,0BAA4B,SAACxU,GACvB,EAAKlF,MAAM0H,SACb,EAAK1H,MAAM0H,QAAQC,KAAnB,4BAA6CzC,EAAK9G,MAvBpD,EAAK6C,MAAQ,CACX0Y,cAAe,IAHA,E,8FAOnB,6BAAAxZ,EAAA,sEACkBZ,eADlB,QACMsJ,EADN,SAE6B,IAAhBA,EAAIC,SACbtF,KAAK3C,SAAS,CAAE8Y,cAAe9Q,EAAIvL,KAAOuL,EAAIvL,KAAO,KAHzD,gD,sFAOA,SAAmBsG,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAexC,WAAU,IAAD,OACDiV,EAAkBnW,KAAKvC,MAAvB0Y,cACN,OACE,qBAAK/U,UAAU,kCAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAgC,cAAC,KAAD,CAAkBxG,GAAG,kCACrD,wBAAQwG,UAAU,cAAlB,SAAgC,cAAC,KAAD,CAAkBxG,GAAG,6BAEvD,qBAAKwG,UAAU,eAAf,SACE,cAAC,KAAD,2BAAYpB,KAAKxD,MAAM+H,UAAvB,aAEI4R,GAAiBA,EAAc/X,OAAS,GACxC+X,EAAc1U,KAAI,SAACC,EAAMC,GACvB,OACE,sBAAKP,UAAU,oCACbgB,QAAS,kBAAM,EAAK8T,0BAA0BxU,IADhD,UAGE,qBAAKN,UAAU,6BACbc,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAKjC,MAAd,QAE1B,qBAAK2B,UAAU,iBAAf,SAAiCM,EAAKoN,SANgBnN,oB,GA/CpDa,aAgFTmC,eAAWlC,mBAZF,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIiBJ,CAA6CwT,KChFjEG,I,yDACJ,WAAY5Z,GAAQ,IAAD,8BACjB,cAAMA,IAeR6Z,uBAAyB,SAACC,GACpB,EAAK9Z,MAAM0H,SACb,EAAK1H,MAAM0H,QAAQC,KAAnB,yBAA0CmS,EAAO1b,MAhBnD,EAAK6C,MAAQ,CACX8Y,YAAa,IAHE,E,8FAOnB,6BAAA5Z,EAAA,sEACkBR,eADlB,QACMkJ,EADN,SAE6B,IAAhBA,EAAIC,SACbtF,KAAK3C,SAAS,CACZkZ,YAAalR,EAAIvL,KAAOuL,EAAIvL,KAAO,KAJzC,gD,sFAeA,SAAmBsG,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAKxC,WAAU,IAAD,OACDqV,EAAgBvW,KAAKvC,MAArB8Y,YACN,OACE,qBAAKnV,UAAU,yCAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,yDACA,wBAAQA,UAAU,cAAlB,4BAEF,qBAAKA,UAAU,eAAf,SACE,cAAC,KAAD,2BAAYpB,KAAKxD,MAAM+H,UAAvB,aACGgS,GAAeA,EAAYnY,OAAS,GACnCmY,EAAY9U,KAAI,SAACC,EAAMC,GACrB,OACE,sBAAKP,UAAU,iCAEbgB,QAAS,kBAAM,EAAKiU,uBAAuB3U,IAF7C,UAIE,qBAAKN,UAAU,oCACbc,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAKjC,MAAd,QAE1B,qBAAK2B,UAAU,cAAf,SAA8BM,EAAKoN,SAN9BnN,oB,GA5CIa,cA2EhBmC,eAAWlC,mBAXF,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,eAIA,SAAA/B,GACzB,MAAO,KAIiBJ,CAA6C2T,K,UChEjEI,G,4MAEJb,eAAiB,SAACzU,GAChB,EAAK1E,MAAMmV,uBAAuBzQ,I,4CAIpC,WAEE,OACE,qBAAKE,UAAU,iCAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,2BACA,wBAAQA,UAAU,cAAlB,4BAEF,qBAAKA,UAAU,eAAf,SACE,eAAC,KAAD,2BAAYpB,KAAKxD,MAAM+H,UAAvB,cACE,sBAAKnD,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,uEAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,oDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,sDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,wDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,kDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,mDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,4DAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,4DAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,oDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,mDAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,8BACf,mF,GA5DOoB,aAoFRC,sBAZS,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6C+T,ICnGtDC,G,4MAEJd,eAAiB,SAACzU,GAChB,EAAK1E,MAAMmV,uBAAuBzQ,I,4CAIpC,WAEE,OACE,sBAAKE,UAAU,8BAAf,UACE,qBAAKA,UAAU,uBAAf,6DACA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,wBAAQsV,MAAM,OAAO9S,OAAO,QAC1BiS,IAAI,4CACJ5D,MAAM,kIACN0E,YAAY,IACZC,MAAM,sGACNC,iBAAe,MAInB,qBAAKzV,UAAU,gBAAf,SAiDE,4K,GAxEQoB,aA6FLC,sBAZS,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CgU,IC9FtDK,G,4MAEJnB,eAAiB,SAACzU,GAChB,EAAK1E,MAAMmV,uBAAuBzQ,I,4CAIpC,WAEE,OACE,qBAAKE,UAAU,cAAf,SACE,gE,GAXiBoB,aA8BVC,sBAZS,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CqU,ICnBtDC,I,iOACJC,kBAAoB,SAACta,EAAOua,EAAOC,K,4CAInC,WACE,IAAI3S,EAAW,CACb4S,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,cAAe,EACfC,YAAaxX,KAAKgX,mBAEpB,OACE,gCACE,cAAC,GAAD,CAAYhB,cAAc,IAC1B,cAAC,GAAD,CAAWzR,SAAUA,IACrB,cAAC,GAAD,CAAkBA,SAAUA,IAC5B,cAACR,GAAA,EAAD,CAAmBQ,SAAUA,IAC7B,cAAC,GAAD,CAAUA,SAAUA,IACpB,cAAC,GAAD,IACA,cAAC,GAAD,W,GAtBe/B,cAwCRC,sBAXS,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,eAIA,SAAA/B,GACzB,MAAO,KAIMJ,CAA6CsU,I,6EC1CtDU,G,kDACJ,WAAYjb,GAAQ,IAAD,8BACjB,cAAMA,IAWRkb,eAZmB,yCAYF,WAAO9c,GAAP,kBAAA+B,EAAA,yDACX0V,EAAS,IACTzX,EAFW,gCAGGe,aAAqBf,GAHxB,QAGTyK,EAHS,SAIc,IAAhBA,EAAIC,UACb+M,EAAShN,EAAIvL,MALF,gCAQRuY,GARQ,2CAZE,wDA8BnBsF,kBAAoB,SAACpQ,GACnB,IAAMrG,EAAa,EAAK1E,MAAlB0E,SACN,GAAIqG,IAAa2G,KAAEC,QAAQ5G,GAAW,CACpC,IAAIqQ,EAAO1W,IAAaU,IAAUC,GAAK0F,EAASsQ,aAAa/V,QAAUyF,EAASsQ,aAAa9V,QACzFtG,EAAOyF,IAAaU,IAAUC,GAChCiW,KAAOC,MAAMxQ,EAAS9L,KAAO,KAAMuc,OAAO,qBAE1CF,KAAOC,MAAMxQ,EAAS9L,KAAO,KAAMwc,OAAO,MAAMD,OAAO,qBACzD,OACE,qCACE,gCAAMJ,EAAN,MAAenc,KACf,8BAAK,cAAC,KAAD,CAAkBb,GAAG,4CAIhC,OAAO,8BA3CP,EAAK6C,MAAQ,CACXya,YAAa,IAHE,E,8FAOnB,6BAAAvb,EAAA,sEACmBqD,KAAK0X,eAAe1X,KAAKxD,MAAMhB,UADlD,OACM1B,EADN,OAEEkG,KAAK3C,SAAS,CAAE6a,YAAape,IAF/B,gD,+HAgBA,WAAyBsG,EAAWC,EAAWC,GAA/C,UAAA3D,EAAA,sDACMqD,KAAKxD,MAAM0E,SAAad,EAAUc,SAElClB,KAAKxD,MAAMhB,SAAa4E,EAAU5E,SAHxC,gD,+EAyBA,WACE,IAAM0c,EAAgBlY,KAAKvC,MAArBya,YACN,EAEIlY,KAAKxD,MAFH0E,EAAN,EAAMA,SAAUiX,EAAhB,EAAgBA,wBAAyB5Q,EAAzC,EAAyCA,SACvC6Q,EADF,EACEA,YAAaC,EADf,EACeA,iBAAkB7c,EADjC,EACiCA,SAEjCsC,QAAQC,IAAI,4BAA6BiC,KAAKvC,OAE9C,IAAI+G,EAAS,GAAIE,EAAS,GAM1B,OALIwT,GAAeA,EAAYzT,eAC7BD,EAAM,UAAM0T,EAAYzT,aAAa3C,QAA/B,aAA2CoW,EAAYvZ,SAAvD,YAAmEuZ,EAAYxZ,WACrFgG,EAAM,UAAMwT,EAAYzT,aAAa1C,QAA/B,aAA2CmW,EAAYxZ,UAAvD,YAAoEwZ,EAAYvZ,WAItF,sBAAKyC,UAAU,2BAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,eACbc,MAAO,CAAEC,gBAAgB,OAAD,OAAS+V,GAAeA,EAAYzY,MAAQyY,EAAYzY,MAAQ,GAAhE,QAE1B,sBAAK2B,UAAU,gBAAf,UACE,qBAAKA,UAAU,KAAf,SACGF,IAAaU,IAAUC,GAAK2C,EAASE,IAExC,qBAAKtD,UAAU,OAAf,UAC+B,IAA5B+W,EACC,mCACGD,GAAeA,EAAYlE,UACvBkE,EAAYlE,SAASlB,aAExB,+BAAOoF,EAAYlE,SAASlB,gBAIhC,mCACG9S,KAAK2X,kBAAkBpQ,cAOX,IAArB8Q,GACA,qBAAKjX,UAAU,qBAAf,SACE,cAAC,KAAD,CAAMmK,GAAE,wBAAmB/P,GAA3B,4BAGa,IAAhB4c,GACC,sBAAKhX,UAAU,QAAf,UACE,cAAC,KAAD,CAAkBxG,GAAG,gCACpBsd,GAAeA,EAAY9D,aAAelT,IAAaU,IAAUC,IAChE,cAAC,KAAD,CAAcT,UAAU,UACtBvD,MAAOqa,EAAY9D,YAAYkE,cAAcxW,QAC7CyW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,QAGXP,GAAeA,EAAY9D,aAAelT,IAAaU,IAAUoQ,IAChE,cAAC,KAAD,CAAc5Q,UAAU,UACtBvD,MAAOqa,EAAY9D,YAAYkE,cAAcvW,QAC7CwW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,gB,GA/GIjW,aAoIbC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CgV,I,0ECwB7CiB,G,4MAxJXC,cAAgB,K,EAEhBC,QAAU,SAAAC,GACN,EAAKC,UAAYD,GAAWA,EAAQC,UACpC,EAAKH,cAAgBE,GAAWA,EAAQE,KACpC,EAAKJ,gBACL,EAAKA,cAAcK,iBAAiB,OAAQ,EAAKC,YACjD,EAAKN,cAAcK,iBAAiB,UAAW,EAAKE,kB,EAI5DA,eAAiB,SAACxc,GAEd,IADgBA,EAAMyc,OAASzc,EAAMwP,WACrBkN,IAAaC,MAAO,CAChC3c,EAAM4c,iBACN,IAAQhY,EAAa,EAAK9E,MAAlB8E,SACFzD,EAAQnB,EAAME,OAAOiB,MAGrB0b,EAAczB,KAAOja,EAAO,cAClCyD,EAAS,CAACiY,EAAYC,SAAUD,EAAYC,a,EAWpDP,WAAa,SAACvc,GACV,IAAQ4E,EAAa,EAAK9E,MAAlB8E,SACFzD,EAAQnB,EAAME,OAAOiB,MAG3BnB,EAAM4c,iBACN,IAAMC,EAAczB,KAAOja,EAAO,cAClCyD,EAAS,CAACiY,EAAYC,SAAUD,EAAYC,Y,EAGhDC,OAAS,WACD,EAAKd,eACL,EAAKA,cAAce,Q,EAQ3BC,eAAiB,SAACC,EAAKC,GACnB,GAAsB,MAAlBD,EAAIE,OAAO,IAAsB,OAARF,EAAc,CACvC,IAAIG,EAAMC,SAASJ,IACfK,MAAMF,IAAQA,GAAO,GAAKA,EAAMF,KAAKE,EAAM,GAC/CH,EAAMG,EAAMC,SAASH,EAAIla,WAAWma,OAAO,KAAiC,IAA1BC,EAAIpa,WAAWvB,OAAe,IAAM2b,EAAMA,EAAIpa,WAEpG,OAAOia,G,EA4BXM,mBAAqB,SAACrc,EAAOsc,GACzB,IAAIC,EAAQvc,EAEW,IAAIwc,OAAJ,eAAmBF,EAAnB,MAIFG,KAAKF,KAAQA,EAAQA,EAAMG,OAAO,EAAGH,EAAMhc,OAAS,IAEzE,IAAIoc,EAASJ,EAAMK,MAAMN,GAAW1Y,KAAI,SAAUiZ,GAC9C,OAAOA,EAAEC,QAAQ,MAAO,OAQ5B,OALIH,EAAO,KAAIA,EAAO,GAAK,EAAKb,eAAea,EAAO,GAAI,KACtDA,EAAO,KAAIA,EAAO,GAAK,EAAKb,eAAea,EAAO,GAAI,KAC7CA,EAAO/Y,KAAI,SAAUiZ,EAAGvc,GACjC,OAAoB,IAAbuc,EAAEtc,QAAgBD,EAAI,EAAIuc,EAAI,IAAMP,EAAY,IAAMO,KAEnDE,KAAK,IAAIL,OAAO,EAAG,K,EAGrCM,cAAgB,SAACjM,GACb,GAAI,EAAKkM,iBAAmB,EAAKC,sBAAuB,CACpD,IAAIC,EAAY,EAAKd,mBAAmBtL,EAAEhS,OAAOiB,MAAO,EAAKod,WAC7DrM,EAAEhS,OAAOiB,MAAQmd,I,EAIzBE,YAAc,SAACtM,K,EAIfqM,UAAY,I,EACZF,sBAAwB,Q,EAGxBD,eAAiB,Q,0DAjGjB,WACQ9a,KAAK2Y,gBACL3Y,KAAK2Y,cAAcwC,oBAAoB,OAAQnb,KAAKiZ,YACpDjZ,KAAK2Y,cAAcwC,oBAAoB,UAAWnb,KAAKkZ,mB,mBAoB/D,WACIlZ,KAAK8Y,UAAUsC,U,oBA2EnB,WACI,MAA6Dpb,KAAKxD,MAA1DqB,EAAR,EAAQA,MAAOyD,EAAf,EAAeA,SAAU+Z,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAAYC,EAA9C,mBACMtG,EAAU,CACZuG,WAAYxb,KAAK8a,eACjBW,YAAY,EACZC,eAAe,EACfJ,QAASA,EACT7B,OAAQzZ,KAAKyZ,QAKjB,OAHI4B,IACApG,EAAQoG,QAAUA,GAGlB,cAAC,KAAD,aACIlK,IAAKnR,KAAK4Y,QACV/a,MAAOA,EACPyD,SAAUA,EACV2T,QAASA,GAMLsG,Q,GApJK/Y,a,oBCEnBmZ,G,kDACJ,WAAYnf,GAAQ,IAAD,8BACjB,cAAMA,IAoBRof,iBAAmB,SAAC9hB,GAClB,IAAIuY,EAAS,GACTnR,EAAW,EAAK1E,MAAM0E,SAS1B,OARIpH,GAAQA,EAAKsE,OAAS,GACxBtE,EAAK2H,KAAI,SAAAC,GACP,IAAI4Q,EAAS,GACbA,EAAOG,MAAQvR,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,QAC/DuQ,EAAOzU,MAAQ6D,EAAKjB,OACpB4R,EAAOlO,KAAKmO,MAGTD,GAhCU,EA2DnBwJ,oBAAsB,SAACnf,EAAO9B,GAC5B,IAAIkhB,EAAapf,EAAME,OAAOiB,MAC1B2W,EAAS,eAAQ,EAAK/W,OAC1B+W,EAAU5Z,GAAMkhB,EAChB,EAAKze,SAAL,eACKmX,KAhEY,EAoEnBuH,yBAA2B,SAACtgB,GAC1B,EAAK4B,SAAS,CAAE2e,SAAUvgB,EAAK,MArEd,EAwEnBiY,mBAAqB,SAACuI,GACpB,EAAK5e,SAAS,CACZ6e,eAAgBD,KA1ED,EA8EnBE,iBAAmB,SAAC5U,GAClB,IAAMrG,EAAa,EAAK1E,MAAlB0E,SACN,GAAIqG,IAAa2G,KAAEC,QAAQ5G,GAAW,CACpC,IAAIqQ,EAAO1W,IAAaU,IAAUC,GAAK0F,EAASsQ,aAAa/V,QAAUyF,EAASsQ,aAAa9V,QACzFtG,EAAOyF,IAAaU,IAAUC,GAChCiW,KAAOC,MAAMxQ,EAAS9L,KAAO,KAAMuc,OAAO,qBAE1CF,KAAOC,MAAMxQ,EAAS9L,KAAO,KAAMwc,OAAO,MAAMD,OAAO,qBACzD,MAAM,GAAN,OAAUJ,EAAV,cAAoBnc,GAEtB,MAAO,IAxFU,EA2FnB2gB,eAAiB,SAAC7U,GAChB,IAAMrG,EAAa,EAAK1E,MAAlB0E,SACN,OAAIqG,IAAa2G,KAAEC,QAAQ5G,GACdrG,IAAaU,IAAUC,GAAvB,UACN0F,EAAS8U,WAAW1d,SADd,YAC0B4I,EAAS8U,WAAW3d,WAD9C,UAGN6I,EAAS8U,WAAW3d,UAHd,YAG2B6I,EAAS8U,WAAW1d,UAGrD,IApGU,EAuGnB2d,qBAvGmB,wBAuGI,mCAAA3f,EAAA,6DACrB,EAAKU,SAAS,CACZkf,eAAe,IAEb9gB,EAAO,IAAI+gB,KAAK,EAAK/e,MAAMue,UAAUS,UACrCC,EAAa,EAAKP,iBAAiB,EAAK3f,MAAM+K,UAC9CoV,EAAa,EAAKP,eAAe,EAAK5f,MAAM+K,UAN3B,SAOL3L,aAA2B,CACzCghB,SAAU,EAAKnf,MAAMmf,SACrB3d,YAAa,EAAKxB,MAAMwB,YACxB9E,MAAO,EAAKsD,MAAMtD,MAClByE,QAAS,EAAKnB,MAAMmB,QACpBie,OAAQ,EAAKpf,MAAMof,OACnBphB,KAAM,EAAKe,MAAM+K,SAAS9L,KAC1BugB,SAAUvgB,EACVygB,eAAgB,EAAKze,MAAMye,eAAere,MAC1CrC,SAAU,EAAKiC,MAAMjC,SACrBshB,SAAU,EAAKrf,MAAMqf,SACrB5b,SAAU,EAAK1E,MAAM0E,SACrBwb,WAAYA,EACZC,WAAYA,IApBO,OAOjBtX,EAPiB,OAsBrB,EAAKhI,SAAS,CACZkf,eAAe,IAEblX,GAAuB,IAAhBA,EAAIC,SACbW,IAAMC,QAAQ,qCACd,EAAK1J,MAAMugB,qBAEX9W,IAAMI,MAAM,oCA7BO,2CArGrB,EAAK5I,MAAQ,CACXmf,SAAU,GACV3d,YAAa,GACb9E,MAAO,GACPyE,QAAS,GACTie,OAAQ,GACRb,SAAU,GACVE,eAAgB,GAChB1gB,SAAU,GACVuF,QAAS,GACT+b,SAAU,GACVP,eAAe,GAbA,E,8FAiBnB,uBAAA5f,EAAA,sDACEqD,KAAKxD,MAAMwgB,aADb,gD,sFAkBA,SAAmB5c,EAAWC,EAAWC,GAWvC,GAVIN,KAAKxD,MAAM0E,WAAad,EAAUc,UACpClB,KAAK3C,SAAS,CACZ0D,QAASf,KAAK4b,iBAAiB5b,KAAKxD,MAAMuE,WAG1Cf,KAAKxD,MAAMuE,UAAYX,EAAUW,SACnCf,KAAK3C,SAAS,CACZ0D,QAASf,KAAK4b,iBAAiB5b,KAAKxD,MAAMuE,WAG1Cf,KAAKxD,MAAM+K,WAAanH,EAAUmH,UAChCvH,KAAKxD,MAAM+K,WAAa2G,KAAEC,QAAQnO,KAAKxD,MAAM+K,UAAW,CAC1DzJ,QAAQC,IAAI,yBAA0BiC,KAAKxD,MAAM+K,SAAS/L,UAC1D,IAAIA,EAAWwE,KAAKxD,MAAM+K,SAAS/L,SAC/BshB,EAAW9c,KAAKxD,MAAM+K,SAASuV,SACnC9c,KAAK3C,SAAS,CACZ7B,SAAUA,EACVshB,SAAUA,O,oBAmFlB,WAAU,IAAD,OACP,EAAmD9c,KAAKxD,MAAlDygB,EAAN,EAAMA,YAAaF,EAAnB,EAAmBA,kBAAmBxV,EAAtC,EAAsCA,SAClC/L,EAAW,GAIf,OAHI+L,IAAa2G,KAAEC,QAAQ5G,KACzB/L,EAAW+L,EAAS/L,UAGpB,cAAC,KAAD,CACEyT,OAAQjP,KAAKvC,MAAM8e,cACnBW,SAAO,EACP9Z,KAAK,aAHP,SAKE,cAACmK,GAAA,EAAD,CACE7P,OAAQuf,EACR7b,UAAW,0BACXoM,KAAK,KACLC,UAAQ,EAJV,SAOE,sBAAKrM,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,OAAhB,SAAuB,cAAC,KAAD,CAAkBxG,GAAG,kCAC5C,sBAAMwG,UAAU,QAAQgB,QAAS2a,EAAjC,SAAoD,mBAAG3b,UAAU,sBAEnE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,GAAD,CACE5F,SAAUA,EACV2c,yBAAyB,EACzB5Q,SAAUA,EACV8Q,kBAAkB,EAClBD,aAAa,MAIjB,sBAAKhX,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,qCAC5B,uBAAOwG,UAAU,eACfvD,MAAOmC,KAAKvC,MAAMmf,SAClBtb,SAAU,SAAC5E,GAAD,OAAW,EAAKmf,oBAAoBnf,EAAO,kBAGzD,sBAAK0E,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,wCAC5B,uBAAOwG,UAAU,eACfvD,MAAOmC,KAAKvC,MAAMwB,YAClBqC,SAAU,SAAC5E,GAAD,OAAW,EAAKmf,oBAAoBnf,EAAO,qBAGzD,sBAAK0E,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,kCAC5B,uBAAOwG,UAAU,eACfvD,MAAOmC,KAAKvC,MAAMtD,MAClBmH,SAAU,SAAC5E,GAAD,OAAW,EAAKmf,oBAAoBnf,EAAO,eAGzD,sBAAK0E,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,oCAC5B,uBAAOwG,UAAU,eACfvD,MAAOmC,KAAKvC,MAAMmB,QAClB0C,SAAU,SAAC5E,GAAD,OAAW,EAAKmf,oBAAoBnf,EAAO,iBAGzD,sBAAK0E,UAAU,oBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,mCAC5B,uBAAOwG,UAAU,eACfvD,MAAOmC,KAAKvC,MAAMof,OAClBvb,SAAU,SAAC5E,GAAD,OAAW,EAAKmf,oBAAoBnf,EAAO,gBAGzD,sBAAK0E,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,qCAC5B,cAAC,GAAD,CACEiD,MAAOmC,KAAKvC,MAAMue,SAClB1a,SAAUtB,KAAK+b,yBACf3a,UAAU,oBAId,sBAAKA,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,mCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAMye,eAClB5a,SAAUtB,KAAK0T,mBACfuB,QAASjV,KAAKvC,MAAMsD,mBAK5B,sBAAKK,UAAU,uBAAf,UACE,wBAAQA,UAAU,sBAChBgB,QAAS,kBAAM,EAAKka,wBADtB,SAC8C,cAAC,KAAD,CAAkB1hB,GAAG,uCACnE,wBAAQwG,UAAU,qBAChBgB,QAAS2a,EADX,SAC8B,cAAC,KAAD,CAAkBniB,GAAG,oD,GAvOtC4H,aA6PZC,sBAbS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,SACpBH,QAAStD,EAAMkF,MAAM5B,YAIE,SAAA8B,GACzB,MAAO,CACLma,WAAY,kBAAMna,EAASC,YAIhBL,CAA6CkZ,ICnQtDwB,G,kDACJ,WAAY3gB,GAAQ,IAAD,8BACjB,cAAMA,IA0BR4gB,WAAa,SAAClc,GAEZ,IADA,IAAImc,EAAU,GACLlf,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAImU,EAAS,GACb,GAAIpR,IAAaU,IAAUC,GACzB,GAAU,IAAN1D,EAAS,CACX,IAAImf,EAAOxF,KAAO,IAAI0E,MAAQxE,OAAO,SACjCuF,EAAK,uBAAgBD,GACzBhL,EAAOG,MAAQ8K,MACV,CACL,IAAIhL,EAAUuF,KAAO,IAAI0E,MAAQgB,IAAIrf,EAAG,QAAQ6Z,OAAO,gBACvD1F,EAAOG,MAAQ,EAAKgL,sBAAsBlL,QAG5C,GAAU,IAANpU,EAAS,CACX,IAAImf,EAAOxF,KAAO,IAAI0E,MAAQxE,OAAO,SACjCuF,EAAK,kBAAcD,GACvBhL,EAAOG,MAAQ8K,OAEfjL,EAAOG,MAAQqF,KAAO,IAAI0E,MAAQgB,IAAIrf,EAAG,QAAQ8Z,OAAO,MAAMD,OAAO,gBAGzE1F,EAAOzU,MAAQia,KAAO,IAAI0E,MAAQgB,IAAIrf,EAAG,QAAQuf,QAAQ,OAAOC,UAChEN,EAAQlZ,KAAKmO,GAEf,OAAO+K,GApDU,EAwEnBO,qBAxEmB,yCAwEI,WAAOlhB,GAAP,oBAAAC,EAAA,0DACjB,EAAKH,MAAMqhB,qBAAyD,IAAnC,EAAKrhB,MAAMqhB,mBAD3B,uBAEfriB,EAAW,EAAKgB,MAAMqhB,mBACtBpiB,EAAOiB,EAAME,OAAOiB,MAHL,SAIHtC,aAAuBC,EAAUC,GAJ9B,QAIf4J,EAJe,SAMQ,IAAhBA,EAAIC,SACb,EAAKjI,SAAS,CACZygB,gBAAiBzY,EAAIvL,KAAOuL,EAAIvL,KAAO,KARxB,2CAxEJ,wDAsFnBikB,wBAA0B,SAACnG,GACzB9Z,QAAQC,IAAI6Z,GACZ,EAAKva,SAAS,CACZ2gB,oBAAoB,EACpBC,sBAAuBrG,KA1FR,EA8FnBmF,kBAAoB,WAClB,EAAK1f,SAAS,CACZ2gB,oBAAoB,KA9FtB,EAAKvgB,MAAQ,CACX4f,QAAS,GACTS,gBAAiB,GACjBE,oBAAoB,EACpBC,sBAAuB,IANR,E,8FAUnB,iCAAAthB,EAAA,yDACQuE,EAAalB,KAAKxD,MAAlB0E,SACFmc,EAAUrd,KAAKod,WAAWlc,IAE1BlB,KAAKxD,MAAMqhB,mBAJjB,gCAKoBtiB,aAAuByE,KAAKxD,MAAMqhB,mBAAoBR,EAAQ,GAAGxf,OALrF,OAKQwH,EALR,OAMIrF,KAAK3C,SAAS,CACZygB,gBAAiBzY,EAAIvL,KAAOuL,EAAIvL,KAAO,KAP7C,OAUEkG,KAAK3C,SAAS,CAAEggB,QAASA,IAV3B,gD,yFAaA,SAAsBa,GACpB,OAAOA,EAAOpE,OAAO,GAAGqE,cAAgBD,EAAOE,MAAM,K,yEAgCvD,WAAyBhe,EAAWC,EAAWC,GAA/C,oBAAA3D,EAAA,yDACMqD,KAAKxD,MAAM0E,WAAad,EAAUc,WAChCmc,EAAUrd,KAAKod,WAAWpd,KAAKxD,MAAM0E,UACzClB,KAAK3C,SAAS,CACZggB,QAASA,KAGTrd,KAAKxD,MAAMqhB,qBAAuBzd,EAAUyd,mBAPlD,uBAQQR,EAAUrd,KAAKod,WAAWpd,KAAKxD,MAAM0E,UAR7C,SASoB3F,aAAuByE,KAAKxD,MAAMqhB,mBAAoBR,EAAQ,GAAGxf,OATrF,OASQwH,EATR,OAUIrF,KAAK3C,SAAS,CACZygB,gBAAiBzY,EAAIvL,KAAOuL,EAAIvL,KAAO,KAX7C,gD,+EA4CA,WAAU,IAAD,OACP,EAA8EkG,KAAKvC,MAA7E4f,EAAN,EAAMA,QAASS,EAAf,EAAeA,gBAAiBE,EAAhC,EAAgCA,mBAAoBC,EAApD,EAAoDA,sBAC9C/c,EAAalB,KAAKxD,MAAlB0E,SAEN,OACE,qCACE,sBAAKE,UAAU,4BAAf,UACE,qBAAKA,UAAU,eAAf,SACE,wBAAQE,SAAU,SAAC5E,GAAD,OAAW,EAAKkhB,qBAAqBlhB,IAAvD,SACG2gB,GAAWA,EAAQjf,OAAS,GAC3Bif,EAAQ5b,KAAI,SAACC,EAAMC,GACjB,OACE,wBAAQ9D,MAAO6D,EAAK7D,MAApB,SAEE6D,EAAK+Q,OADA9Q,UAOjB,sBAAKP,UAAU,qBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,mBAAGA,UAAU,sBAAb,SAAmC,+BAAM,cAAC,KAAD,CAAkBxG,GAAG,yCAEhE,qBAAKwG,UAAU,eAAf,SACG0c,GAAmBA,EAAgB1f,OAAS,EAC3C,qCACE,qBAAKgD,UAAU,oBAAf,SACG0c,EAAgBrc,KAAI,SAACC,EAAMC,GAC1B,IAAI0c,EAAcnd,IAAaU,IAAUC,GACvCH,EAAKmW,aAAa/V,QAAUJ,EAAKmW,aAAa9V,QAChD,OACE,wBACEX,UAAWF,EAAWU,IAAUC,GAAK,UAAY,SACjDO,QAAS,kBAAM,EAAK2b,wBAAwBrc,IAF9C,SAGE2c,GAHW1c,QAQnB,qBAAKP,UAAU,YAAf,SACE,iCACE,cAAC,KAAD,CAAkBxG,GAAG,iCACrB,mBAAGwG,UAAU,yBACb,cAAC,KAAD,CAAkBxG,GAAG,4CAK3B,qBAAKwG,UAAU,cAAf,SAA6B,cAAC,KAAD,CAAkBxG,GAAG,gDAK1D,cAAC,GAAD,CAAcqiB,YAAae,EACzBjB,kBAAmB/c,KAAK+c,kBACxBxV,SAAU0W,W,GA7JSzb,aA+KdC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6C0a,IChLtDmB,I,yDAEJ,WAAY9hB,GAAQ,IAAD,8BACjB,cAAMA,IAiCR+hB,oBAAsB,SAACC,GACrB,EAAKnhB,SAAS,CAAEohB,kBAAmBD,KAjCnC,EAAK/gB,MAAQ,CACXghB,mBAAmB,EACnBC,WAAY,IAJG,E,8FAQnB,6BAAA/hB,EAAA,0DACMqD,KAAKxD,MAAMqhB,mBADjB,gCAEoBniB,aAAwBsE,KAAKxD,MAAMqhB,oBAFvD,QAEQxY,EAFR,SAG+B,IAAhBA,EAAIC,SACbtF,KAAK3C,SAAS,CACZqhB,WAAYrZ,EAAIvL,OALxB,gD,+HAWA,WAAyBsG,EAAWC,EAAWC,GAA/C,gBAAA3D,EAAA,yDACMyD,EAAUc,SAAalB,KAAKxD,MAAM0E,SAIlClB,KAAKxD,MAAMqhB,qBAAuBzd,EAAUyd,mBALlD,gCAMoBniB,aAAwBsE,KAAKxD,MAAMqhB,oBANvD,QAMQxY,EANR,SAO+B,IAAhBA,EAAIC,SACbtF,KAAK3C,SAAS,CACZqhB,WAAYrZ,EAAIvL,OATxB,gD,+EAoBA,WAAU,IAAD,OACP,EAAwCkG,KAAKvC,MAAvCghB,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,WACnBxd,EAAalB,KAAKxD,MAAlB0E,SACN,OACE,sBAAKE,UAAU,+BAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,eAAf,SAA8B,cAAC,KAAD,CAAkBxG,GAAG,6CACnD,qBAAKwG,UAAU,cAAf,SACGsd,GAAcA,EAAWvL,WAAauL,EAAWvL,WAAa,KAEjE,qBAAK/R,UAAU,iBAAf,SACGsd,GAAcA,EAAWtL,cAAgBsL,EAAWtL,cAAgB,QAGzE,sBAAKhS,UAAU,eAAf,WACyB,IAAtBqd,GACC,sBAAKrd,UAAU,cAAf,UACE,cAAC,KAAD,CAAkBxG,GAAG,oCACpB8jB,GAAcA,EAAWpG,eAAiBpX,IAAaU,IAAUC,IAEhE,cAAC,KAAD,CACET,UAAU,UACVvD,MAAO6gB,EAAWpG,cAAcxW,QAChCyW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,QAGXiG,GAAcA,EAAWpG,eAAiBpX,IAAaU,IAAUoQ,IAEhE,cAAC,KAAD,CACE5Q,UAAU,UACVvD,MAAO6gB,EAAWpG,cAAcvW,QAChCwW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,MAGZ,sBAAMrX,UAAU,SAASgB,QAAS,kBAAM,EAAKmc,qBAAoB,IAAjE,SAAwE,cAAC,KAAD,CAAkB3jB,GAAG,2CAG1E,IAAtB6jB,GACC,qCACE,qBAAKrd,UAAU,cAAf,SAA6B,cAAC,KAAD,CAAkBxG,GAAG,sCAClD,sBAAKwG,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAMA,UAAU,OAAhB,SAAuB,cAAC,KAAD,CAAkBxG,GAAG,sCAC5C,uBAAMwG,UAAU,QAAhB,UACGsd,GAAcA,EAAWpG,eAAiBpX,IAAaU,IAAUC,IAEhE,cAAC,KAAD,CACET,UAAU,UACVvD,MAAO6gB,EAAWpG,cAAcxW,QAChCyW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,QAGXiG,GAAcA,EAAWpG,eAAiBpX,IAAaU,IAAUoQ,IAEhE,cAAC,KAAD,CACE5Q,UAAU,UACVvD,MAAO6gB,EAAWpG,cAAcvW,QAChCwW,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,YAKhB,qBAAKrX,UAAU,OAAf,SACGsd,GAAcA,EAAWrL,KAAOqL,EAAWrL,KAAO,QAGvD,sBAAKjS,UAAU,UAAf,UACE,cAAC,KAAD,CAAkBxG,GAAG,sCACpB8jB,GAAcA,EAAWC,iBAAmBzd,IAAaU,IAAUC,GAAK6c,EAAWC,gBAAgB7c,QAAU,GAC7G4c,GAAcA,EAAWC,iBAAmBzd,IAAaU,IAAUoQ,GAAK0M,EAAWC,gBAAgB5c,QAAU,MAEhH,qBAAKX,UAAU,aAAf,SACE,sBAAMgB,QAAS,kBAAM,EAAKmc,qBAAoB,IAA9C,SAAsD,cAAC,KAAD,CAAkB3jB,GAAG,0D,GAzH5D4H,cAgJhBC,sBAZS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAKG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6C6b,ICnJtDM,G,kDACJ,WAAYpiB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,GAFI,E,mDAMnB,WACMohB,OAAOC,IACTD,OAAOC,GAAGC,MAAMC,QAGlB,IACI/G,EADejY,KAAKxD,MAAlB0E,WACoBU,IAAUC,GAAK,QAAU,QACnDgd,OAAOI,YAAc,WACnBJ,OAAOC,GAAGI,KAAK,CACbC,MAAOzlB,mBACP0lB,QAAQ,EAERC,OAAO,EACPC,QAAS,UAIZ,SAAUC,EAAGC,EAAG5kB,GACf,IAAI6kB,EAAIC,EAAMH,EAAEI,qBAAqBH,GAAG,GACpCD,EAAEK,eAAehlB,MACrB6kB,EAAKF,EAAEM,cAAcL,IAAO5kB,GAAKA,EACjC6kB,EAAG5J,IAAH,iCAAmCoC,EAAnC,WACAyH,EAAII,WAAWC,aAAaN,EAAIC,IALjC,CAMCM,SAAU,SAAU,oB,+BAGxB,WACEhgB,KAAKigB,oB,yEAGP,WAAyB7f,EAAWC,EAAWC,GAA/C,UAAA3D,EAAA,sDACMyD,EAAUc,SAAalB,KAAKxD,MAAM0E,SADxC,gD,+EAKA,WACE,IAAMgf,EAAalgB,KAAKxD,MAAlB0jB,SACN,OACE,mCACE,qBAAK9e,UAAU,UACb+e,YAAWD,EACXE,aAAW,GACXC,cAAY,WACZC,cAAY,OACZC,YAAU,QACVC,aAAW,e,GApDMhe,aAyEZC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6Cmc,ICzEtD6B,G,kDACJ,WAAYjkB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,GAFI,E,mDAOnB,WACMohB,OAAOC,IACTD,OAAOC,GAAGC,MAAMC,QAGlB,IACI/G,EADejY,KAAKxD,MAAlB0E,WACoBU,IAAUC,GAAK,QAAU,QACnDgd,OAAOI,YAAc,WACnBJ,OAAOC,GAAGI,KAAK,CACbC,MAAOzlB,mBACP0lB,QAAQ,EAERC,OAAO,EACPC,QAAS,UAIZ,SAAUC,EAAGC,EAAG5kB,GACf,IAAI6kB,EAAIC,EAAMH,EAAEI,qBAAqBH,GAAG,GACpCD,EAAEK,eAAehlB,MACrB6kB,EAAKF,EAAEM,cAAcL,IAAO5kB,GAAKA,EACjC6kB,EAAG5J,IAAH,iCAAmCoC,EAAnC,WACAyH,EAAII,WAAWC,aAAaN,EAAIC,IALjC,CAMCM,SAAU,SAAU,oB,+BAGxB,WACEhgB,KAAKigB,oB,gCAGP,SAAmB7f,EAAWC,EAAWC,GACnCF,EAAUc,WAAalB,KAAKxD,MAAM0E,UACpClB,KAAKigB,oB,oBAIT,WACE,MAAmCjgB,KAAKxD,MAAlCka,EAAN,EAAMA,MAAOwJ,EAAb,EAAaA,SAAUQ,EAAvB,EAAuBA,QACvB,OACE,mCACE,qBAAKtf,UAAU,cACb+e,YAAWD,EACXE,aAAY1J,GAAgB,GAC5BiK,eAAcD,GAAoB,U,GAnDtBle,aAsEPC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6Cge,IChEtDG,G,kDACJ,WAAYpkB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXojB,aAAc,GACdC,iBAAkB,GAJH,E,8FAQnB,+BAAAnkB,EAAA,2DACMqD,KAAKxD,MAAMukB,OAAS/gB,KAAKxD,MAAMukB,MAAMC,QAAUhhB,KAAKxD,MAAMukB,MAAMC,OAAOpmB,IAD7E,uBAEQA,EAAKoF,KAAKxD,MAAMukB,MAAMC,OAAOpmB,GACjCoF,KAAK3C,SAAS,CAAEyjB,gBAAiBlmB,IAHrC,SAIoBS,aAAqBT,GAJzC,QAIQyK,EAJR,SAK+B,IAAhBA,EAAIC,SACbtF,KAAK3C,SAAS,CACZwjB,aAAcxb,EAAIvL,OAP1B,gD,sFAaA,SAAmBsG,EAAWC,EAAWC,GACnCF,EAAUiE,kBAAoBrE,KAAKxD,MAAM6H,iBAC3CrE,KAAK3C,SAAS,CACZ+G,WAAYpE,KAAKxD,MAAM6H,oB,oBAK7B,WACE,IAAMwc,EAAiB7gB,KAAKvC,MAAtBojB,aACA3f,EAAalB,KAAKxD,MAAlB0E,SACFsD,EAAS,GACTE,EAAS,GACTmc,GAAgBA,EAAapc,eAC/BD,EAAM,UAAMqc,EAAapc,aAAa3C,QAAhC,aAA4C+e,EAAaliB,SAAzD,YAAqEkiB,EAAaniB,WACxFgG,EAAM,UAAMmc,EAAapc,aAAa1C,QAAhC,aAA4C8e,EAAaniB,UAAzD,YAAsEmiB,EAAaliB,WAG3F,IAAIsiB,EACF,gDAEF,OACE,qCACE,cAAC,GAAD,CAAYjL,cAAc,IAC1B,sBAAK5U,UAAU,0BAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,eACbc,MAAO,CACLC,gBAAgB,OAAD,OAAS0e,GAEtBA,EAAaphB,MAAQohB,EAAaphB,MAAQ,GAF7B,QAKnB,sBAAK2B,UAAU,gBAAf,UACE,qBAAKA,UAAU,KAAf,SACGF,IAAaU,IAAUC,GAAK2C,EAASE,IAExC,sBAAKtD,UAAU,OAAf,UACGyf,GAAgBA,EAAa7M,UAAY6M,EAAa7M,SAASlB,aAC9D,+BAAO+N,EAAa7M,SAASlB,cAE/B,qBAAK1R,UAAU,oBAAf,SACE,cAAC,GAAD,CAAc8e,SAAUe,eAKhC,sBAAK7f,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,GAAD,CAAgByc,mBAAoB7d,KAAKvC,MAAMqjB,oBAEjD,qBAAK1f,UAAU,gBAAf,SACE,cAAC,GAAD,CAAkByc,mBAAoB7d,KAAKvC,MAAMqjB,uBAGrD,qBAAK1f,UAAU,sBAAf,SACGyf,GAAgBA,EAAa7M,UAAY6M,EAAa7M,SAASrB,aAC9D,qBAAKuO,wBAAyB,CAAEC,OAAQN,EAAa7M,SAASrB,iBAGlE,qBAAKvR,UAAU,iBAAf,SACE,cAAC,GAAD,CAAS8e,SAAUe,EACjBvK,MAAO,qB,GApFMlU,aAwGZC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6Cme,ICtGtDQ,I,yDACJ,WAAY5kB,GAAQ,IAAD,8BACjB,cAAMA,IAcR2V,oBAAsB,SAACC,GACrB,IAAIC,EAAS,GACPnR,EAAa,EAAK1E,MAAlB0E,SAYN,OAXIkR,GAAaA,EAAUhU,OAAS,GAClCgU,EAAU3Q,KAAI,SAACC,EAAMC,GACnB,IAAI2Q,EAAS,GACTC,EAAO,UAAM7Q,EAAK/C,SAAX,YAAuB+C,EAAKhD,WACnC8T,EAAO,UAAM9Q,EAAKhD,UAAX,YAAwBgD,EAAK/C,UACxC2T,EAAOG,MAAQvR,IAAaU,IAAUC,GAAK0Q,EAAUC,EACrDF,EAAOzU,MAAQ6D,EAAK9G,GACpByX,EAAOlO,KAAKmO,MAITD,GA7BU,EAyDnBqB,mBAzDmB,yCAyDE,WAAOX,GAAP,UAAApW,EAAA,sDACnB,EAAKU,SAAS,CAAEgkB,eAAgBtO,IADb,2CAzDF,wDA8DnBuO,yBAA2B,SAAC7lB,GAC1B,EAAK4B,SAAS,CACZkkB,YAAa9lB,EAAK,MAhEH,EAoEnB+lB,mBAAqB,SAAC5J,GACpB,IAAM6J,EAAc,EAAKhkB,MAAnBgkB,UACFA,GAAaA,EAAUrjB,OAAS,IAClCqjB,EAAYA,EAAUhgB,KAAI,SAAAC,GAExB,OADIA,EAAK9G,KAAOgd,EAAKhd,KAAI8G,EAAKggB,YAAchgB,EAAKggB,YAC1ChgB,KAET,EAAKrE,SAAS,CACZokB,UAAWA,MA5EE,EAiFnBE,mBAjFmB,wBAiFE,2CAAAhlB,EAAA,2DAC8B,EAAKc,MAAhDgkB,EADa,EACbA,UAAWJ,EADE,EACFA,eAAgBE,EADd,EACcA,YAC7BlP,EAAS,GACRkP,EAHc,uBAIjBtb,IAAMI,MAAM,0BAJK,8BAOfgb,IAAkBnT,KAAEC,QAAQkT,GAPb,uBAQjBpb,IAAMI,MAAM,yBARK,iCAYfub,EAAe,IAAIpF,KAAK+E,GAAa9E,UACrCgF,GAAaA,EAAUrjB,OAAS,KAC9ByjB,EAAeJ,EAAUK,QAAO,SAAApgB,GAAI,OAAwB,IAApBA,EAAKggB,gBAC7BG,EAAazjB,OAAS,EACxCyjB,EAAapgB,KAAI,SAACsgB,EAAUpgB,GAC1B7D,QAAQC,IAAI,mBAAoBgkB,EAAUpgB,EAAOkgB,GACjD,IAAIvP,EAAS,GACbA,EAAO9W,SAAW6lB,EAAexjB,MACjCyU,EAAO7W,KAAOmmB,EACdtP,EAAOwK,SAAWiF,EAASthB,OAC3B4R,EAAOlO,KAAKmO,MAGdrM,IAAMI,MAAM,2BAzBG,UA4BH/K,aAAuB,CACrC0mB,YAAa3P,EACb7W,SAAU6lB,EAAexjB,MACzB+jB,aAAcA,IA/BG,SA4Bfvc,EA5Be,SAiCQ,IAAhBA,EAAIC,QACbW,IAAMC,QAAQ,wBAEdD,IAAMI,MAAM,iCACZvI,QAAQC,IAAI,oCAAqCsH,IArChC,4CA/EnB,EAAK5H,MAAQ,CACXiX,YAAa,GACb2M,eAAgB,GAChBE,YAAa,GACbE,UAAW,IANI,E,8FAUnB,uBAAA9kB,EAAA,sDACEqD,KAAKxD,MAAM2K,kBACXnH,KAAKxD,MAAM8K,uBAFb,gD,sFAsBA,SAAmBlH,EAAWC,EAAWC,GACvC,GAAIF,EAAUqI,aAAezI,KAAKxD,MAAMiM,WAAY,CAClD,IAAIkM,EAAa3U,KAAKmS,oBAAoBnS,KAAKxD,MAAMiM,YACrDzI,KAAK3C,SAAS,CACZqX,YAAaC,IAIjB,GAAIvU,EAAUsI,kBAAoB1I,KAAKxD,MAAMkM,gBAAiB,CAC5D,IAAI5O,EAAOkG,KAAKxD,MAAMkM,gBAClB5O,GAAQA,EAAKsE,OAAS,IACxBtE,EAAOA,EAAK2H,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBggB,YAAY,QAElD1hB,KAAK3C,SAAS,CACZokB,UAAW3nB,O,oBA4EjB,WAAU,IAAD,OACD2nB,EAAczhB,KAAKvC,MAAnBgkB,UACAvgB,EAAalB,KAAKxD,MAAlB0E,SACF+gB,EAAY,IAAIzF,MAAK,IAAIA,MAAO0F,SAAQ,IAAI1F,MAAO2F,UAAY,IACnE,OACE,sBAAK/gB,UAAU,6BAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,KAAD,CAAkBxG,GAAG,4BAEvB,qBAAKwG,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,oCAC5B,cAAC,KAAD,CACEiD,MAAOmC,KAAKvC,MAAM4jB,eAClB/f,SAAUtB,KAAK0T,mBACfuB,QAASjV,KAAKvC,MAAMiX,iBAGxB,sBAAKtT,UAAU,mBAAf,UACE,gCAAO,cAAC,KAAD,CAAkBxG,GAAG,kCAC5B,cAAC,GAAD,CACE0G,SAAUtB,KAAKshB,yBACflgB,UAAU,eACVvD,MAAOmC,KAAKvC,MAAM8jB,YAClBlG,QAAS4G,OAGb,qBAAK7gB,UAAU,6BAAf,SACGqgB,GAAaA,EAAUrjB,OAAS,GAC/BqjB,EAAUhgB,KAAI,SAACC,EAAMC,GACnB,OACE,wBAAQP,WAA+B,IAApBM,EAAKggB,WAAsB,0BAA4B,mBAExEtf,QAAS,kBAAM,EAAKof,mBAAmB9f,IAFzC,SAIGR,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,SAH5CJ,QASf,qBAAKP,UAAU,SAAf,SACE,wBACEA,UAAU,oCACVgB,QAAS,kBAAM,EAAKuf,sBAFtB,SAIE,cAAC,KAAD,CAAkB/mB,GAAG,qD,GA1KR4H,cAoMdC,sBAhBS,SAAAhF,GACtB,MAAO,CACLmH,WAAYnH,EAAM8B,KAAKqF,WACvB1D,SAAUzD,EAAMiF,IAAIxB,SACpBuH,WAAYhL,EAAMkF,MAAM8F,WACxBC,gBAAiBjL,EAAMkF,MAAM+F,oBAIN,SAAA7F,GACzB,MAAO,CACLsE,gBAAiB,kBAAMtE,EAASC,SAChCwE,qBAAsB,kBAAMzE,EAASC,YAI1BL,CAA6C2e,ICxMtDgB,I,gEACJ,WAAY5lB,GAAQ,IAAD,8BACjB,cAAMA,IAwBR6lB,oBAAsB,SAAC3lB,GACrB,EAAKW,SAAS,CACZlD,MAAOuC,EAAME,OAAOiB,SA3BL,EA+BnBpB,oBA/BmB,yCA+BG,WAAOC,GAAP,oBAAAC,EAAA,yDAChB7C,EAAO4C,EAAME,OAAOC,QACpBC,EAAOhD,EAAK,IAFI,gCAICiD,IAAYC,UAAUF,GAJvB,OAIdG,EAJc,OAKlB,EAAKI,SAAS,CACZilB,UAAWrlB,IANK,2CA/BH,wDA0CnBslB,iBAAmB,WACjB,EAAK/lB,MAAMgmB,WAAW,EAAK/kB,QAzC3B,EAAKA,MAAQ,CACXtD,MAAO,GACPmoB,UAAW,IAJI,E,8FAQnB,uBAAA3lB,EAAA,sDACMqD,KAAKxD,MAAMimB,WACbziB,KAAK3C,SAAS,CACZlD,MAAO6F,KAAKxD,MAAMimB,UAAUtoB,QAHlC,gD,sFASA,SAAmBiG,EAAWC,EAAWC,GACnCF,EAAUqiB,YAAcziB,KAAKxD,MAAMimB,WACrCziB,KAAK3C,SAAS,CACZlD,MAAO6F,KAAKxD,MAAMimB,UAAUtoB,U,oBA0BlC,WAAU,IAAD,OACP,EAAwC6F,KAAKxD,MAAvCygB,EAAN,EAAMA,YAAayF,EAAnB,EAAmBA,iBAEnB,OADA5kB,QAAQC,IAAIiC,KAAKvC,OAEf,eAAC8P,GAAA,EAAD,CACE7P,OAAQuf,EACR7b,UAAW,0BACXoM,KAAK,KACLC,UAAQ,EAJV,UAME,sBAAKrM,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAd,8EACA,wBAAQA,UAAU,QAAQI,aAAW,QAAQY,QAASsgB,EAAtD,SACE,sBAAMC,cAAY,OAAlB,oBAGJ,cAAChV,GAAA,EAAD,UACE,sBAAKvM,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,4DACA,uBAAOA,UAAU,eAAeC,KAAK,QAAQxD,MAAOmC,KAAKvC,MAAMtD,MAC7DmH,SAAU,SAAC5E,GAAD,OAAW,EAAK2lB,oBAAoB3lB,SAElD,sBAAK0E,UAAU,mBAAf,UACE,4EACA,uBAAOA,UAAU,oBAAoBC,KAAK,OACxCC,SAAU,SAAC5E,GAAD,OAAW,EAAKD,oBAAoBC,cAItD,eAACkR,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQxB,MAAM,UAAUjK,QAAS,kBAAM,EAAKmgB,oBAA5C,kBACA,cAAC1U,GAAA,EAAD,CAAQxB,MAAM,YAAYjK,QAASsgB,EAAnC,8B,GA/EgBlgB,cAkGXC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6C2f,IC/FtDQ,G,kDACJ,WAAYpmB,GAAQ,IAAD,8BACjB,cAAMA,IAgBRqmB,eAjBmB,wBAiBF,mCAAAlmB,EAAA,6DACT4C,EAAS,EAAK/C,MAAd+C,KACAgiB,EAAgB,EAAK9jB,MAArB8jB,YACFK,EAAe,IAAIpF,KAAK+E,GAAa9E,UAH1B,SAICpgB,aAAuB,CACrCb,SAAU+D,EAAK3E,GACfa,KAAMmmB,IANO,QAIXvc,EAJW,SAQY,IAAhBA,EAAIC,SACb,EAAKjI,SAAS,CACZylB,YAAazd,EAAIvL,OAVN,2CAjBE,EAqCnBipB,yBAA2B,SAACtnB,GAC1B,EAAK4B,SAAS,CACZkkB,YAAa9lB,EAAK,IADpB,wBAEG,uBAAAkB,EAAA,sEACK,EAAKkmB,iBADV,6CAxCc,EA6CnBG,iBAAmB,SAACthB,GAClB,IAAI5H,EAAO,CACT0B,SAAUkG,EAAKlG,SACfynB,UAAWvhB,EAAKuhB,UAChB9oB,MAAOuH,EAAKwhB,YAAY/oB,MACxB2iB,SAAUpb,EAAKob,SACfqG,YAAazhB,EAAKwhB,YAAYxkB,WAEhC,EAAKrB,SAAS,CACZ+lB,mBAAmB,EACnBX,UAAW3oB,KAvDI,EA4DnB4oB,iBAAmB,WACjB,EAAKrlB,SAAS,CACZ+lB,mBAAmB,EACnBX,UAAW,MA/DI,EAmEnBD,WAnEmB,yCAmEN,WAAOa,GAAP,kBAAA1mB,EAAA,6DACL8lB,EAAc,EAAKhlB,MAAnBglB,UACN,EAAKplB,SAAS,CACZkf,eAAe,IAHN,SAKKjgB,aAAe,CAC7BnC,MAAOkpB,EAAUlpB,MACjBmoB,UAAWe,EAAUf,UACrB9mB,SAAUinB,EAAUjnB,SACpBynB,UAAWR,EAAUQ,UACrBnG,SAAU2F,EAAU3F,SACpB5b,SAAU,EAAK1E,MAAM0E,SACrBiiB,YAAaV,EAAUU,cAZd,YAKP9d,EALO,SAegB,IAAhBA,EAAIC,QAfJ,wBAgBT,EAAKjI,SAAS,CACZkf,eAAe,IAEjBtW,IAAMC,QAAQ,yBACd,EAAKwc,mBApBI,UAqBH,EAAKG,iBArBF,gCAuBT,EAAKxlB,SAAS,CACZkf,eAAe,IAEjBtW,IAAMI,MAAM,0BACZvI,QAAQC,IAAI,uBAAwBsH,GA3B3B,4CAnEM,sDAEjB,EAAK5H,MAAQ,CACX8jB,YAAazJ,KAAO,IAAI0E,MAAQkB,QAAQ,OAAOC,UAC/CmF,YAAa,GACbM,mBAAmB,EACnBX,UAAW,GACXlG,eAAe,GAPA,E,8FAWnB,uBAAA5f,EAAA,sDAGEqD,KAAK6iB,iBAHP,gD,sFAqBA,SAAmBziB,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAiExC,WAAU,IAAD,OACP,EAAoDlB,KAAKvC,MAAnDqlB,EAAN,EAAMA,YAAaM,EAAnB,EAAmBA,kBAAmBX,EAAtC,EAAsCA,UAChCvhB,EAAalB,KAAKxD,MAAlB0E,SACN,OACE,mCACE,eAAC,KAAD,CACE+N,OAAQjP,KAAKvC,MAAM8e,cACnBW,SAAO,EACP9Z,KAAK,gBAHP,UAME,sBAAKhC,UAAU,2BAAf,UACE,qBAAKA,UAAU,YAAf,iEAGA,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,8DACA,cAAC,GAAD,CACEE,SAAUtB,KAAK+iB,yBACf3hB,UAAU,eACVvD,MAAOmC,KAAKvC,MAAM8jB,iBAGtB,qBAAKngB,UAAU,8BAAf,SACE,uBAAOc,MAAO,CAAEwU,MAAO,QAAvB,SACE,kCACE,+BACE,qCACA,gDACA,sDACA,wDACA,mDACA,4CAEDoM,GAAeA,EAAY1kB,OAAS,EACnC0kB,EAAYrhB,KAAI,SAACC,EAAMC,GACrB,IAAIiW,EAAO1W,IAAaU,IAAUC,GAChCH,EAAK4hB,oBAAoBxhB,QAAUJ,EAAK4hB,oBAAoBvhB,QAC1DlD,EAASqC,IAAaU,IAAUC,GAClCH,EAAKwhB,YAAYzd,WAAW3D,QAAUJ,EAAKwhB,YAAYzd,WAAW1D,QACpE,OACE,+BACE,6BAAKJ,EAAQ,IACb,6BAAKiW,IACL,6BAAKlW,EAAKwhB,YAAYxkB,YACtB,6BAAKgD,EAAKwhB,YAAYtkB,UACtB,6BAAKC,IACL,6BACE,wBAAQuC,UAAU,iBAAiBgB,QAAS,kBAAM,EAAK4gB,iBAAiBthB,IAAxE,kCAPKC,MAab,+BACE,oBAAI4hB,QAAQ,IAAIrhB,MAAO,CAAEshB,UAAW,UAApC,qBADF,oBAQZ,cAAC,GAAD,CACEvG,YAAamG,EACbX,UAAWA,EACXC,iBAAkB1iB,KAAK0iB,iBACvBF,WAAYxiB,KAAKwiB,sB,GAtKDhgB,aA0LbC,sBAZS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,SACpB3B,KAAM9B,EAAM8B,KAAK0F,aAIM,SAAApC,GACzB,MAAO,KAIMJ,CAA6CmgB,IChMtDa,G,4JACJ,WAEE,IAAQ7e,EAAe5E,KAAKxD,MAApBoI,WACR,OACE,eAAC,IAAMjB,SAAP,WACGiB,GAAc,cAAC,GAAD,IACf,qBAAKxD,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmL,KAAK,0BAA0BkJ,UAAW2L,KACjD,cAAC,IAAD,CAAO7U,KAAK,yBAAyBkJ,UAAWmN,mB,GAXzCpgB,aAgCNC,sBAZS,SAAAhF,GACtB,MAAO,CACLimB,eAAgBjmB,EAAMiF,IAAIghB,eAC1B9e,WAAYnH,EAAM8B,KAAKqF,eAIA,SAAA/B,GACzB,MAAO,KAIMJ,CAA6CghB,IC/BtDE,I,yDACJ,WAAYnnB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXmmB,cAAc,EACdte,QAAS,GAJM,E,8FAQnB,mCAAA3I,EAAA,0DACMqD,KAAKxD,MAAMP,WAAY+D,KAAKxD,MAAMP,SAAS4nB,OADjD,uBAEQC,EAAY,IAAIC,gBAAgB/jB,KAAKxD,MAAMP,SAAS4nB,QACpDG,EAAQF,EAAUvpB,IAAI,SACtBiB,EAAWsoB,EAAUvpB,IAAI,YAJjC,SAKoBsB,aAA0B,CACxCmoB,MAAOA,EACPxoB,SAAUA,IAPhB,QAKQ6J,EALR,SAS+B,IAAhBA,EAAIC,QACbtF,KAAK3C,SAAS,CACZumB,cAAc,EACdte,QAASD,EAAIC,UAGftF,KAAK3C,SAAS,CACZumB,cAAc,EACdte,QAASD,GAAOA,EAAIC,QAAUD,EAAIC,SAAW,IAjBrD,gD,sFAuBA,SAAmBlF,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAIxC,WACE,MAAgClB,KAAKvC,MAA/BmmB,EAAN,EAAMA,aAActe,EAApB,EAAoBA,QACpB,OACE,qCACE,cAAC,GAAD,IACA,qBAAKlE,UAAU,yBAAf,UACoB,IAAjBwiB,EACC,mDAIA,8BACgB,KAAZte,EACA,qBAAKlE,UAAU,gBAAf,kEAEA,qBAAKA,UAAU,gBAAf,gI,GApDSoB,cAyEVC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CkhB,ICpEtDM,I,yDACJ,WAAYznB,GAAQ,IAAD,8BACjB,cAAMA,IAoDRohB,qBArDmB,yCAqDI,WAAOlhB,GAAP,0BAAAC,EAAA,2DACjB,EAAKH,MAAMukB,OAAS,EAAKvkB,MAAMukB,MAAMC,QAAU,EAAKxkB,MAAMukB,MAAMC,OAAOpmB,IADtD,uBAEfA,EAAK,EAAK4B,MAAMukB,MAAMC,OAAOpmB,GAC7BqB,EAAWS,EAAME,OAAOiB,MAHT,SAKH7B,aAA0B,CACxCpB,GAAIA,EACJqB,SAAUA,IAPO,QAKfoJ,EALe,SASQ,IAAhBA,EAAIC,UACTxL,EAAOuL,EAAIvL,KACXoqB,EAAc,GACdpqB,IAASoU,KAAEC,QAAQ9I,EAAIvL,QACrBqqB,EAAMrqB,EAAKsqB,kBACJD,EAAI/lB,OAAS,GACtB+lB,EAAI1iB,KAAI,SAAAC,GACNwiB,EAAY/f,KAAKzC,EAAKlG,aAI5B,EAAK6B,SAAS,CACZgnB,oBAAqBhf,EAAIvL,KACzBoqB,YAAaA,KAtBE,2CArDJ,sDAEjB,EAAKzmB,MAAQ,CACXymB,YAAa,GACbG,oBAAqB,GACrBxQ,aAAc,IALC,E,8FASnB,yCAAAlX,EAAA,0DACMqD,KAAKxD,MAAMukB,MAAMC,SAAUhhB,KAAKxD,MAAMukB,MAAMC,OAAOpmB,GADzD,wBAEQA,EAAKoF,KAAKxD,MAAMukB,MAAMC,OAAOpmB,GAFrC,SAGoBoB,aAA0B,CACxCpB,GAAIA,EACJqB,SAAU,QALhB,cAGQoJ,EAHR,gBAO4BrK,aAAkB,YAP9C,OAOQ2M,EAPR,OAQI7J,QAAQC,IAAIsH,GACRA,GAAuB,IAAhBA,EAAIC,SAAiBqC,GAAuC,IAAxBA,EAAYrC,UACrDxL,EAAOuL,EAAIvL,KACXoqB,EAAc,GACdpqB,IAASoU,KAAEC,QAAQ9I,EAAIvL,QACrBqqB,EAAMrqB,EAAKsqB,kBACJD,EAAI/lB,OAAS,GACtB+lB,EAAI1iB,KAAI,SAAAC,GACNwiB,EAAY/f,KAAKzC,EAAKlG,cAIxB8oB,EAAe3c,EAAY7N,OACXwqB,EAAalmB,OAAS,GACxCkmB,EAAaC,QAAQ,CACnBC,SAAU,KACV/jB,OAAQ,MACRY,KAAM,WACNU,QAAS,MACTD,QAAS,sBAGb9B,KAAK3C,SAAS,CACZgnB,oBAAqBhf,EAAIvL,KACzBoqB,YAAaA,EACbrQ,aAAcyQ,GAA8B,MAjCpD,iD,sFAuCA,SAAmBlkB,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAgCxC,WAAU,IAAD,OACP,EAAyDlB,KAAKvC,MAAxDymB,EAAN,EAAMA,YAAaG,EAAnB,EAAmBA,oBAAqBxQ,EAAxC,EAAwCA,aAClC3S,EAAalB,KAAKxD,MAAlB0E,SACN,OACE,sBAAKE,UAAU,6BAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGijB,IAAwBnW,KAAEC,QAAQkW,IAEjC,qBAAKnD,wBAAyB,CAAEC,OAAQkD,EAAoBlP,qBAGhE,qBAAK/T,UAAU,mBAAf,SACE,wBAAQE,SAAU,SAAC5E,GAAD,OAAW,EAAKkhB,qBAAqBlhB,IAAvD,SACGmX,GAAgBA,EAAazV,OAAS,GACrCyV,EAAapS,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAoB9D,MAAO6D,EAAKjB,OAAhC,SACGS,IAAaU,IAAUC,GAAKH,EAAKI,QAAUJ,EAAKK,SADtCJ,UAQtBuiB,GAAeA,EAAY9lB,OAAS,GACnC8lB,EAAYziB,KAAI,SAACC,EAAMC,GACrB,OACE,sBAAKP,UAAU,cAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,GAAD,CACE5F,SAAUkG,EACVyW,yBAAyB,EACzBE,kBAAkB,EAClBD,aAAa,QAKnB,sBAAKhX,UAAU,mBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,GAAD,CACEyc,mBAAoBnc,MAGxB,qBAAKN,UAAU,qBAAf,SACE,cAAC,GAAD,CAAkByc,mBAAoBnc,WAnBVC,gB,GA/GpBa,cA2JfC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CwhB,IC3JtDQ,I,yDACJ,WAAYjoB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXymB,YAAa,GACbQ,iBAAkB,IAJH,E,8FAQnB,qCAAA/nB,EAAA,2DACMqD,KAAKxD,MAAMukB,OAAS/gB,KAAKxD,MAAMukB,MAAMC,QAAUhhB,KAAKxD,MAAMukB,MAAMC,OAAOpmB,IAD7E,uBAEQA,EAAKoF,KAAKxD,MAAMukB,MAAMC,OAAOpmB,GAFrC,SAGoBwB,aAAuB,CACrCxB,GAAIA,IAJV,OAGQyK,EAHR,OAMIvH,QAAQC,IAAI,uBAAwBsH,GAChCA,GAAuB,IAAhBA,EAAIC,UACTxL,EAAOuL,EAAIvL,KACXoqB,EAAc,GACdpqB,IAASoU,KAAEC,QAAQ9I,EAAIvL,QACrBqqB,EAAMrqB,EAAK6qB,eACJR,EAAI/lB,OAAS,GACtB+lB,EAAI1iB,KAAI,SAAAC,GACNwiB,EAAY/f,KAAKzC,EAAKlG,aAK5BwE,KAAK3C,SAAS,CACZqnB,iBAAkBrf,EAAIvL,KACtBoqB,YAAaA,KArBrB,gD,sFA2BA,SAAmB9jB,EAAWC,EAAWC,GACnCF,EAAUc,SAAalB,KAAKxD,MAAM0E,W,oBAIxC,WACE,MAAwClB,KAAKvC,MAAvCymB,EAAN,EAAMA,YAAaQ,EAAnB,EAAmBA,iBAGnB,OAFA5mB,QAAQC,IAAImmB,GAGV,sBAAK9iB,UAAU,6BAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGsjB,IAAqBxW,KAAEC,QAAQuW,IAE9B,qCACE,8BAAMA,EAAiB5V,OACvB,qBAAKoS,wBAAyB,CAAEC,OAAQuD,EAAiBvP,wBAK9D+O,GAAeA,EAAY9lB,OAAS,GACnC8lB,EAAYziB,KAAI,SAACC,EAAMC,GACrB,OACE,sBAAKP,UAAU,cAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,GAAD,CACE5F,SAAUkG,EACVyW,yBAAyB,EACzBE,kBAAkB,EAClBD,aAAa,QAKnB,sBAAKhX,UAAU,mBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,GAAD,CACEyc,mBAAoBnc,MAGxB,qBAAKN,UAAU,qBAAf,SACE,cAAC,GAAD,CAAkByc,mBAAoBnc,WAnBVC,gB,GA9DvBa,cA0GZC,sBAXS,SAAAhF,GACtB,MAAO,CACLyD,SAAUzD,EAAMiF,IAAIxB,aAIG,SAAA2B,GACzB,MAAO,KAIMJ,CAA6CgiB,IC1FtDG,G,4MAEFC,qBAAuB,WACG,EAAKroB,MAAnBgO,UACyBpF,WAA3B0f,eAEE,EAAKtoB,MAAMuoB,aACXC,QAAQC,QAAQ,EAAKzoB,MAAMuoB,gBACtBG,MAAK,kBAAM,EAAK7nB,SAAS,CAAEynB,cAAc,OACzCK,OAAM,kBAAM,EAAK9nB,SAAS,CAAEynB,cAAc,OAE/C,EAAKznB,SAAS,CAAEynB,cAAc,M,uDAK1C,WACI9kB,KAAK6kB,yB,oBAGT,WACI,OACI,cAAC,WAAD,UACI,cAAC,IAAD,CAAQ3gB,QAASA,EAAjB,SACI,sBAAK9C,UAAU,iBAAf,UAGI,qBAAKA,UAAU,oBAAf,SACI,cAACgkB,GAAA,EAAD,CAAkBljB,MAAO,CAAE0B,OAAQ,QAAS8S,MAAO,QAAnD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOnK,KAAMA,IAAK8Y,KAAMC,OAAK,EAAC7P,UAAYpK,IAC1C,cAAC,IAAD,CAAOkB,KAAMA,IAAKgZ,MAAO9P,UAAWxK,EAAuBO,MAC3D,cAAC,IAAD,CAAOe,KAAMA,IAAKiZ,OAAQ/P,UAAW7K,EAAoB4K,MACzD,cAAC,IAAD,CAAOjJ,KAAM,WAAYkJ,UAAW7K,EAAoB6Y,MACxD,cAAC,IAAD,CAAOlX,KAAMA,IAAKkZ,SAAUhQ,UAAWsB,KACvC,cAAC,IAAD,CAAOxK,KAAMA,IAAKmZ,cAAejQ,UAAWmL,KAC5C,cAAC,IAAD,CAAOrU,KAAMA,IAAKoZ,gBAAiBlQ,UAAWwO,KAC9C,cAAC,IAAD,CAAO1X,KAAMA,IAAKqZ,cAAenQ,UAAWgP,KAC5C,cAAC,IAAD,CAAOlY,KAAMA,IAAKsZ,qBAAsBpQ,UAAWqQ,YAW/D,cAAC,IAAD,CACI3mB,SAAS,eACT4mB,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,qB,GA3DhB/jB,aAgFHC,sBAZS,SAAAhF,GACpB,MAAO,CACHyK,QAASzK,EAAMiF,IAAIwF,QACnBtD,WAAYnH,EAAM8B,KAAKqF,eAIJ,SAAA/B,GACvB,MAAO,KAIIJ,CAA6CmiB,ICjGxC4B,QACW,cAA7B3H,OAAO5iB,SAASwqB,UAEe,UAA7B5H,OAAO5iB,SAASwqB,UAEhB5H,OAAO5iB,SAASwqB,SAAS1F,MACvB,2D,aCJA2F,I,0CAAWC,IAAcC,wBAEzBC,G,4JAEF,WACI,MAA+B7mB,KAAKxD,MAA5BuS,EAAR,EAAQA,SAAU7N,EAAlB,EAAkBA,SAClB,OACI,cAAC,KAAD,CACI+W,OAAQ/W,EACRwlB,SAAUA,GAASxlB,GACnB4lB,cAAc,KAHlB,SAIK/X,Q,GATiBvM,aAqBnBC,sBANS,SAAAhF,GACpB,MAAO,CACHyD,SAAUzD,EAAMiF,IAAIxB,YAIY,KAAzBuB,CAA+BokB,ICvB1CE,IAASjjB,OACL,cAAC,WAAD,CAAUkjB,MAAO3c,EAAjB,SACI,cAAC,GAAD,UACI,cAAC,GAAD,CAAKG,UAAWA,QAGxBwV,SAASJ,eAAe,SF6G1B,kBAAmBqH,WACrBA,UAAUC,cAAcC,MAAMjC,MAAK,SAAAkC,GACjCA,EAAaC,iB,6QGnIZ,IAAM9a,EAAO,CAChB8Y,KAAM,IACNI,SAAU,QACVF,MAAO,SACP+B,QAAS,UACT9B,OAAQ,UACRE,cAAe,qBACfC,gBAAiB,wBACjBC,cAAe,qBAGfC,qBAAsB,mBAGbjkB,EAAY,CACrBC,GAAI,KACJmQ,GAAI,MAGKzT,EAAe,CACxBC,OAAQ,SACRoB,KAAM,OACN2nB,OAAQ,SACRC,KAAM,QAYG3V,EAAY,CACrBC,MAAO,KACPC,OAAQ,KACR0V,QAAS,M,cC3BE1qB,E,8FAVX,SAAiBD,GACb,OAAO,IAAIkoB,SAAQ,SAACC,EAASyC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc/qB,GACrB6qB,EAAOG,OAAS,kBAAM7C,EAAQ0C,EAAOtV,SACrCsV,EAAOI,QAAU,kBAAML,EAAO5pB,QAAQC,IAAI,+B,KCNhDqb,E,iGAcF,SAAoBxK,GAChB,OAAQA,GAAK,IAAMA,GAAK,IAAa,IAANA,GAAiB,IAANA,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,I,uBAGjF,SAAiBA,GACb,OAAQA,GAAK,IAAMA,GAAK,IAAQA,GAAK,IAAMA,GAAK,M,0BAEpD,SAAoBA,GAChB,OAAQA,GAAK,IAAMA,GAAK,K,uBAE5B,SAAiBA,GACb,OAAa,MAANA,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,I,oBAGlD,SAAcA,GACV,OAAa,MAANA,GAAmB,MAANA,M,KA7BtBwK,EAEK4O,GAAK,GAFV5O,EAIK6O,KAAO,GAJZ7O,EAMK8O,IAAM,EANX9O,EAQKC,MAAQ,GARbD,EAUK+O,EAAI,GAVT/O,EAYKgP,OAAS,GAqBLhP,Q,0BC9BTiP,EAAmB,SAAnBA,EAAoBC,GAAiC,IAAjBC,EAAgB,uDAAP,GAC/C,OAAsB,MAAlBD,EACO,GAEJrxB,OAAOuxB,KAAKF,GAAgBG,QAAO,SAAC/B,EAAUxd,GACjD,IAAMrL,EAAQyqB,EAAepf,GACvBwf,EAAcH,EAAM,UAAMA,EAAN,YAAgBrf,GAAQA,EAQlD,MANqB,kBAAVrL,EACP5G,OAAO0xB,OAAOjC,EAAdzvB,OAAA,IAAAA,CAAA,GAA0ByxB,EAAc7qB,IAExC5G,OAAO0xB,OAAOjC,EAAU2B,EAAgBxqB,EAAO6qB,IAG5ChC,IACR,KAGDA,EAAW,CACb,GAAM2B,EAAgBO,GACtB,GAAMP,EAAgBQ,IAGLlC,E,oGACjB,SAAuBzd,EAAK4f,GACxB,OAAOpC,EAASoC,GAAM5f,K,kCAG1B,WACI,OAAOwd,M,gFCzBWlkB,YAuCkBA,a,qMCzCtC4iB,E,4MAEFjU,IAAMC,IAAM2X,Y,EAEZC,cAAe,WAEX,OADmB,EAAK7X,IAAI8X,QACVD,iB,EAEtBE,aAAc,WAEV,OADmB,EAAK/X,IAAI8X,QACVC,gB,EAGtBC,eAAiB,WACb,GAAK,EAAKhY,KAAQ,EAAKA,IAAI8X,QAA3B,CAGA,IACMG,EADa,EAAKjY,IAAI8X,QACOI,kBACnC,EAAKC,SAASF,K,EAGlBE,SAAW,SAACC,GACR,IAAQC,EAAgB,EAAKhtB,MAArBgtB,YACR,GAAK,EAAKrY,KAAQ,EAAKA,IAAI8X,QAA3B,CAGA,IAAMQ,EAAa,EAAKtY,IAAI8X,QACtBS,EAAcD,EAAWP,eAC3BS,EAAY,GAED,SAATC,MACFD,EACgB,KAGhBF,EAAWI,UAAUH,GAAeH,EAAYG,GAAe,GAAKC,GAEhEH,IAA+B,IAAhBA,EACfI,IAEAE,YAAW,WACPF,MACD,KAIXA,K,EAGJG,sBAAwB,SAACvtB,GACrB,OACI,+CAASA,GAAT,IAAgB4E,UAAU,uB,EAIlC4oB,oBAAsB,SAACxtB,GACnB,OACI,+CAASA,GAAT,IAAgB4E,UAAU,qB,EAIlC6oB,sBAAwB,SAACztB,GACrB,OACI,+CAASA,GAAT,IAAgB4E,UAAU,uB,EAIlC8oB,oBAAsB,SAAC1tB,GACnB,OACI,+CAASA,GAAT,IAAgB4E,UAAU,qB,EAIlC+oB,WAAa,SAAC3tB,GACV,OACI,yB,4CAIR,WACI,MAA8FwD,KAAKxD,MAA3F4E,EAAR,EAAQA,UAAWgpB,EAAnB,EAAmBA,sBAAuBC,EAA1C,EAA0CA,wBAAyBtb,EAAnE,EAAmEA,SAAYwM,EAA/E,iBACA,OACI,cAAC,aAAD,yBACIpK,IAAKnR,KAAKmR,IACVmZ,UAAU,EACVC,gBAAiB,IACjBC,yBAAyB,EACzBppB,UAAWA,EAAYA,EAAY,oBAAsB,oBACrDma,GANR,IAOIwO,sBAAuBM,EAA0BrqB,KAAKmqB,WAAanqB,KAAK+pB,sBACxEC,oBAAqBI,EAAwBpqB,KAAKmqB,WAAanqB,KAAKgqB,oBACpEC,sBAAuBI,EAA0BrqB,KAAKmqB,WAAanqB,KAAKiqB,sBACxEC,oBAAqBE,EAAwBpqB,KAAKmqB,WAAanqB,KAAKkqB,oBAVxE,SAYKnb,S,GA/FcvM,aAqGhB4iB,O","file":"static/js/main.2e2ca941.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //admin\r\n    FETCH_GENDER_START: 'FETCH_GENDER_START',\r\n    FETCH_GENDER_SUCCESS: 'FETCH_GENDER_SUCCESS',\r\n    FETCH_GENDER_FAIlDED: 'FETCH_GENDER_FAIlDED',\r\n\r\n    FETCH_POSITION_SUCCESS: 'FETCH_POSITION_SUCCESS',\r\n    FETCH_POSITION_FAIlDED: 'FETCH_POSITION_FAIlDED',\r\n\r\n    FETCH_ROLE_SUCCESS: 'FETCH_ROLE_SUCCESS',\r\n    FETCH_ROLE_FAIlDED: 'FETCH_ROLE_FAIlDED',\r\n\r\n    SAVE_USER_SUCCESS: 'SAVE_USER_SUCCESS',\r\n    SAVE_USER_FAILDED: 'SAVE_USER_FAILDED',\r\n\r\n    CREATE_USER_SUCCESS: 'CREATE_USER_SUCCESS',\r\n    CREATE_USER_FAILED: 'CREATE_USER_FAILED',\r\n\r\n    EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS',\r\n    EDIT_USER_FAILED: 'EDIT_USER_FAILED',\r\n\r\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\r\n    DELETE_USER_FAILED: 'DELETE_USER_FAILED',\r\n\r\n    FETCH_ALL_USERS_SUCCESS: 'FETCH_ALL_USERS_SUCCESS',\r\n    FETCH_ALL_USERS_FAIlDED: 'FETCH_ALL_USERS_FAIlDED',\r\n\r\n    FETCH_TOP_DOCTOR_SUCCESS: 'FETCH_TOP_DOCTOR_SUCCESS',\r\n    FETCH_TOP_DOCTOR_FAIlDED: 'FETCH_TOP_DOCTOR_FAIlDED',\r\n\r\n    FETCH_ALL_DOCTORS_SUCCESS: 'FETCH_ALL_DOCTORS_SUCCESS',\r\n    FETCH_ALL_DOCTORS_FAIlDED: 'FETCH_ALL_DOCTORS_FAIlDED',\r\n\r\n    CREATE_INFOR_DOCTOR_SUCCESS: 'CREATE_INFOR_DOCTOR_SUCCESS',\r\n    CREATE_INFOR_DOCTOR_FAIlDED: 'CREATE_INFOR_DOCTOR_FAIlDED',\r\n\r\n    FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS: 'FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS',\r\n    FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED: 'FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED',\r\n\r\n    FETCH_REQUIRED_DOCTOR_INFOR_START: 'FETCH_REQUIRED_DOCTOR_INFOR_START',\r\n    FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS: 'FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS',\r\n    FETCH_REQUIRED_DOCTOR_INFOR_FAIlDED: 'FETCH_REQUIRED_DOCTOR_INFOR_FAIlDED',\r\n\r\n\r\n})\r\n\r\nexport default actionTypes;","import axios from 'axios';\r\n// import _ from 'lodash';\r\n// import config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        // const { data } = response;\r\n        return response.data\r\n        //     if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n        //         return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        //     }\r\n\r\n        //     // Return direct data to callback\r\n        //     if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n        //         return data['d'];\r\n        //     }\r\n        //     // Handle special case\r\n        //     if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n        //         return null;\r\n        //     }\r\n        //     return response.data;\r\n        // },\r\n        // (error) => {\r\n        //     const { response } = error;\r\n        //     if (response == null) {\r\n        //         return Promise.reject(error);\r\n        //     }\r\n\r\n        //     const { data } = response;\r\n\r\n        //     if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n        //         return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        //     }\r\n\r\n        //     if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n        //         return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        //     }\r\n\r\n        //     return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import axios from '../axios';\r\n\r\nconst handleLoginApi = (userEmail, userPassword) => {\r\n  return axios.post('/api/login', { email: userEmail, password: userPassword })\r\n}\r\n\r\nconst getAllUsers = (inputId) => {\r\n  return axios.get(`/api/get-all-users?id=${inputId}`)\r\n}\r\n\r\nconst createNewUserService = (data) => {\r\n  return axios.post('/api/create-new-user', data)\r\n}\r\n\r\nconst deleteUserService = (userId) => {\r\n  return axios.delete('/api/delete-user', {\r\n    data: { id: userId }\r\n  })\r\n}\r\n\r\nconst updateUserService = (inputdata) => {\r\n  return axios.put('/api/edit-user', inputdata)\r\n}\r\n\r\nconst getAllCodeService = (inputdata) => {\r\n  return axios.get(`/api/allcode?type=${inputdata}`)\r\n}\r\n\r\nconst getTopDoctorHomeService = (limit) => {\r\n  return axios.get(`/api/top-doctor-home?limit=${limit}`)\r\n}\r\n\r\nconst getAllDoctors = () => {\r\n  return axios.get('/api/get-all-doctors')\r\n}\r\n\r\nconst createInforDoctor = (data) => {\r\n  return axios.post('/api/create-infor-doctor', data)\r\n}\r\n\r\nconst getDetailInforDoctor = (id) => {\r\n  return axios.get(`/api/get-detail-doctor-by-id?id=${id}`)\r\n}\r\n\r\nconst saveBulkScheduleDoctor = (data) => {\r\n  return axios.post('/api/bulk-create-schedule', data)\r\n}\r\n\r\nconst getSheduleDoctorByDate = (doctorId, date) => {\r\n  return axios.get(`/api/get-schedule-doctor-by-date?doctorId=${doctorId}&date=${date}`)\r\n}\r\n\r\nconst getExtraInforDoctorById = (doctorId) => {\r\n  return axios.get(`/api/get-extra-infor-doctor-by-id?doctorId=${doctorId}`)\r\n}\r\n\r\nconst getprofileDoctorById = (doctorId) => {\r\n  return axios.get(`/api/get-profile-doctor-by-id?doctorId=${doctorId}`)\r\n}\r\n\r\nconst postPatientBookAppointment = (data) => {\r\n  return axios.post(\"/api/patient-book-appointment\", data)\r\n}\r\n\r\nconst postVerifyBookAppointment = (data) => {\r\n  return axios.post(\"/api/verify-book-appointment\", data)\r\n}\r\n\r\nconst createNewSpecialty = (data) => {\r\n  return axios.post(\"/api/create-new-specialty\", data)\r\n}\r\n\r\nconst getAllSpecialty = () => {\r\n  return axios.get(\"/api/get-specialty\")\r\n}\r\n\r\nconst getAllDetailSpecialtyById = (data) => {\r\n  return axios.get(`/api/get-detail-specialty-by-id?id=${data.id}&location=${data.location}`)\r\n}\r\n\r\nconst createNewClinic = (data) => {\r\n  return axios.post('/api/create-new-clinic', data)\r\n}\r\n\r\nconst getAllClinic = () => {\r\n  return axios.get(\"/api/get-clinic\")\r\n}\r\n\r\nconst getAllDetailClinicById = (data) => {\r\n  return axios.get(`/api/get-detail-clinic-by-id?id=${data.id}`)\r\n}\r\n\r\nconst getAllPatientForDoctor = (data) => {\r\n  return axios.get(`/api/get-list-patient-for-doctor?doctorId=${data.doctorId}&date=${data.date}`)\r\n}\r\n\r\nconst postSendRemedy = (data) => {\r\n  return axios.post('/api/send-remedy', data)\r\n}\r\n\r\nexport {\r\n  handleLoginApi, getAllUsers,\r\n  createNewUserService, deleteUserService,\r\n  updateUserService, getAllCodeService,\r\n  getTopDoctorHomeService, getAllDoctors,\r\n  createInforDoctor, getDetailInforDoctor,\r\n  saveBulkScheduleDoctor, getSheduleDoctorByDate,\r\n  getExtraInforDoctorById, getprofileDoctorById,\r\n  postPatientBookAppointment, postVerifyBookAppointment,\r\n  createNewSpecialty, getAllSpecialty, getAllDetailSpecialtyById,\r\n  createNewClinic, getAllClinic, getAllDetailClinicById,\r\n  getAllPatientForDoctor, postSendRemedy\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n// import { getAllCodeService } from '../../../services/userService';\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport './UserRedux.scss'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\nimport TableManageUser from './TableManageUser';\r\n\r\n\r\n\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            previewImgURL: '',\r\n            isOpen: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avatar: '',\r\n            action: '',\r\n            userEditId: '',\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n        // this.props.dispatch(actions.fetchGenderStart());\r\n        // try {\r\n        //     let res = await getAllCodeService('gender');\r\n        //     if (res && res.errCode === 0) {\r\n        //         this.setState({\r\n        //             genderArr: res.data\r\n        //         });\r\n        //     }\r\n        //     console.log(\">>>> check gender : \", res);\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGenders = this.props.genderRedux;\r\n            this.setState({\r\n                genderArr: arrGenders,\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.positionRedux !== this.props.positionRedux) {\r\n            let arrPositions = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPositions,\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRoles = this.props.roleRedux;\r\n            this.setState({\r\n                roleArr: arrRoles,\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.listUsers !== this.props.listUsers) {\r\n            let arrGenders = this.props.genderRedux;\r\n            let arrRoles = this.props.roleRedux;\r\n            let arrPositions = this.props.positionRedux;\r\n\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: '',\r\n                address: '',\r\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\r\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\r\n                role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : '',\r\n                avatar: '',\r\n                previewImgURL: '',\r\n                action: CRUD_ACTIONS.CREATE,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnchangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL: objectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    onChangeInput = (event, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        }, () => {\r\n            console.log(\"check input on change: \", this.state)\r\n\r\n        });\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address']\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleSaveUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n        let { action } = this.state;\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            //fire redux create user\r\n            // console.log(\"update user : \", this.state);\r\n            this.props.createNewUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                phonenumber: this.state.phoneNumber,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar,\r\n            })\r\n        } else {\r\n            // console.log(\"update user : \", this.state);\r\n            this.props.editAUserRedux({\r\n                id: this.state.userEditId,\r\n                email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phonenumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                roleId: this.state.role,\r\n                positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n            });\r\n        }\r\n        // setTimeout(() => {\r\n        //     this.props.fetchUserRedux();\r\n        // }, 2000)\r\n\r\n    };\r\n\r\n    handleEditUserFromParent = (user) => {\r\n        let imageBase64 = '';\r\n        // console.log(\"handleEditUserFromParent : \", user.image);\r\n        if (user.image) {\r\n            // const imageBuffer = Buffer.from(JSON.stringify(user.image))\r\n            // imageBase64 = `data:image/png;base64,${imageBuffer.toString('base64')}`\r\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary')\r\n        }\r\n        // console.log(\"handleEditUserFromParent : \", imageBase64);\r\n        // console.log(\"handleEditUserFromParent : \", user);\r\n        this.setState({\r\n            email: user.email,\r\n            password: 'HARDCODE',\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNumber: user.phonenumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            role: user.roleId,\r\n            position: user.positionId,\r\n            avatar: imageBase64,\r\n            previewImgURL: imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            userEditId: user.id,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let genders = this.state.genderArr;\r\n        let roles = this.state.roleArr;\r\n        let positions = this.state.positionArr;\r\n        let language = this.props.language;\r\n        let isLoadingGender = this.props.isLoadingGender;\r\n        let { email, password, firstName, lastName, phoneNumber, address, gender, position, role } = this.state\r\n        return (\r\n            <div className=\"user-redux-container\">\r\n                <div className=\"title\">User Redux bao thi</div>\r\n                <div className=\"user-redux-body\" >\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 my-3\"><FormattedMessage id=\"manage-user.add\" /></div>\r\n                            <div className=\"col-12\">{isLoadingGender === true ? 'Loading Gender' : ''}</div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.email\" /></label>\r\n                                <input className=\"form-control\" type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'email') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\r\n                                <input className=\"form-control\" type=\"password\"\r\n                                    value={password}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'password') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={firstName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'firstName') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={lastName}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'lastName') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'phoneNumber') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\r\n                                <input className=\"form-control\" type=\"text\"\r\n                                    value={address}\r\n                                    onChange={(event) => { this.onChangeInput(event, 'address') }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                                <select className=\"form-select\" aria-label=\"Default select example\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'gender') }}\r\n                                    value={gender}\r\n                                >\r\n                                    {genders && genders.length > 0 && genders.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\r\n                                <select className=\"form-select\" aria-label=\"Default select example\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'position') }}\r\n                                    value={position}\r\n                                >\r\n                                    {positions && positions.length > 0 && positions.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.roleid\" /></label>\r\n                                <select className=\"form-select\" aria-label=\"Default select example\"\r\n                                    onChange={(event) => { this.onChangeInput(event, 'role') }}\r\n                                    value={role}\r\n                                >\r\n                                    {roles && roles.length > 0 && roles.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.keyMap}>{language === LANGUAGES.VI ? item.valueVi : item.valueEn}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.image\" /></label>\r\n                                <div className='preview-img-container'>\r\n                                    <input id=\"previewImg\" type=\"file\" className=\"form-control\" hidden\r\n                                        onChange={(event) => this.handleOnchangeImage(event)}\r\n                                    />\r\n                                    <label className='label-upload' htmlFor=\"previewImg\">Tải Ảnh <i className='fas fa-upload'></i></label>\r\n                                    <div className=\"preview-image\"\r\n                                        style={{ backgroundImage: `url(${this.state.previewImgURL})` }}\r\n                                        onClick={() => this.openPreviewImage()}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <button className={this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n                                    onClick={() => this.handleSaveUser()}\r\n                                >\r\n                                    {this.state.action === CRUD_ACTIONS.EDIT ? <FormattedMessage id=\"manage-user.edit\" /> : <FormattedMessage id=\"manage-user.save\" />}\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-12 mb-5\">\r\n                                <TableManageUser\r\n                                    handleEditUserFromParentkey={this.handleEditUserFromParent}\r\n                                    action={this.state.action}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.isOpen === true &&\r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        roleRedux: state.admin.roles,\r\n        positionRedux: state.admin.positions,\r\n        isLoadingGender: state.admin.isLoadingGender,\r\n        listUsers: state.admin.users,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n        editAUserRedux: (data) => dispatch(actions.editAUser(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./TableManageUser.scss\";\r\nimport * as actions from '../../../store/actions';\r\n\r\n\r\n\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n  console.log('handleEditorChange', html, text);\r\n}\r\n\r\n\r\nclass TableManageUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userRedux: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchUserRedux();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      this.setState({\r\n        userRedux: this.props.listUsers\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDeleteUser = (user) => {\r\n    this.props.deleteUserRedux(user.id);\r\n  };\r\n\r\n  handleEditUser = (user) => {\r\n    this.props.handleEditUserFromParentkey(user);\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(\"check list user\", this.props.listUsers);\r\n    // console.log(\"check componentDidUpdate \", this.state.userRedux);\r\n    let arrUsers = this.state.userRedux;\r\n    return (\r\n      <React.Fragment>\r\n        <table id=\"TableManageUser\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Email</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Action</th>\r\n            </tr>\r\n            {arrUsers && arrUsers.length > 0 &&\r\n              arrUsers.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.address}</td>\r\n                    <td>{item.phonenumber}</td>\r\n                    <td>\r\n                      <button className=\"btn-edit\"\r\n                        onClick={() => this.handleEditUser(item)}\r\n                      ><i className=\"fas fa-pencil-alt\"></i></button>\r\n                      <button className=\"btn-delete\"\r\n                        onClick={() => this.handleDeleteUser(item)}\r\n                      ><i className=\"fas fa-trash\"></i></button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n        <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    listUsers: state.admin.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n    deleteUserRedux: (id) => dispatch(actions.deleteAUser(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './OutStandingDoctor.scss'\r\nimport Slider from \"react-slick\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass OutStandingDoctor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      arrDoctors: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctorsRedux\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadTopDoctors();\r\n  }\r\n\r\n  handleViewDetailDoctor = (doctor) => {\r\n    console.log(doctor)\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let arrDoctors = this.state.arrDoctors\r\n    let language = this.props.language;\r\n    // arrDoctors = arrDoctors.concat(arrDoctors)\r\n    // console.log(\"==========   :  \", this.state);\r\n    return (\r\n      <div className=\"section-share section-outstanding-doctor\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\"><FormattedMessage id=\"homepage.out-standing-doctor\" /></span>\r\n            <button className=\"btn-section\"><FormattedMessage id=\"homepage.more-infor\" /></button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n\r\n              {arrDoctors && arrDoctors.length > 0 &&\r\n                arrDoctors.map((item, index) => {\r\n                  let imageBase64 = '';\r\n                  if (item.image) {\r\n                    // const imageBuffer = Buffer.from(JSON.stringify(user.image))\r\n                    // imageBase64 = `data:image/png;base64,${imageBuffer.toString('base64')}`\r\n                    imageBase64 = new Buffer(item.image, 'base64').toString('binary')\r\n                  }\r\n                  let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\r\n                  let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n                  return (\r\n                    <div className=\"section-customize\" key={index} onClick={() => this.handleViewDetailDoctor(item)}>\r\n                      <div className='customize-border'>\r\n                        <div className=\"outer-bg\">\r\n                          <div className=\"bg-image section-outstanding-doctor\"\r\n                            style={{ backgroundImage: `url(${imageBase64})` }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"position text-center\">\r\n                          <div>{language === LANGUAGES.VI ? nameVi : nameEn}</div>\r\n                          <div>Cơ Xương Khớp 1</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </Slider>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    topDoctorsRedux: state.admin.topDoctors,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\n\r\nexport const changeLanguageApp = (languageInput) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: languageInput\r\n}) ","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})","import actionTypes from './actionTypes';\r\nimport {\r\n  getAllCodeService, createNewUserService,\r\n  getAllUsers, deleteUserService,\r\n  updateUserService, getTopDoctorHomeService, getAllDoctors,\r\n  createInforDoctor, getAllSpecialty, getAllClinic\r\n} from '../../services/userService';\r\nimport { toast } from \"react-toastify\";\r\n\r\n// export const fetchGenderStart = () => ({\r\n//   type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_GENDER_START })\r\n      let res = await getAllCodeService(\"GENDER\")\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchGenderSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchGenderFaided());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchGenderFaided());\r\n      console.log(\"fetchGenderFailed : \", e)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n  type: actionTypes.FETCH_GENDER_SUCCESS,\r\n  data: genderData\r\n})\r\n\r\nexport const fetchGenderFaided = () => ({\r\n  type: actionTypes.FETCH_GENDER_FAIlDED\r\n})\r\n\r\nexport const fetchPositionStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_GENDER_START })\r\n      let res = await getAllCodeService(\"POSITION\")\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPositionSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPositionFaided());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPositionFaided());\r\n      console.log(\"fetchGenderFailed : \", e)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n  type: actionTypes.FETCH_POSITION_SUCCESS,\r\n  data: positionData\r\n})\r\n\r\nexport const fetchPositionFaided = () => ({\r\n  type: actionTypes.FETCH_POSITION_FAIlDED\r\n})\r\n\r\nexport const fetchRoleStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_GENDER_START })\r\n      let res = await getAllCodeService(\"ROLE\")\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchRoleSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchRoleFaided());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchRoleFaided());\r\n      console.log(\"fetchGenderFailed : \", e)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n  type: actionTypes.FETCH_ROLE_SUCCESS,\r\n  data: roleData\r\n})\r\n\r\nexport const fetchRoleFaided = () => ({\r\n  type: actionTypes.FETCH_ROLE_FAIlDED\r\n})\r\n\r\nexport const createNewUser = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await createNewUserService(data)\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"create a new user succedd!\");\r\n        dispatch(saveUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        toast.error(\"create a user faild!\");\r\n        dispatch(saveUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"create a user faild!\");\r\n      dispatch(saveUserFailed());\r\n      console.log(\"fetchGenderStart : \", e)\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const saveUserSuccess = () => ({\r\n  type: actionTypes.CREATE_USER_SUCCESS\r\n})\r\n\r\nexport const saveUserFailed = () => ({\r\n  type: actionTypes.CREATE_USER_FAILED\r\n})\r\n\r\n\r\nexport const fetchAllUserStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllUsers(\"ALL\");\r\n      if (res && res.errCode === 0) {\r\n        let users = res.users.reverse();\r\n        dispatch(fetchAllUserSuccess(users));\r\n      } else {\r\n        toast.error(\"Fetch all users failed!\");\r\n        dispatch(fetchAllUserFaided());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Fetch all users failed!\");\r\n      dispatch(fetchAllUserFaided());\r\n      console.log(\"fetchGenderFailed : \", e)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const fetchAllUserSuccess = (Data) => ({\r\n  type: actionTypes.FETCH_ALL_USERS_SUCCESS,\r\n  users: Data\r\n})\r\n\r\nexport const fetchAllUserFaided = () => ({\r\n  type: actionTypes.FETCH_ALL_USERS_FAIlDED\r\n})\r\n\r\n\r\nexport const deleteAUser = (userId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await deleteUserService(userId)\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"delete user succeed!\");\r\n        dispatch(deleteUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        toast.error(\"delete user faild!\");\r\n        dispatch(deleteUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"delete user faild!\");\r\n      dispatch(deleteUserFailed());\r\n      console.log(\"fetchGenderStart : \", e)\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUserSuccess = () => ({\r\n  type: actionTypes.DELETE_USER_SUCCESS\r\n})\r\n\r\nexport const deleteUserFailed = () => ({\r\n  type: actionTypes.DELETE_USER_FAILED\r\n})\r\n\r\nexport const editAUser = (user) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await updateUserService(user)\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"update user succeed!\");\r\n        dispatch(editUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        toast.error(\"update user faild!\");\r\n        dispatch(editUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"update user faild!\");\r\n      dispatch(editUserFailed());\r\n      console.log(\"fetchGenderStart : \", e)\r\n    }\r\n  }\r\n};\r\n\r\nexport const editUserSuccess = () => ({\r\n  type: actionTypes.CREATE_USER_SUCCESS\r\n})\r\n\r\nexport const editUserFailed = () => ({\r\n  type: actionTypes.CREATE_USER_FAILED\r\n})\r\n\r\nexport const fetchTopDoctor = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getTopDoctorHomeService('');\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\r\n          dataDoctors: res.data,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_TOP_DOCTOR_FAIlDED,\r\n        })\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"get all doctor faild!\", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_TOP_DOCTOR_FAIlDED,\r\n      })\r\n    }\r\n  }\r\n}\r\n// let res1 = await getTopDoctorHomeService(4);\r\n\r\nexport const fetchTopDoctorSuccess = () => ({\r\n  type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS\r\n})\r\n\r\nexport const fetchTopDoctorFailed = () => ({\r\n  type: actionTypes.FETCH_TOP_DOCTOR_FAIlDED\r\n})\r\n\r\n\r\nexport const fetchALLDoctors = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllDoctors();\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DOCTORS_SUCCESS,\r\n          dataDr: res.data,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DOCTORS_FAIlDED,\r\n        })\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"get all doctor faild!\", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ALL_DOCTORS_FAIlDED,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateInforDoctor = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await createInforDoctor(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"create infor doctor succeed!\");\r\n        dispatch({\r\n          type: actionTypes.CREATE_INFOR_DOCTOR_SUCCESS\r\n        })\r\n      } else {\r\n        toast.error(\"create infor doctor failded!\");\r\n        dispatch({\r\n          type: actionTypes.CREATE_INFOR_DOCTOR_FAIlDED,\r\n        })\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"create infor doctor failded!\", e);\r\n      dispatch({\r\n        type: actionTypes.CREATE_INFOR_DOCTOR_FAIlDED,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchALLScheduleTime = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllCodeService(\"TIME\")\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS,\r\n          dataTime: res.data,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED,\r\n        })\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED!\", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAllRequiredDoctorInfor = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START })\r\n      let resPrice = await getAllCodeService(\"PRICE\");\r\n      let resPayment = await getAllCodeService(\"PAYMENT\");\r\n      let resProvince = await getAllCodeService(\"PROVINCE\");\r\n      let resSpecialty = await getAllSpecialty();\r\n      let resClinic = await getAllClinic();\r\n\r\n      if (resPrice && resPrice.errCode === 0\r\n        && resPayment && resPayment.errCode === 0\r\n        && resProvince && resProvince.errCode === 0\r\n        && resSpecialty && resSpecialty.errCode === 0\r\n        && resClinic && resClinic.errCode === 0) {\r\n        let data = {\r\n          resPrice: resPrice.data,\r\n          resPayment: resPayment.data,\r\n          resProvince: resProvince.data,\r\n          resSpecialty: resSpecialty.data,\r\n          resClinic: resClinic.data,\r\n        }\r\n        dispatch(fetchRequiredDoctorInforSuccess(data))\r\n      } else {\r\n        dispatch(fetchRequiredDoctorInforFailed())\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"fetchRequiredDoctorInforFailed!\", e);\r\n      dispatch(fetchRequiredDoctorInforFailed())\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchRequiredDoctorInforSuccess = (allRequireData) => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS,\r\n  data: allRequireData\r\n})\r\n\r\nexport const fetchRequiredDoctorInforFailed = () => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIlDED\r\n})","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'en',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            console.log('action language changed : ' + action.language)\r\n            return {\r\n                ...state,\r\n                language: action.language,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.USER_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userInfo: action.userInfo\r\n      }\r\n    case actionTypes.USER_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null\r\n      }\r\n    case actionTypes.PROCESS_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  isLoadingGender: false,\r\n  genders: [],\r\n  roles: [],\r\n  positions: [],\r\n  users: [],\r\n  topDoctors: [],\r\n  allDoctors: [],\r\n  allScheduleTime: [],\r\n  allRequiredDoctorInfor: [],\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_GENDER_START:\r\n      let copyState = { ...state };\r\n      copyState.isLoadingGender = true;\r\n      return {\r\n        ...copyState\r\n      }\r\n    case actionTypes.FETCH_GENDER_SUCCESS:\r\n      state.genders = action.data\r\n      state.isLoadingGender = false;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_GENDER_FAIlDED:\r\n      state.isLoadingGender = false;\r\n      state.genders = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_POSITION_SUCCESS:\r\n      state.positions = action.data;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_POSITION_FAIlDED:\r\n      state.positions = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ROLE_SUCCESS:\r\n      state.roles = action.data;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ROLE_FAIlDED:\r\n      state.roles = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n      state.users = action.users;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALL_USERS_FAIlDED:\r\n      state.users = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n      state.topDoctors = action.dataDoctors;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_TOP_DOCTOR_FAIlDED:\r\n      state.topDoctors = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\r\n      state.allDoctors = action.dataDr;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALL_DOCTORS_FAIlDED:\r\n      state.allDoctors = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\r\n      state.allScheduleTime = action.dataTime;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAIlDED:\r\n      state.allScheduleTime = [];\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\r\n      state.allRequiredDoctorInfor = action.data;\r\n      return {\r\n        ...state\r\n      }\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIlDED:\r\n      state.allRequiredDoctorInfor = [];\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default adminReducer;","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\nimport adminReducer from './adminReducer';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n};\r\n\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\n// import * as actions from \"../store/actions\";\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { handleLoginApi } from '../../services/userService';\r\n// import { Label } from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      isShowPassword: false,\r\n      errMessage: '',\r\n    };\r\n  }\r\n\r\n  handleOnChangeUsername = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  };\r\n\r\n  handleOnChangePassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n  };\r\n\r\n  handleLogin = async () => {\r\n    this.setState({\r\n      errMessage: '',\r\n    })\r\n    try {\r\n      let data = await handleLoginApi(this.state.username, this.state.password);\r\n      if (data && data.errCode !== 0) {\r\n        this.setState({\r\n          errMessage: data.message,\r\n        })\r\n      }\r\n      if (data && data.errCode === 0) {\r\n        // do it sussess\r\n        console.log('login successful', data.user)\r\n        this.props.userLoginSuccess(data.user)\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response.data.message);\r\n      if (e.response) {\r\n        if (e.response.data) {\r\n          this.setState({\r\n            errMessage: e.response.data.message\r\n          })\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShowHidePassword = () => {\r\n    this.setState({\r\n      isShowPassword: !this.state.isShowPassword\r\n    });\r\n  };\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.key === 'Enter' || event.keyCode === 13) {\r\n      console.log('Enter : ' + event);\r\n      this.handleLogin();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"login-background\">\r\n        <div className=\"login-container\">\r\n          <div className=\"login-content row\">\r\n            <div className=\"col-12 text-login\">LOGIN</div>\r\n            <div className=\"col-12 form-group login-input\">\r\n              <label>UserName: </label>\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your username\"\r\n                value={this.state.username}\r\n                onChange={(event) => this.handleOnChangeUsername(event)}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 form-group login-input\">\r\n              <label>Password: </label>\r\n              <div className='custom-input-password'>\r\n                <input type={this.state.isShowPassword ? 'text' : 'password'}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter your password\"\r\n                  value={this.state.password}\r\n                  onChange={(event) => this.handleOnChangePassword(event)}\r\n                  onKeyDown={(event) => this.handleKeyDown(event)}\r\n                />\r\n                <span onClick={() => { this.handleShowHidePassword() }}>\r\n\r\n                  <i className={this.state.isShowPassword ? \"far fa-eye\" : \"fas fa-eye-slash\"}></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\" style={{ color: \"red\" }}>\r\n              {this.state.errMessage}\r\n            </div>\r\n            <div className=\"col-12 form-group\">\r\n              <button className=\"btn-login\" onClick={() => { this.handleLogin() }}>Login</button>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <span className=\"forgot-password\">Forgot your password?</span>\r\n            </div>\r\n            <div className=\"col-12 text-center mt-3\">\r\n              <span className=\"text-other-login\">Or Login With:</span>\r\n            </div>\r\n            <div className=\"col-12 social-login\">\r\n              <i className=\"fab fa-google-plus-g google\"></i>\r\n              <i className=\"fab fa-facebook-f facebook\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n    // userLoginFail: () => dispatch(actions.userLoginFail()),\r\n    userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import EventEmitter from 'events'\r\n\r\nconst _emitter = new EventEmitter();\r\n_emitter.setMaxListeners(0);\r\n\r\nexport const emitter = _emitter;","import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from \"../../utils/emitter\"\r\n\r\nclass ModalUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      phonenumber: '',\r\n      // gender: '',\r\n      // roleId: '',\r\n    };\r\n    this.listenToEmitter();\r\n  }\r\n\r\n  listenToEmitter() {\r\n    emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n      this.setState({\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        phonenumber: '',\r\n        // gender: '',\r\n        // roleId: '',\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n  toggle = () => {\r\n    this.props.toggleFormParent();\r\n  };\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    // console.log(event.target.value, id)\r\n    //bad code here\r\n    // this.setState[id] = event.target.value;\r\n    // this.setState({\r\n    //   ...this.state\r\n    // }, () => {\r\n    //   console.log(\"check bad state\", this.state);\r\n    // })\r\n    // good code here\r\n    let copyState = { ...this.state }\r\n    copyState[id] = event.target.value;\r\n    this.setState({ ...copyState })\r\n\r\n\r\n  };\r\n\r\n  checkValideInput = () => {\r\n    let isValid = true;\r\n    let arrInput = [\"email\", \"password\", \"firstName\", \"lastName\", \"address\", \"phonenumber\"];\r\n    for (let i = 0; i < arrInput.length; i++) {\r\n      if (!this.state[arrInput[i]]) {\r\n        isValid = false;\r\n        alert(\"Missing parameter : \" + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid\r\n  };\r\n\r\n  handleAddNewUser = () => {\r\n    let isValid = this.checkValideInput();\r\n    if (isValid === true) {\r\n      this.props.createNewUser(this.state);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => { this.toggle() }}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <ModalHeader toggle={() => { this.toggle() }}>Create A New User</ModalHeader>\r\n        <ModalBody>\r\n          <div className='modal-user-body'>\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                value={this.state.email}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input type='Password'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                value={this.state.password}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>First Name</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                value={this.state.firstName}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last Name</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                value={this.state.lastName}\r\n              />\r\n            </div>\r\n            <div className=\"input-container max-with-input\">\r\n              <label>Address</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"address\") }}\r\n                value={this.state.address}\r\n              />\r\n            </div>\r\n            <div className=\"input-container max-with-input\">\r\n              <label>Phone Number</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"phonenumber\") }}\r\n                value={this.state.phonenumber}\r\n              />\r\n            </div>\r\n            {/* <div className=\"input-container\">\r\n              <label>Sex</label>\r\n              <select id=\"gender\" class=\"form-select\" name=\"gender\">\r\n                <option value=\"1\" selected>Female</option>\r\n                <option value=\"0\">Male</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Role</label>\r\n              <select id=\"roleId\" class=\"form-select\" name=\"roleId\">\r\n                <option value=\"0\" selected>Admin</option>\r\n                <option value=\"1\">Doctor</option>\r\n                <option value=\"2\">Patient</option>\r\n              </select>\r\n            </div> */}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className='px-3'\r\n            onClick={() => { this.handleAddNewUser() }}>\r\n            Save Change</Button>{' '}\r\n          <Button color=\"secondary\" className='px-3' onClick={() => { this.toggle() }}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from \"../../utils/emitter\"\r\nimport _ from 'lodash';\r\n\r\nclass ModalEditUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      phonenumber: '',\r\n      // gender: '',\r\n      // roleId: '',\r\n    };\r\n    this.listenToEmitter();\r\n  }\r\n\r\n  listenToEmitter() {\r\n    emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n      this.setState({\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        phonenumber: '',\r\n        // gender: '',\r\n        // roleId: '',\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    let user = this.props.currentUser;\r\n    // console.log('didMount edit modal : ', user);\r\n    if (user && !_.isEmpty(user)) {\r\n      this.setState({\r\n        id: user.id,\r\n        email: user.email,\r\n        password: 'hackcode',\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        address: user.address,\r\n        phonenumber: user.phonenumber\r\n      })\r\n    }\r\n  }\r\n  toggle = () => {\r\n    this.props.toggleFormParent();\r\n  };\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    // console.log(event.target.value, id)\r\n    //bad code here\r\n    // this.setState[id] = event.target.value;\r\n    // this.setState({\r\n    //   ...this.state\r\n    // }, () => {\r\n    //   console.log(\"check bad state\", this.state);\r\n    // })\r\n    // good code here\r\n    let copyState = { ...this.state }\r\n    copyState[id] = event.target.value;\r\n    this.setState({ ...copyState })\r\n\r\n\r\n  };\r\n\r\n  checkValideInput = () => {\r\n    let isValid = true;\r\n    let arrInput = [\"email\", \"password\", \"firstName\", \"lastName\", \"address\", \"phonenumber\"];\r\n    for (let i = 0; i < arrInput.length; i++) {\r\n      if (!this.state[arrInput[i]]) {\r\n        isValid = false;\r\n        alert(\"Missing parameter : \" + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid\r\n  };\r\n\r\n  handleUpdateUser = () => {\r\n    let isValid = this.checkValideInput();\r\n    if (isValid === true) {\r\n      this.props.editUser(this.state);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => { this.toggle() }}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <ModalHeader toggle={() => { this.toggle() }}>Edit A New User</ModalHeader>\r\n        <ModalBody>\r\n          <div className='modal-user-body'>\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                value={this.state.email}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input type='Password'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                value={this.state.password}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>First Name</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                value={this.state.firstName}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last Name</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                value={this.state.lastName}\r\n              />\r\n            </div>\r\n            <div className=\"input-container max-with-input\">\r\n              <label>Address</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"address\") }}\r\n                value={this.state.address}\r\n              />\r\n            </div>\r\n            <div className=\"input-container max-with-input\">\r\n              <label>Phone Number</label>\r\n              <input type='text'\r\n                onChange={(event) => { this.handleOnChangeInput(event, \"phonenumber\") }}\r\n                value={this.state.phonenumber}\r\n              />\r\n            </div>\r\n            {/* <div className=\"input-container\">\r\n              <label>Sex</label>\r\n              <select id=\"gender\" class=\"form-select\" name=\"gender\">\r\n                <option value=\"1\" selected>Female</option>\r\n                <option value=\"0\">Male</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Role</label>\r\n              <select id=\"roleId\" class=\"form-select\" name=\"roleId\">\r\n                <option value=\"0\" selected>Admin</option>\r\n                <option value=\"1\">Doctor</option>\r\n                <option value=\"2\">Patient</option>\r\n              </select>\r\n            </div> */}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className='px-3'\r\n            onClick={() => { this.handleUpdateUser() }}>\r\n            Update User</Button>{' '}\r\n          <Button color=\"secondary\" className='px-3' onClick={() => { this.toggle() }}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./UserManage.scss\";\r\nimport { getAllUsers, createNewUserService, deleteUserService, updateUserService } from '../../services/userService';\r\nimport ModalUser from './ModalUser';\r\nimport { emitter } from '../../utils/emitter';\r\nimport ModalEditUser from './ModalEditUser';\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n            isOpenModalEditUser: false,\r\n            userEdit: {},\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUsersFromReact();\r\n    }\r\n\r\n    getAllUsersFromReact = async () => {\r\n        let response = await getAllUsers('ALL');\r\n\r\n        if (response && response.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalUser: true\r\n        });\r\n    }\r\n\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser,\r\n        });\r\n    }\r\n\r\n    toggleUserEditModal = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalUser,\r\n        });\r\n    }\r\n\r\n    createNewUser = async (data) => {\r\n        console.log(data);\r\n        try {\r\n            let response = await createNewUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage);\r\n            } else {\r\n                await this.getAllUsersFromReact();\r\n                this.setState({\r\n                    isOpenModalUser: false,\r\n                });\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    };\r\n\r\n    handleDeleteUser = async (user) => {\r\n        try {\r\n            let res = await deleteUserService(user.id);\r\n            if (res && res.errCode === 0) {\r\n                await this.getAllUsersFromReact();\r\n            } else {\r\n                alert(\"delete user not found\");\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    handleEditUser = async (user) => {\r\n        try {\r\n            this.setState({\r\n                isOpenModalEditUser: true,\r\n                userEdit: user\r\n            });\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    handleUpdateUser = async (user) => {\r\n        try {\r\n            let res = await updateUserService(user);\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    isOpenModalEditUser: false,\r\n                });\r\n                await this.getAllUsersFromReact();\r\n            } else {\r\n                alert(\"============== res.errCode ========  : \", res.errCode);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    /** Life cycle\r\n     *  Run component:\r\n     *   1. Run construct -> init state\r\n     *   2. Did mount\r\n     *   3. Render\r\n     *   4. Do something\r\n     * \r\n     * \r\n     */\r\n    render() {\r\n        let arrUsers = this.state.arrUsers;\r\n        return (\r\n            <div className=\"users-container\">\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModalUser}\r\n                    toggleFormParent={this.toggleUserModal}\r\n                    createNewUser={this.createNewUser}\r\n                />\r\n                {\r\n                    this.state.isOpenModalEditUser &&\r\n\r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        toggleFormParent={this.toggleUserEditModal}\r\n                        currentUser={this.state.userEdit}\r\n                        editUser={this.handleUpdateUser}\r\n                    />\r\n                }\r\n                <div className=\"title text-center\">\r\n                    Manage users with Eric\r\n                </div>\r\n                <div className=\"mx-1\">\r\n                    <button className=\"btn btn-primary ps-3\"\r\n                        onClick={() => this.handleAddNewUser()}><i className=\"fas fa-plus\"></i>Add New Users</button>\r\n                </div>\r\n                <div className=\"users-table mt-3 mx-1\">\r\n                    <table id=\"customers\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Address</th>\r\n                                <th>Phone Number</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n                            {arrUsers && arrUsers.map((item, index) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.firstName}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>{item.phonenumber}</td>\r\n                                        <td>\r\n                                            <button className=\"btn-edit\" onClick={() => this.handleEditUser(item)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n                                            <button className=\"btn-delete\" onClick={() => this.handleDeleteUser(item)}><i className=\"fas fa-trash\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n\r\n                            })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n    { //quản lý người dùng\r\n        name: 'menu.admin.manage-user',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.crud', link: '/system/user-manage'\r\n            },\r\n            {\r\n                name: 'menu.admin.crud-redux', link: '/system/user-redux'\r\n            },\r\n            {\r\n                name: 'menu.admin.manage-doctor', link: '/system/manage-doctor'\r\n                //     subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.user-redux', link: '/system/user-redux' },\r\n                //     { name: 'menu.system.system-administrator.register-package-group-or-account', link: '/system/register-package-group-or-account' },\r\n                //   ]\r\n            },\r\n            // {\r\n            //     name: 'menu.admin.manage-admin', link: '/system/user-admin'\r\n            // },\r\n            { //quản lý kế hoạch khám bệnh của bác sĩ\r\n                name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule'\r\n            }\r\n\r\n        ]\r\n    },\r\n    { //quản lý phòng khám\r\n        name: 'menu.admin.clinic',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-clinic', link: '/system/manage-clinic'\r\n            },\r\n\r\n\r\n        ]\r\n    },\r\n    { //quản lý Chuyên Khoa\r\n        name: 'menu.admin.specialty',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-specialty', link: '/system/manage-specialty'\r\n            },\r\n\r\n\r\n        ]\r\n    },\r\n    { //quản lý cẩm nang\r\n        name: 'menu.admin.handbook',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-handbook', link: '/system/manage-handbook'\r\n            },\r\n\r\n\r\n        ]\r\n    },\r\n];\r\n\r\nexport const doctorMenu = [\r\n    {\r\n        name: 'menu.admin.manage-user',\r\n        menus: [\r\n            { //quản lý kế hoạch khám bệnh của bác sĩ\r\n                name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule'\r\n            },\r\n            { //quản lý bệnh nhân khám bệnh của bác sĩ\r\n                name: 'menu.doctor.manage-patient', link: '/doctor/manage-patient'\r\n            },\r\n        ]\r\n    }\r\n];\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { LANGUAGES, USER_ROLE } from '../../utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport _ from 'lodash'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuApp: []\r\n        };\r\n    }\r\n    handleChangeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    };\r\n\r\n    componentDidMount() {\r\n        let { userInfo } = this.props;\r\n        let menu = [];\r\n        if (userInfo && !_.isEmpty(userInfo)) {\r\n            let role = userInfo.roleId;\r\n            if (role === USER_ROLE.ADMIN) {\r\n                menu = adminMenu;\r\n            }\r\n            if (role === USER_ROLE.DOCTOR) {\r\n                menu = doctorMenu;\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            menuApp: menu\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const { processLogout, language, userInfo } = this.props;\r\n        console.log(\"check user info : \", userInfo.firstName, userInfo.lastName)\r\n\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={this.state.menuApp} />\r\n                </div>\r\n                <div className=\"languages\">\r\n                    <span className=\"welcome\"><FormattedMessage id=\"home-header.welcome\" />\r\n                        {userInfo && userInfo.firstName ? userInfo.firstName : ''}  {userInfo && userInfo.lastName ? userInfo.lastName : ''} !</span>\r\n                    <span\r\n                        className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}\r\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.EN)}>\r\n                        EN</span>\r\n                    <span\r\n                        className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}\r\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.VI)}>\r\n                        VN</span>\r\n                    {/* nút logout */}\r\n                    <div className=\"btn btn-logout\" onClick={processLogout} title=\"Log out\">\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./ManageDoctor.scss\";\r\nimport * as actions from '../../../store/actions';\r\n\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport Select from 'react-select';\r\nimport { LANGUAGES, CRUD_ACTIONS } from '../../../utils';\r\nimport { getDetailInforDoctor } from \"../../../services/userService\";\r\n\r\n\r\n\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageDoctor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // save to markdown table\r\n      contentMarkdown: '',\r\n      contentHTML: '',\r\n      selectedOption: '',\r\n      description: '',\r\n      listDoctors: [],\r\n      hasOldData: false,\r\n      // save to doctor infor table\r\n      listPrice: [],\r\n      listPayment: [],\r\n      listProvince: [],\r\n      listClinic: [],\r\n      listSpecialty: [],\r\n\r\n      selectedPrice: '',\r\n      selectedPayment: '',\r\n      selectedProvince: '',\r\n      selectedClinic: '',\r\n      selectedSpecialty: '',\r\n      nameClinic: '',\r\n      addressClinic: '',\r\n      note: '',\r\n      clinicId: '',\r\n      specialtyId: ''\r\n\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.fetchALLDoctors();\r\n    this.props.getAllRequiredDoctorInfor();\r\n  }\r\n\r\n  builDataInputSelect = (inputData, type) => {\r\n    let result = [];\r\n    let { language } = this.props;\r\n    if (inputData && inputData.length > 0) {\r\n      if (type === 'USERS') {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.lastName} ${item.firstName}`;\r\n          let labelEn = `${item.firstName} ${item.lastName}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.id;\r\n          result.push(object);\r\n        })\r\n      }\r\n      if (type === 'PRICE') {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn} USD`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n        })\r\n      }\r\n      if (type === 'PAYMENT' || type === 'PROVINCE') {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n        })\r\n      }\r\n      if (type === 'SPECIALTY') {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object)\r\n        })\r\n      }\r\n      if (type === 'CLINIC') {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object)\r\n        })\r\n      }\r\n\r\n    }\r\n    return result;\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.builDataInputSelect(this.props.allDoctors, \"USERS\")\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      })\r\n    }\r\n\r\n    if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\r\n      let { resPayment, resPrice, resProvince, resSpecialty, resClinic } = this.props.allRequiredDoctorInfor;\r\n      let dataSelectPrice = this.builDataInputSelect(resPrice, 'PRICE');\r\n      let dataSelectPayment = this.builDataInputSelect(resPayment, 'PAYMENT');\r\n      let dataSelectProvince = this.builDataInputSelect(resProvince, 'PROVINCE');\r\n      let dataSelectSpecialty = this.builDataInputSelect(resSpecialty, 'SPECIALTY');\r\n      let dataSelectClinic = this.builDataInputSelect(resClinic, 'CLINIC');\r\n      this.setState({\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n        listProvince: dataSelectProvince,\r\n        listSpecialty: dataSelectSpecialty,\r\n        listClinic: dataSelectClinic\r\n      })\r\n    }\r\n    if (prevProps.language !== this.props.language) {\r\n      let dataSelect = this.builDataInputSelect(this.props.allDoctors, 'USERS');\r\n      let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor;\r\n      let dataSelectPrice = this.builDataInputSelect(resPrice, 'PRICE');\r\n      let dataSelectPayment = this.builDataInputSelect(resPayment, 'PAYMENT');\r\n      let dataSelectProvince = this.builDataInputSelect(resProvince, 'PROVINCE');\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n        listProvince: dataSelectProvince\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDeleteUser = (user) => {\r\n  };\r\n\r\n  // Finish!\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentMarkdown: text,\r\n      contentHTML: html,\r\n    })\r\n  }\r\n\r\n  handleSaveContentMarkdown = () => {\r\n    let { hasOldData } = this.state;\r\n    this.props.createInforDoctor({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.description,\r\n      doctorId: this.state.selectedOption.value,\r\n      action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n\r\n      selectedPrice: this.state.selectedPrice.value,\r\n      selectedPayment: this.state.selectedPayment.value,\r\n      selectedProvince: this.state.selectedProvince.value,\r\n      nameClinic: this.state.nameClinic,\r\n      addressClinic: this.state.addressClinic,\r\n      note: this.state.note,\r\n      clinicId: this.state.selectedClinic && this.state.selectedClinic.value ? this.state.selectedClinic.value : '',\r\n      specialtyId: this.state.selectedSpecialty.value\r\n    })\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    let { listPayment, listPrice, listProvince, listSpecialty, listClinic } = this.state;\r\n\r\n    let res = await getDetailInforDoctor(selectedOption.value)\r\n    if (res && res.errCode === 0 && res.data && res.data.markdown) {\r\n      let markdown = res.data.markdown;\r\n      let addressClinic = '', nameClinic = '', note = '',\r\n        paymentId = '', priceId = '', provinceId = '', specialtyId = '', clinicId = '',\r\n        selectedPayment = '', selectedPrice = '', selectedProvince = '', selectedClinic = '',\r\n        selectedSpecialty = '';\r\n      if (res.data.doctor_info) {\r\n        addressClinic = res.data.doctor_info.addressClinic;\r\n        nameClinic = res.data.doctor_info.nameClinic;\r\n        note = res.data.doctor_info.note;\r\n        paymentId = res.data.doctor_info.paymentId;\r\n        priceId = res.data.doctor_info.priceId;\r\n        provinceId = res.data.doctor_info.provinceId;\r\n        specialtyId = res.data.doctor_info.specialtyId;\r\n        clinicId = res.data.doctor_info.clinicId;\r\n\r\n        selectedPayment = listPayment.find(item => {\r\n          return item && item.value === paymentId\r\n        });\r\n        selectedPrice = listPrice.find(item => {\r\n          return item && item.value === priceId\r\n        });\r\n        selectedProvince = listProvince.find(item => {\r\n          return item && item.value === provinceId\r\n        });\r\n\r\n        selectedSpecialty = listSpecialty.find(item => {\r\n          return item && item.value === specialtyId\r\n        })\r\n        selectedClinic = listClinic.find(item => {\r\n          return item && item.value === clinicId\r\n        })\r\n      }\r\n      this.setState({\r\n        contentHTML: markdown.contentHTML,\r\n        contentMarkdown: markdown.contentMarkdown,\r\n        description: markdown.description,\r\n        hasOldData: true,\r\n        addressClinic: addressClinic,\r\n        nameClinic: nameClinic,\r\n        note: note,\r\n        selectedPayment: selectedPayment,\r\n        selectedPrice: selectedPrice,\r\n        selectedProvince: selectedProvince,\r\n        selectedSpecialty: selectedSpecialty,\r\n        selectedClinic: selectedClinic\r\n      });\r\n    } else {\r\n      this.setState({\r\n        contentHTML: '',\r\n        contentMarkdown: '',\r\n        description: '',\r\n        hasOldData: false,\r\n        addressClinic: '',\r\n        nameClinic: '',\r\n        note: '',\r\n        selectedPayment: '',\r\n        selectedPrice: '',\r\n        selectedProvince: '',\r\n        selectedSpecialty: '',\r\n        selectedClinic: '',\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  handleChangeSelectDoctorInfor = async (selectedOption, name) => {\r\n    let stateName = name.name;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[stateName] = selectedOption;\r\n    this.setState({\r\n      ...stateCopy\r\n    })\r\n  }\r\n\r\n  handleOnChangeText = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    let { hasOldData } = this.state;\r\n    return (\r\n      <div className='manage-doctor-container'>\r\n        <div className='manage-doctor-title'><FormattedMessage id=\"admin.manage-doctor.title\" /> </div>\r\n        <div className='more-infor'>\r\n          <div className='content-left from-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.select-doctor\" /></label>\r\n            <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChangeSelect}\r\n              options={this.state.listDoctors}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\" />}\r\n            />\r\n          </div>\r\n          <div className='content-right from-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.intro\" /></label>\r\n            <textarea className='form-control'\r\n              onChange={(event) => this.handleOnChangeText(event, 'description')}\r\n              value={this.state.description}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className='more-intro-extra row'>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.price\" /></label>\r\n            <Select\r\n              value={this.state.selectedPrice}\r\n              onChange={this.handleChangeSelectDoctorInfor}\r\n              options={this.state.listPrice}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.price\" />}\r\n              name=\"selectedPrice\"\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.payment\" /></label>\r\n            <Select\r\n              value={this.state.selectedPayment}\r\n              onChange={this.handleChangeSelectDoctorInfor}\r\n              options={this.state.listPayment}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.payment\" />}\r\n              name=\"selectedPayment\"\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.province\" /></label>\r\n            <Select\r\n              value={this.state.selectedProvince}\r\n              onChange={this.handleChangeSelectDoctorInfor}\r\n              options={this.state.listProvince}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.province\" />}\r\n              name=\"selectedProvince\"\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.nameClinic\" /></label>\r\n            <input className='form-control'\r\n              onChange={(event) => this.handleOnChangeText(event, \"nameClinic\")}\r\n              value={this.state.nameClinic}\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.addressClinic\" /></label>\r\n            <input className='form-control'\r\n              onChange={(event) => this.handleOnChangeText(event, \"addressClinic\")}\r\n              value={this.state.addressClinic}\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.note\" /></label>\r\n            <input className='form-control'\r\n              onChange={(event) => this.handleOnChangeText(event, \"note\")}\r\n              value={this.state.note}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.specialty\" /></label>\r\n            <Select\r\n              value={this.state.selectedSpecialty}\r\n              options={this.state.listSpecialty}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.specialty\" />}\r\n              onChange={this.handleChangeSelectDoctorInfor}\r\n              name=\"selectedSpecialty\"\r\n            />\r\n          </div>\r\n          <div className='col-4 form-group'>\r\n            <label><FormattedMessage id=\"admin.manage-doctor.select-clinic\" /></label>\r\n            <Select\r\n              value={this.state.selectedClinic}\r\n              options={this.state.listClinic}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.select-clinic\" />}\r\n              onChange={this.handleChangeSelectDoctorInfor}\r\n              name=\"selectedClinic\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='manage-doctor-editor'>\r\n          <MdEditor\r\n            style={{ height: '500px' }}\r\n            renderHTML={text => mdParser.render(text)}\r\n            onChange={this.handleEditorChange}\r\n            value={this.state.contentMarkdown}\r\n          />\r\n        </div>\r\n        <button className={hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\"} onClick={() => this.handleSaveContentMarkdown()} >\r\n          {hasOldData === true ?\r\n            <span><FormattedMessage id=\"admin.manage-doctor.save\" /></span> : <span><FormattedMessage id=\"admin.manage-doctor.add\" /></span>}\r\n        </button>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n    allDoctors: state.admin.allDoctors,\r\n    allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchALLDoctors: () => dispatch(actions.fetchALLDoctors()),\r\n    getAllRequiredDoctorInfor: () => dispatch(actions.getAllRequiredDoctorInfor()),\r\n    createInforDoctor: (data) => dispatch(actions.CreateInforDoctor(data)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./ManageSpecialty.scss\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEdittor from \"react-markdown-editor-lite\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport { createNewSpecialty } from \"../../../services/userService\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst mdParser = new MarkdownIt(/*Markdown it options*/)\r\n\r\nclass ManageSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      imageBase64: '',\r\n      descriptionHTML: '',\r\n      descriptionMarkdown: '',\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy\r\n    })\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      descriptionHTML: html,\r\n      descriptionMarkdown: text,\r\n    })\r\n  }\r\n\r\n  handleOnchangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      this.setState({\r\n        imageBase64: base64\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSaveNewSpecialty = async () => {\r\n    let res = await createNewSpecialty(this.state);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Add new specialty succeeded!\")\r\n      this.setState({\r\n        name: '',\r\n        imageBase64: '',\r\n        descriptionHTML: '',\r\n        descriptionMarkdown: '',\r\n      })\r\n    } else {\r\n      toast.error(\"something wrongs ...\");\r\n      console.log(\">>> Something wrongs : \", res)\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='manage-specialty-container'>\r\n        <div className='ms-title'>Quản Lý chuyên khoa</div>\r\n        <div className=\"add-new-specialty row\">\r\n          <div className=\"col-6 form-group\">\r\n            <label>Tên chuyên khoa</label>\r\n            <input className='form-control' placeholder=\"\" type='text' value={this.state.name}\r\n              onChange={(event) => this.handleOnChangeInput(event, 'name')} />\r\n          </div>\r\n          <div className=\"col-6 form-group\">\r\n            <label>Ảnh Chuyên Khoa</label>\r\n            <input className='form-control-file' placeholder=\"\" type='file'\r\n              onChange={(event) => this.handleOnchangeImage(event)} />\r\n          </div>\r\n          <div className='col-12'>\r\n            <MdEdittor\r\n              style={{ height: '700px' }}\r\n              renderHTML={text => mdParser.render(text)}\r\n              onChange={this.handleEditorChange}\r\n              value={this.state.descriptionMarkdown}\r\n            />\r\n          </div>\r\n          <div className='col-12'>\r\n            <button className='btn-save-specialty' onClick={() => this.handleSaveNewSpecialty()}>save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./ManageClinic.scss\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEdittor from \"react-markdown-editor-lite\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport { createNewClinic } from \"../../../services/userService\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst mdParser = new MarkdownIt(/*Markdown it options*/)\r\n\r\nclass ManageClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      address: '',\r\n      imageBase64: '',\r\n      descriptionHTML: '',\r\n      descriptionMarkdown: '',\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy\r\n    })\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      descriptionHTML: html,\r\n      descriptionMarkdown: text,\r\n    })\r\n  }\r\n\r\n  handleOnchangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      this.setState({\r\n        imageBase64: base64\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSaveNewClinic = async () => {\r\n    let res = await createNewClinic(this.state);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Add new specialty succeeded!\")\r\n      this.setState({\r\n        name: '',\r\n        imageBase64: '',\r\n        address: '',\r\n        descriptionHTML: '',\r\n        descriptionMarkdown: '',\r\n      })\r\n    } else {\r\n      toast.error(\"something wrongs ...\");\r\n      console.log(\">>> Something wrongs : \", res)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='manage-specialty-container'>\r\n        <div className='ms-title'>Quản Lý Phòng Khám</div>\r\n        <div className=\"add-new-specialty row\">\r\n          <div className=\"col-6 form-group\">\r\n            <label>Tên Phòng Khám</label>\r\n            <input className='form-control' placeholder=\"\" type='text' value={this.state.name}\r\n              onChange={(event) => this.handleOnChangeInput(event, 'name')} />\r\n          </div>\r\n          <div className=\"col-6 form-group\">\r\n            <label>Ảnh Phòng Khám</label>\r\n            <input className='form-control-file' placeholder=\"\" type='file'\r\n              onChange={(event) => this.handleOnchangeImage(event)} />\r\n          </div>\r\n          <div className=\"col-6 form-group\">\r\n            <label>Địa chỉ Phòng Khám</label>\r\n            <input className='form-control' placeholder=\"\" type='text' value={this.state.address}\r\n              onChange={(event) => this.handleOnChangeInput(event, 'address')} />\r\n          </div>\r\n          <div className='col-12'>\r\n            <MdEdittor\r\n              style={{ height: '500px' }}\r\n              renderHTML={text => mdParser.render(text)}\r\n              onChange={this.handleEditorChange}\r\n              value={this.state.descriptionMarkdown}\r\n            />\r\n          </div>\r\n          <div className='col-12'>\r\n            <button className='btn-save-specialty' onClick={() => this.handleSaveNewClinic()}>save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\nimport ManageSpecialty from '../containers/System/Specialty/ManageSpecialty';\r\nimport ManageClinic from '../containers/System/Clinic/ManageClinic';\r\n\r\nclass System extends Component {\r\n    render() {\r\n        // {this.props.isLoggedIn && <Header />}\r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                            <Route path=\"/system/manage-specialty\" component={ManageSpecialty} />\r\n                            <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","export default __webpack_public_path__ + \"static/media/logo.2e2d78c9.svg\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss'\r\nimport logo from '../../assets/logo.svg';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { LANGUAGES } from '../../utils';\r\n\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass HomeHeader extends Component {\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language)\r\n  }\r\n\r\n  returnToHome = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/home`)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let language = this.props.language;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className='home-header-container'>\r\n          <div className='home-header-content'>\r\n            <div className='left-content'>\r\n              <i className=\"fas fa-bars\"></i>\r\n              <img className=\"header-logo\" src={logo} onClick={() => this.returnToHome()} alt=\"this\" />\r\n            </div>\r\n            <div className='center-content'>\r\n              <div className=\"child-content\">\r\n                <div><b><FormattedMessage id=\"home-header.speciality\" /></b></div>\r\n                <div><FormattedMessage id=\"home-header.search-doctor\" /></div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div><b><FormattedMessage id=\"home-header.health-facility\" /></b></div>\r\n                <div><FormattedMessage id=\"home-header.select-room\" /></div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div><b><FormattedMessage id=\"home-header.doctor\" /></b></div>\r\n                <div><FormattedMessage id=\"home-header.select-doctor\" /></div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div><b><FormattedMessage id=\"home-header.fee\" /></b></div>\r\n                <div><FormattedMessage id=\"home-header.health-check\" /></div>\r\n              </div>\r\n            </div>\r\n            <div className='right-content'>\r\n              <div className=\"support\"><i className=\"far fa-question-circle\"></i><FormattedMessage id=\"home-header.support\" /></div>\r\n              <div className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}><span onClick={() => this.changeLanguage(LANGUAGES.EN)}>EN</span></div>\r\n              <div className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}><span onClick={() => this.changeLanguage(LANGUAGES.VI)}>VN</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isShowBanner === true &&\r\n          < div className=\"home-header-banner\">\r\n            <div className=\"content-up\">\r\n              <div className='title1'><FormattedMessage id=\"banner.medical-background\" /></div>\r\n              <div className='title2'><FormattedMessage id=\"banner.comprehensive-health-care\" /></div>\r\n              <div className='search'>\r\n                <i className=\"fas fa-search\"></i>\r\n                <input type=\"search\" placeholder='Tìm chuyên khoa khám bệnh' />\r\n              </div>\r\n            </div>\r\n            <div className=\"content-down\">\r\n              <div className='options'>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-hospital\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.specialist-examination\" /></div>\r\n                </div>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-mobile-alt\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.remote-examination\" /></div>\r\n                </div>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-procedures\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.general-examination\" /></div>\r\n                </div>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-flask\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.medical-test\" /></div>\r\n                </div>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-user-shield\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.mental-health\" /></div>\r\n                </div>\r\n                <div className='option-child'>\r\n                  <div className='icon-child'><i className=\"fas fa-briefcase-medical\"></i></div>\r\n                  <div className='text-child'><FormattedMessage id=\"banner.dental-examination\" /></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInfo: state.user.userInfo,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\nimport { getAllSpecialty } from '../../../services/userService';\r\nimport { withRouter } from \"react-router\"\r\n\r\nclass Specialty extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSpecialty: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllSpecialty();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({ dataSpecialty: res.data ? res.data : [] });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language)\r\n  }\r\n\r\n  handleViewDetailSpecialty = (item) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-specialty/${item.id}`)\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let { dataSpecialty } = this.state;\r\n    return (\r\n      <div className=\"section-share section-specialty\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\"><FormattedMessage id=\"homepage.specialty-poplular\" /></span>\r\n            <button className=\"btn-section\"><FormattedMessage id=\"homepage.more-infor\" /></button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {\r\n                dataSpecialty && dataSpecialty.length > 0 &&\r\n                dataSpecialty.map((item, index) => {\r\n                  return (\r\n                    <div className=\"section-customize specialty-child\" key={index}\r\n                      onClick={() => this.handleViewDetailSpecialty(item)}\r\n                    >\r\n                      <div className=\"bg-image section-specialty\"\r\n                        style={{ backgroundImage: `url(${item.image})` }}\r\n                      />\r\n                      <div className='specialty-name'>{item.name}</div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </Slider>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Specialty));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './MediacalFacility.scss'\r\nimport Slider from \"react-slick\";\r\nimport { getAllClinic } from '../../../services/userService';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass MediacalFacility extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataClinics: [],\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllClinic();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataClinics: res.data ? res.data : []\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewDetailClinic = (clinic) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${clinic.id}`);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let { dataClinics } = this.state;\r\n    return (\r\n      <div className=\"section-share section-medical-facility\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">Cơ Sở Y Tế Nổi Bật</span>\r\n            <button className=\"btn-section\">Xem Thêm</button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {dataClinics && dataClinics.length > 0 &&\r\n                dataClinics.map((item, index) => {\r\n                  return (\r\n                    <div className=\"section-customize clinic-child\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailClinic(item)}\r\n                    >\r\n                      <div className=\"bg-image section-medical-facility\"\r\n                        style={{ backgroundImage: `url(${item.image})` }}\r\n                      />\r\n                      <div className='clinic-name'>{item.name}</div>\r\n                    </div>\r\n                  )\r\n                })}\r\n            </Slider>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MediacalFacility));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss'\r\n// import { FormattedMessage } from 'react-intl';\r\nimport Slider from \"react-slick\";\r\n\r\n// import coxuongkhopImg from \"../../../assets/specialty/co-xuong-khop.jpg\";\r\n// import thankinhImg from \"../../../assets/specialty/than-kinh.jpg\";\r\n// import chamcuuImg from \"../../../assets/specialty/cham-cuu.jpg\";\r\n// import cotsongImg from \"../../../assets/specialty/cot-song.jpg\";\r\n// import dalieuImg from \"../../../assets/specialty/da-lieu.jpg\";\r\n// import sanphukhoaImg from \"../../../assets/specialty/san-phu-khoa.jpg\";\r\n// import sieuamImg from \"../../../assets/specialty/san-phu-khoa.jpg\";\r\n// import taimuihongImg from \"../../../assets/specialty/tai-mui-hong.jpg\";\r\n// import tieuhoaImg from \"../../../assets/specialty/tieu-hoa.jpg\";\r\n// import timmachImg from \"../../../assets/specialty/tim-mach.jpg\";\r\n// import yhoccotruyenImg from \"../../../assets/specialty/y-hoc-co-truyen.jpg\";\r\n\r\n\r\nclass HandBook extends Component {\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"section-share section-handbook\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">Cẩm Nang</span>\r\n            <button className=\"btn-section\">Xem Thêm</button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Cơ Xương Khớp</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Thần Kinh</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Châm Cứu</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Cột Sống</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Da Liễu</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Siêu Âm</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Tai Mũi Họng</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Sản Phụ Khoa</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Tiêu Hóa</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Tim Mạch</div>\r\n              </div>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-handbook\" />\r\n                <div>Y Học Cổ Truyền</div>\r\n              </div>\r\n            </Slider>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandBook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss'\r\n\r\nclass About extends Component {\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"section-share section-about\">\r\n        <div className=\"section-about-header\">Truyền thông nói về BookingCare</div>\r\n        <div className=\"section-about-content\">\r\n          <div className=\"content-left\">\r\n            <iframe width=\"100%\" height=\"400px\"\r\n              src=\"https://www.youtube.com/embed/FyDQljKtWnI\"\r\n              title=\"CÀ PHÊ KHỞI NGHIỆP VTV1 - BOOKINGCARE - HỆ THỐNG ĐẶT LỊCH KHÁM TRỰC TUYẾN\"\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n              allowFullScreen>\r\n\r\n            </iframe>\r\n          </div>\r\n          <div className=\"content-right\">\r\n            {/* <ul>\r\n              <li>\r\n                <a target=\"_blank\" title=\"Báo sức khỏe đời sống nói về BookingCare\" href=\"https://suckhoedoisong.vn/dat-lich-kham-benh-tiet-kiem-thong-minh-va-hieu-qua-n153232.html\">\r\n                  <i class=\"truyenthong-bt truyenthong-suckhoedoisong luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/suckhoedoisong.png&quot;);\" data-src=\"/assets/truyenthong/suckhoedoisong.png\"></i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"_blank\" title=\"VTV1 - Cà phê khởi nghiệp 14-11-2018\" href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\">\r\n                  <i class=\"truyenthong-bt truyenthong-vtv1 luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vtv1.png&quot;);\" data-src=\"/assets/truyenthong/vtv1.png\"></i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"_blank\" title=\"Báo điện tử ictnews giới thiệu BookingCare\" href=\"https://ictnews.vn/kinh-doanh/doanh-nghiep/startup-bookingcare-chinh-thuc-ra-mat-phien-ban-di-dong-cua-nen-tang-ho-tro-dat-lich-kham-online-173512.ict\">\r\n                  <i class=\"truyenthong-bt truyenthong-ictnews luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/ictnews.png&quot;);\" data-src=\"/assets/truyenthong/ictnews.png\"></i>\r\n                </a>\r\n              </li>\r\n              <li><a target=\"_blank\" title=\"VnExpress nói về BookingCare\" href=\"https://video.vnexpress.net/tin-tuc/cuoc-song-4-0/kham-benh-khong-phai-xep-hang-o-ha-noi-3797126.html\">\r\n                <i class=\"truyenthong-bt truyenthong-vnexpress luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vnexpress.png&quot;);\" data-src=\"/assets/truyenthong/vnexpress.png\"></i>\r\n              </a>\r\n              </li>\r\n              <li><a target=\"_blank\" title=\"VTC News nói về BookingCare\" href=\"https://vtc.vn/dat-kham-chuyen-khoa-va-hanh-trinh-ho-tro-cac-benh-vien-qua-tai-d434101.html\">\r\n                <i class=\"truyenthong-bt truyenthong-vtcnews luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vtcnews.png&quot;);\" data-src=\"/assets/truyenthong/vtcnews.png\"></i>\r\n              </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"_blank\" title=\"Cục công nghệ thông tin - Bộ Y tế nói về BookingCare\" href=\"http://ehealth.gov.vn/?action=News&amp;newsId=46094\">\r\n                  <i class=\"truyenthong-bt truyenthong-cnntbyt luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/cuc-cong-nghe-thong-tin-bo-y-te-2.png&quot;);\" data-src=\"/assets/truyenthong/cuc-cong-nghe-thong-tin-bo-y-te-2.png\"></i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"_blank\" title=\"Báo điện tử infonet nói về BookingCare\" href=\"https://infonet.vietnamnet.vn/khoe-dep/da-co-hon-20-000-luot-benh-nhan-dat-lich-kham-qua-bookingcare-175080.html\">\r\n                  <i class=\"truyenthong-bt truyenthong-infonet luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/infonet.png&quot;);\" data-src=\"/assets/truyenthong/infonet.png\"></i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a target=\"_blank\" title=\"VTV1 - Cà phê khởi nghiệp 16-08-2018\" href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-16-8-2018-317687.htm\">\r\n                  <i class=\"truyenthong-bt truyenthong-vtv1 luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vtv1.png&quot;);\" data-src=\"/assets/truyenthong/vtv1.png\">\r\n                  </i>\r\n                </a>\r\n              </li>\r\n              <li><a target=\"_blank\" title=\"VTC Go nói về BookingCare\" href=\"https://www.youtube.com/watch?v=mstAc81lpMc\">\r\n                <i class=\"truyenthong-bt truyenthong-vtcgo luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vtcgo.png&quot;);\" data-src=\"/assets/truyenthong/vtcgo.png\"></i>\r\n              </a></li>\r\n              <li><a target=\"_blank\" title=\"VTV1 - Cà phê khởi nghiệp 21-02-2018\" href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-21-02-2018-282723.htm\">\r\n                <i class=\"truyenthong-bt truyenthong-vtv1 luoi-tai\" style=\"background-image: url(&quot;/assets/truyenthong/vtv1.png&quot;);\" data-src=\"/assets/truyenthong/vtv1.png\"></i>\r\n              </a>\r\n              </li>\r\n            </ul> */}\r\n            <p>CÀ PHÊ KHỞI NGHIỆP VTV1 - BOOKINGCARE - HỆ THỐNG ĐẶT LỊCH KHÁM TRỰC TUYẾN</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HomeFooter extends Component {\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"home-footer\">\r\n        <p>&copy; 2023 RapidTables.com</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Section/Specialty';\r\nimport MediacalFacility from './Section/MediacalFacility';\r\nimport OutStandingDoctor from './Section/OutStandingDoctor';\r\nimport HandBook from './Section/HandBook';\r\nimport About from './Section/About.js';\r\nimport HomeFooter from './HomeFooter';\r\nimport './HomePage.scss'\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass HomePage extends Component {\r\n  handleAfterChange = (event, slick, currentSlide) => {\r\n    // console.log(\" check current slide : \", slick, currentSlide);\r\n  };\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slideToScroll: 1,\r\n      afterChange: this.handleAfterChange\r\n    };\r\n    return (\r\n      <div>\r\n        <HomeHeader isShowBanner={true} />\r\n        <Specialty settings={settings} />\r\n        <MediacalFacility settings={settings} />\r\n        <OutStandingDoctor settings={settings} />\r\n        <HandBook settings={settings} />\r\n        <About />\r\n        <HomeFooter />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport \"./ProfileDoctor.scss\";\r\nimport { getprofileDoctorById } from '../../../services/userService';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport NumberFormat from 'react-number-format';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass ProfileDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataProfile: {}\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data = await this.getInforDoctor(this.props.doctorId)\r\n    this.setState({ dataProfile: data });\r\n  }\r\n\r\n  getInforDoctor = async (id) => {\r\n    let result = {};\r\n    if (id) {\r\n      let res = await getprofileDoctorById(id);\r\n      if (res && res.errCode === 0) {\r\n        result = res.data;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n    }\r\n  }\r\n\r\n  renderTimeBooking = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n      let date = language === LANGUAGES.VI ?\r\n        moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\r\n        :\r\n        moment.unix(+dataTime.date / 1000).locale('en').format('dddd - DD/MM/YYYY')\r\n      return (\r\n        <>\r\n          <div>{time} - {date}</div>\r\n          <div><FormattedMessage id=\"patient.booking-modal.priceBooking\" /></div>\r\n        </>\r\n      )\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  render() {\r\n    let { dataProfile } = this.state;\r\n    let { language, isShowDescriptionDoctor, dataTime,\r\n      isShowPrice, isShowLinkDetail, doctorId\r\n    } = this.props;\r\n    console.log(\" checking data profile : \", this.state)\r\n\r\n    let nameVi = '', nameEn = '';\r\n    if (dataProfile && dataProfile.positionData) {\r\n      nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`;\r\n      nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\r\n    }\r\n\r\n    return (\r\n      <div className='profile-doctor-container'>\r\n        <div className='intro-doctor'>\r\n          <div className='content-left'\r\n            style={{ backgroundImage: `url(${dataProfile && dataProfile.image ? dataProfile.image : ''})` }}\r\n          ></div>\r\n          <div className='content-right'>\r\n            <div className='up'>\r\n              {language === LANGUAGES.VI ? nameVi : nameEn}\r\n            </div>\r\n            <div className='down'>\r\n              {isShowDescriptionDoctor === true ?\r\n                <>\r\n                  {dataProfile && dataProfile.markdown\r\n                    && dataProfile.markdown.description\r\n                    &&\r\n                    <span>{dataProfile.markdown.description}</span>\r\n                  }\r\n                </>\r\n                :\r\n                <>\r\n                  {this.renderTimeBooking(dataTime)}\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          isShowLinkDetail === true &&\r\n          <div className=\"view-detail-doctor\">\r\n            <Link to={`detail-doctor/${doctorId}`}>Xem Thêm</Link>\r\n          </div>\r\n        }\r\n        {isShowPrice === true &&\r\n          <div className='price'>\r\n            <FormattedMessage id=\"patient.booking-modal.price\" />\r\n            {dataProfile && dataProfile.doctor_info && language === LANGUAGES.VI &&\r\n              <NumberFormat className='curency'\r\n                value={dataProfile.doctor_info.priceTypeData.valueVi}\r\n                displayType={'text'}\r\n                thousandSeparator={true}\r\n                suffix={'VND'}\r\n              />\r\n            }\r\n            {dataProfile && dataProfile.doctor_info && language === LANGUAGES.EN &&\r\n              <NumberFormat className='curency'\r\n                value={dataProfile.doctor_info.priceTypeData.valueEn}\r\n                displayType={'text'}\r\n                thousandSeparator={true}\r\n                suffix={'$'}\r\n              />\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport \"./BookingModal.scss\";\r\nimport { Modal } from 'reactstrap';\r\nimport ProfileDoctor from '../ProfileDoctor';\r\nimport _ from 'lodash';\r\nimport DatePicker from \"../../../../components/Input/DatePicker\";\r\nimport * as actions from '../../../../store/actions';\r\nimport { LANGUAGES } from '../../../../utils';\r\nimport Select from \"react-select\";\r\nimport { postPatientBookAppointment } from '../../../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: '',\r\n      phoneNumber: '',\r\n      email: '',\r\n      address: '',\r\n      reason: '',\r\n      birthday: '',\r\n      selectedGender: '',\r\n      doctorId: '',\r\n      genders: '',\r\n      timeType: '',\r\n      isShowLoading: false\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenders();\r\n  }\r\n\r\n  buildDataaGender = (data) => {\r\n    let result = []\r\n    let language = this.props.language;\r\n    if (data && data.length > 0) {\r\n      data.map(item => {\r\n        let object = {};\r\n        object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n        object.value = item.keyMap;\r\n        result.push(object);\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      this.setState({\r\n        genders: this.buildDataaGender(this.props.genders)\r\n      })\r\n    }\r\n    if (this.props.genders !== prevProps.genders) {\r\n      this.setState({\r\n        genders: this.buildDataaGender(this.props.genders)\r\n      })\r\n    }\r\n    if (this.props.dataTime !== prevProps.dataTime) {\r\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\r\n        console.log(\" componentDidupdate : \", this.props.dataTime.doctorId)\r\n        let doctorId = this.props.dataTime.doctorId;\r\n        let timeType = this.props.dataTime.timeType\r\n        this.setState({\r\n          doctorId: doctorId,\r\n          timeType: timeType\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOnchangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy\r\n    })\r\n  }\r\n\r\n  handleOnchangeDatepicker = (date) => {\r\n    this.setState({ birthday: date[0] })\r\n  }\r\n\r\n  handleChangeSelect = (selecteOption) => {\r\n    this.setState({\r\n      selectedGender: selecteOption\r\n    })\r\n  }\r\n\r\n  buildTimeBooking = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\r\n      let date = language === LANGUAGES.VI ?\r\n        moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\r\n        :\r\n        moment.unix(+dataTime.date / 1000).locale('en').format('dddd - DD/MM/YYYY')\r\n      return `${time} - ${date}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  buildoctorName = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let name = language === LANGUAGES.VI ?\r\n        `${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}`\r\n        :\r\n        `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`\r\n      return name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  handleConfirmBooking = async () => {\r\n    this.setState({\r\n      isShowLoading: true,\r\n    })\r\n    let date = new Date(this.state.birthday).getTime();\r\n    let timeString = this.buildTimeBooking(this.props.dataTime);\r\n    let doctorName = this.buildoctorName(this.props.dataTime);\r\n    let res = await postPatientBookAppointment({\r\n      fullName: this.state.fullName,\r\n      phoneNumber: this.state.phoneNumber,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      reason: this.state.reason,\r\n      date: this.props.dataTime.date,\r\n      birthday: date,\r\n      selectedGender: this.state.selectedGender.value,\r\n      doctorId: this.state.doctorId,\r\n      timeType: this.state.timeType,\r\n      language: this.props.language,\r\n      timeString: timeString,\r\n      doctorName: doctorName\r\n    })\r\n    this.setState({\r\n      isShowLoading: false,\r\n    })\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Booking a new appointment succed!\")\r\n      this.props.closeBookingClose();\r\n    } else {\r\n      toast.error(\"Booking a new appointment error!\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { isOpenModal, closeBookingClose, dataTime } = this.props;\r\n    let doctorId = ''\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      doctorId = dataTime.doctorId\r\n    }\r\n    return (\r\n      <LoadingOverlay\r\n        active={this.state.isShowLoading}\r\n        spinner\r\n        text=\"Loading...\"\r\n      >\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          className={'booking-modal-container'}\r\n          size='lg'\r\n          centered\r\n        // backgdrop={true}\r\n        >\r\n          <div className='booking-modal-content'>\r\n            <div className='booking-modal-header'>\r\n              <span className='left'><FormattedMessage id=\"patient.booking-modal.title\" /></span>\r\n              <span className='right' onClick={closeBookingClose}><i className='fas fa-times'></i></span>\r\n            </div>\r\n            <div className='booking-modal-body'>\r\n              <div className='doctor-info'>\r\n                <ProfileDoctor\r\n                  doctorId={doctorId}\r\n                  isShowDescriptionDoctor={false}\r\n                  dataTime={dataTime}\r\n                  isShowLinkDetail={true}\r\n                  isShowPrice={false}\r\n                />\r\n              </div>\r\n              {/* <div className='price-info'>Giá Khám 500.000VND</div> */}\r\n              <div className='row'>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.fullname\" /></label>\r\n                  <input className='form-control'\r\n                    value={this.state.fullName}\r\n                    onChange={(event) => this.handleOnchangeInput(event, 'fullName')}\r\n                  />\r\n                </div>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.phoneNumber\" /></label>\r\n                  <input className='form-control'\r\n                    value={this.state.phoneNumber}\r\n                    onChange={(event) => this.handleOnchangeInput(event, 'phoneNumber')}\r\n                  />\r\n                </div>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.email\" /></label>\r\n                  <input className='form-control'\r\n                    value={this.state.email}\r\n                    onChange={(event) => this.handleOnchangeInput(event, 'email')}\r\n                  />\r\n                </div>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.address\" /></label>\r\n                  <input className='form-control'\r\n                    value={this.state.address}\r\n                    onChange={(event) => this.handleOnchangeInput(event, 'address')}\r\n                  />\r\n                </div>\r\n                <div className='col-12 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.reason\" /></label>\r\n                  <input className='form-control'\r\n                    value={this.state.reason}\r\n                    onChange={(event) => this.handleOnchangeInput(event, 'reason')}\r\n                  />\r\n                </div>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.birthday\" /></label>\r\n                  <DatePicker\r\n                    value={this.state.birthday}\r\n                    onChange={this.handleOnchangeDatepicker}\r\n                    className=\"form-control\"\r\n                  />\r\n\r\n                </div>\r\n                <div className='col-6 form-group'>\r\n                  <label><FormattedMessage id=\"patient.booking-modal.gender\" /></label>\r\n                  <Select\r\n                    value={this.state.selectedGender}\r\n                    onChange={this.handleChangeSelect}\r\n                    options={this.state.genders}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='booking-modal-footer'>\r\n              <button className='btn-booking-confirm'\r\n                onClick={() => this.handleConfirmBooking()}><FormattedMessage id=\"patient.booking-modal.btnConfirm\" /></button>\r\n              <button className='btn-booking-cancel'\r\n                onClick={closeBookingClose}><FormattedMessage id=\"patient.booking-modal.btnCancel\" /></button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getGenders: () => dispatch(actions.fetchGenderStart()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DoctorSchedule.scss';\r\nimport moment from 'moment';\r\nimport localization from 'moment/locale/vi';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { getSheduleDoctorByDate } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport BookingModal from './Modal/BookingModal';\r\n\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allDays: [],\r\n      allAvalableTime: [],\r\n      isOpenModalBooking: false,\r\n      dataScheduleTimeModal: {},\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { language } = this.props;\r\n    let allDays = this.getArrDays(language);\r\n\r\n    if (this.props.doctorIdFromParent) {\r\n      let res = await getSheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\r\n      this.setState({\r\n        allAvalableTime: res.data ? res.data : []\r\n      })\r\n    }\r\n    this.setState({ allDays: allDays });\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n  }\r\n\r\n  getArrDays = (language) => {\r\n    let allDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let object = {};\r\n      if (language === LANGUAGES.VI) {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Hôm nay - ${ddMM}`;\r\n          object.label = today;\r\n        } else {\r\n          let labelVi = moment(new Date()).add(i, \"days\").format(\"dddd - DD/MM\");\r\n          object.label = this.capitalizeFirstLetter(labelVi)\r\n        }\r\n      } else {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Today - ${ddMM}`;\r\n          object.label = today;\r\n        } else {\r\n          object.label = moment(new Date()).add(i, \"days\").locale('en').format(\"dddd - DD/MM\");\r\n        }\r\n      }\r\n      object.value = moment(new Date()).add(i, \"days\").startOf('day').valueOf();\r\n      allDays.push(object);\r\n    }\r\n    return allDays;\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        allDays: allDays\r\n      })\r\n    }\r\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getSheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\r\n      this.setState({\r\n        allAvalableTime: res.data ? res.data : []\r\n      })\r\n    }\r\n  }\r\n\r\n  handleOnChangeSelect = async (event) => {\r\n    if (this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1) {\r\n      let doctorId = this.props.doctorIdFromParent;\r\n      let date = event.target.value;\r\n      let res = await getSheduleDoctorByDate(doctorId, date);\r\n\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          allAvalableTime: res.data ? res.data : []\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClickScheduleTime = (time) => {\r\n    console.log(time)\r\n    this.setState({\r\n      isOpenModalBooking: true,\r\n      dataScheduleTimeModal: time\r\n    })\r\n  }\r\n\r\n  closeBookingClose = () => {\r\n    this.setState({\r\n      isOpenModalBooking: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { allDays, allAvalableTime, isOpenModalBooking, dataScheduleTimeModal } = this.state;\r\n    let { language } = this.props;\r\n    // console.log(\"allAvalableTime : \", allAvalableTime)\r\n    return (\r\n      <>\r\n        <div className='doctor-schedule-container'>\r\n          <div className='all-schedule'>\r\n            <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n              {allDays && allDays.length > 0 &&\r\n                allDays.map((item, index) => {\r\n                  return (\r\n                    <option value={item.value}\r\n                      key={index}\r\n                    >{item.label}</option>\r\n                  )\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className='all-available-time'>\r\n            <div className='text-calendar'>\r\n              <i className='fas fa-calendar-alt'><span><FormattedMessage id=\"patient.detail-doctor.schedule\" /></span></i>\r\n            </div>\r\n            <div className='time-content'>\r\n              {allAvalableTime && allAvalableTime.length > 0 ?\r\n                <>\r\n                  <div className='time-content-btns'>\r\n                    {allAvalableTime.map((item, index) => {\r\n                      let timeDisplay = language === LANGUAGES.VI ?\r\n                        item.timeTypeData.valueVi : item.timeTypeData.valueEn;\r\n                      return (\r\n                        <button key={index}\r\n                          className={language = LANGUAGES.VI ? 'btn-vie' : 'btn-en'}\r\n                          onClick={() => this.handleClickScheduleTime(item)}\r\n                        >{timeDisplay}</button>\r\n                      )\r\n                    })\r\n                    }\r\n                  </div>\r\n                  <div className='book-free'>\r\n                    <span>\r\n                      <FormattedMessage id=\"patient.detail-doctor.choose\" />\r\n                      <i className=\"fas fa-hand-point-up\"></i>\r\n                      <FormattedMessage id=\"patient.detail-doctor.book-free\" />\r\n                    </span>\r\n                  </div>\r\n                </>\r\n                :\r\n                <div className='no-schedule'><FormattedMessage id=\"patient.detail-doctor.no-schedule\" /></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BookingModal isOpenModal={isOpenModalBooking}\r\n          closeBookingClose={this.closeBookingClose}\r\n          dataTime={dataScheduleTimeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./DoctorExtraInfor.scss\";\r\nimport { LANGUAGES } from '../../../utils';\r\nimport { getExtraInforDoctorById } from \"../../../services/userService\";\r\nimport NumberFormat from 'react-number-format'\r\n\r\n\r\nclass DoctorExtraInfor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowDetailInfor: false,\r\n      extraInfor: {}\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.doctorIdFromParent) {\r\n      let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          extraInfor: res.data\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n\r\n    }\r\n\r\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\r\n      let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          extraInfor: res.data\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  showHideDetailInfor = (status) => {\r\n    this.setState({ isShowDetailInfor: status });\r\n  }\r\n\r\n\r\n  render() {\r\n    let { isShowDetailInfor, extraInfor } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <div className='doctor-extra-infor-container'>\r\n        <div className='content-up'>\r\n          <div className='text-address'><FormattedMessage id=\"patient.extra-info-doctor.text-address\" /></div>\r\n          <div className='name-clinic'>\r\n            {extraInfor && extraInfor.nameClinic ? extraInfor.nameClinic : ''}\r\n          </div>\r\n          <div className='detail-address'>\r\n            {extraInfor && extraInfor.addressClinic ? extraInfor.addressClinic : ''}\r\n          </div>\r\n        </div>\r\n        <div className='content-down'>\r\n          {isShowDetailInfor === false &&\r\n            <div className='short-infor'>\r\n              <FormattedMessage id=\"patient.extra-info-doctor.price\" />\r\n              {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI\r\n                &&\r\n                <NumberFormat\r\n                  className='curency'\r\n                  value={extraInfor.priceTypeData.valueVi}\r\n                  displayType={'text'}\r\n                  thousandSeparator={true}\r\n                  suffix={'VND'}\r\n                />\r\n              }\r\n              {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN\r\n                &&\r\n                <NumberFormat\r\n                  className='curency'\r\n                  value={extraInfor.priceTypeData.valueEn}\r\n                  displayType={'text'}\r\n                  thousandSeparator={true}\r\n                  suffix={'$'}\r\n                />\r\n              }\r\n              <span className='detail' onClick={() => this.showHideDetailInfor(true)}><FormattedMessage id=\"patient.extra-info-doctor.detail\" /></span>\r\n            </div>\r\n          }\r\n          {isShowDetailInfor === true &&\r\n            <>\r\n              <div className='title-price'><FormattedMessage id=\"patient.extra-info-doctor.price\" /></div>\r\n              <div className='detail-infor'>\r\n                <div className='price'>\r\n                  <span className='left'><FormattedMessage id=\"patient.extra-info-doctor.price\" /></span>\r\n                  <span className='right'>\r\n                    {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.VI\r\n                      &&\r\n                      <NumberFormat\r\n                        className='curency'\r\n                        value={extraInfor.priceTypeData.valueVi}\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        suffix={'VND'}\r\n                      />\r\n                    }\r\n                    {extraInfor && extraInfor.priceTypeData && language === LANGUAGES.EN\r\n                      &&\r\n                      <NumberFormat\r\n                        className='curency'\r\n                        value={extraInfor.priceTypeData.valueEn}\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        suffix={'$'}\r\n                      />\r\n                    }\r\n                  </span>\r\n                </div>\r\n                <div className='note'>\r\n                  {extraInfor && extraInfor.note ? extraInfor.note : ''}\r\n                </div>\r\n              </div>\r\n              <div className='payment'>\r\n                <FormattedMessage id=\"patient.extra-info-doctor.payment\" />\r\n                {extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.VI ? extraInfor.paymentTypeData.valueVi : ''}\r\n                {extraInfor && extraInfor.paymentTypeData && language === LANGUAGES.EN ? extraInfor.paymentTypeData.valueEn : ''}\r\n              </div>\r\n              <div className='hide-price'>\r\n                <span onClick={() => this.showHideDetailInfor(false)}><FormattedMessage id=\"patient.extra-info-doctor.hide-price\" /></span>\r\n              </div>\r\n            </>\r\n          }\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\n\r\nclass LikeAndShare extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  initFacebookSDK() {\r\n    if (window.FB) {\r\n      window.FB.XFBML.parse();\r\n    }\r\n\r\n    let { language } = this.props;\r\n    let locale = language === LANGUAGES.VI ? 'vi_VN' : 'en_US'\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        cookie: true,  // enable cookies to allow the server to access\r\n        // the session\r\n        xfbml: true,  // parse social plugins on this page\r\n        version: 'v2.5' // use version 2.1\r\n      });\r\n    };\r\n    // Load the SDK asynchronously\r\n    (function (d, s, id) {\r\n      var js, fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) return;\r\n      js = d.createElement(s); js.id = id;\r\n      js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    }(document, 'script', 'facebook-jssdk'));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initFacebookSDK();\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { dataHref } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"fb-like\"\r\n          data-href={dataHref}\r\n          data-width=\"\"\r\n          data-layout=\"standard\"\r\n          data-action=\"like\"\r\n          data-size=\"small\"\r\n          data-share=\"true\"\r\n        >\r\n\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeAndShare);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  initFacebookSDK() {\r\n    if (window.FB) {\r\n      window.FB.XFBML.parse();\r\n    }\r\n\r\n    let { language } = this.props;\r\n    let locale = language === LANGUAGES.VI ? 'vi_VN' : 'en_US'\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        cookie: true,  // enable cookies to allow the server to access\r\n        // the session\r\n        xfbml: true,  // parse social plugins on this page\r\n        version: 'v2.5' // use version 2.1\r\n      });\r\n    };\r\n    // Load the SDK asynchronously\r\n    (function (d, s, id) {\r\n      var js, fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) return;\r\n      js = d.createElement(s); js.id = id;\r\n      js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    }(document, 'script', 'facebook-jssdk'));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initFacebookSDK();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n      this.initFacebookSDK();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { width, dataHref, numPost } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"fb-comments\"\r\n          data-href={dataHref}\r\n          data-width={width ? width : \"\"}\r\n          data-numPost={numPost ? numPost : 5}\r\n        ></div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport './DetailDoctor.scss';\r\nimport { getDetailInforDoctor } from '../../../services/userService';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport DoctorExtraInfor from './DoctorExtraInfor';\r\nimport LikeAndShare from '../SocialPlugin/LikeAndShare';\r\nimport Comment from \"../SocialPlugin/Comment\";\r\n\r\n\r\nclass DetailDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detailDoctor: {},\r\n      currentDoctorId: -1,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n      let id = this.props.match.params.id;\r\n      this.setState({ currentDoctorId: id });\r\n      let res = await getDetailInforDoctor(id);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          detailDoctor: res.data\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctorsRedux\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { detailDoctor } = this.state;\r\n    let { language } = this.props;\r\n    let nameVi = '';\r\n    let nameEn = '';\r\n    if (detailDoctor && detailDoctor.positionData) {\r\n      nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`;\r\n      nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`;\r\n    }\r\n\r\n    let currentURL = +process.env.REACT_APP_IS_LOCALHOST === 1 ?\r\n      \"https://eric-restuarant-bot-tv.herokuapp.com/\" : window.location.href;\r\n\r\n    return (\r\n      <>\r\n        <HomeHeader isShowBanner={false} />\r\n        <div className='doctor-detail-container'>\r\n          <div className='intro-doctor'>\r\n            <div className='content-left'\r\n              style={{\r\n                backgroundImage: `url(${detailDoctor &&\r\n\r\n                  detailDoctor.image ? detailDoctor.image : ''})`\r\n              }}>\r\n            </div>\r\n            <div className='content-right'>\r\n              <div className='up'>\r\n                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n              </div>\r\n              <div className='down'>\r\n                {detailDoctor && detailDoctor.markdown && detailDoctor.markdown.description &&\r\n                  <span>{detailDoctor.markdown.description}</span>\r\n                }\r\n                <div className='like-share-plugin'>\r\n                  <LikeAndShare dataHref={currentURL} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='schedule-doctor'>\r\n            <div className='content-left'>\r\n              <DoctorSchedule doctorIdFromParent={this.state.currentDoctorId} />\r\n            </div>\r\n            <div className='content-right'>\r\n              <DoctorExtraInfor doctorIdFromParent={this.state.currentDoctorId} />\r\n            </div>\r\n          </div>\r\n          <div className='detail-infor-doctor'>\r\n            {detailDoctor && detailDoctor.markdown && detailDoctor.markdown.contentHTML &&\r\n              <div dangerouslySetInnerHTML={{ __html: detailDoctor.markdown.contentHTML }} />\r\n            }\r\n          </div>\r\n          <div className='comment-doctor'>\r\n            <Comment dataHref={currentURL}\r\n              width={\"100%\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageSchedule.scss\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Select from 'react-select';\r\nimport * as actions from '../../../store/actions';\r\nimport { LANGUAGES } from '../../../utils';\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\n// import moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport _ from 'lodash';\r\nimport { saveBulkScheduleDoctor } from '../../../services/userService';\r\n\r\n\r\nclass ManageSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDoctors: [],\r\n      selectedDoctor: {},\r\n      currentDate: '',\r\n      rangeTime: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.fetchALLDoctors();\r\n    this.props.fetchALLScheduleTime();\r\n  }\r\n\r\n  builDataInputSelect = (inputData) => {\r\n    let result = [];\r\n    let { language } = this.props;\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let object = {};\r\n        let labelVi = `${item.lastName} ${item.firstName}`;\r\n        let labelEn = `${item.firstName} ${item.lastName}`;\r\n        object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n        object.value = item.id;\r\n        result.push(object);\r\n      })\r\n\r\n    }\r\n    return result;\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.builDataInputSelect(this.props.allDoctors)\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      })\r\n    }\r\n\r\n    if (prevProps.allScheduleTime !== this.props.allScheduleTime) {\r\n      let data = this.props.allScheduleTime;\r\n      if (data && data.length > 0) {\r\n        data = data.map(item => ({ ...item, isSelected: false }))\r\n      }\r\n      this.setState({\r\n        rangeTime: data,\r\n      })\r\n    }\r\n    // if (prevProps.language !== this.props.language) {\r\n    //   let dataSelect = this.builDataInputSelect(this.props.allDoctors)\r\n    //   this.setState({\r\n    //     listDoctors: dataSelect,\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n\r\n  };\r\n\r\n  handleOnChangeDatePicker = (date) => {\r\n    this.setState({\r\n      currentDate: date[0],\r\n    });\r\n  }\r\n\r\n  handleClickBtnTime = (time) => {\r\n    let { rangeTime } = this.state;\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      rangeTime = rangeTime.map(item => {\r\n        if (item.id === time.id) item.isSelected = !item.isSelected;\r\n        return item;\r\n      })\r\n      this.setState({\r\n        rangeTime: rangeTime\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSaveSchedule = async () => {\r\n    let { rangeTime, selectedDoctor, currentDate } = this.state;\r\n    let result = [];\r\n    if (!currentDate) {\r\n      toast.error(\"Please selected date !\");\r\n      return;\r\n    }\r\n    if (selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n      toast.error(\"Please select doctor!\");\r\n      return;\r\n    }\r\n\r\n    let formatedDate = new Date(currentDate).getTime();\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      let selectedTime = rangeTime.filter(item => item.isSelected === true);\r\n      if (selectedTime && selectedTime.length > 0) {\r\n        selectedTime.map((schedule, index) => {\r\n          console.log(\"check schedule: \", schedule, index, selectedTime);\r\n          let object = {};\r\n          object.doctorId = selectedDoctor.value;\r\n          object.date = formatedDate;\r\n          object.timeType = schedule.keyMap;\r\n          result.push(object);\r\n        })\r\n      } else {\r\n        toast.error(\"Invalid selected time!\");\r\n      }\r\n    }\r\n    let res = await saveBulkScheduleDoctor({\r\n      arrSchedule: result,\r\n      doctorId: selectedDoctor.value,\r\n      formatedDate: formatedDate\r\n    })\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Save Infor succeed!\");\r\n    } else {\r\n      toast.error(\"error saveBulkScheduleDoctor!\");\r\n      console.log(\"saveBulkScheduleDoctor >>> res : \", res);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { rangeTime } = this.state;\r\n    let { language } = this.props;\r\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n    return (\r\n      <div className='manage-schedule-containner' >\r\n        <div className=\"m-s-title\">\r\n          <FormattedMessage id=\"manage-schedule.title\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 form-group\">\r\n              <label><FormattedMessage id=\"manage-schedule.choose-doctor\" /></label>\r\n              <Select\r\n                value={this.state.selectedDoctor}\r\n                onChange={this.handleChangeSelect}\r\n                options={this.state.listDoctors}\r\n              />\r\n            </div>\r\n            <div className=\"col-6 from-group\">\r\n              <label><FormattedMessage id=\"manage-schedule.choose-date\" /></label>\r\n              <DatePicker\r\n                onChange={this.handleOnChangeDatePicker}\r\n                className=\"form-control\"\r\n                value={this.state.currentDate}\r\n                minDate={yesterday}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 pick-hour-container\">\r\n              {rangeTime && rangeTime.length > 0 &&\r\n                rangeTime.map((item, index) => {\r\n                  return (\r\n                    <button className={item.isSelected === true ? \"btn btn-schedule active\" : 'btn btn-schedule'}\r\n                      key={index}\r\n                      onClick={() => this.handleClickBtnTime(item)}\r\n                    >\r\n                      {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                    </button>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <button\r\n                className='btn btn-primary btn-save-schedule'\r\n                onClick={() => this.handleSaveSchedule()}\r\n              >\r\n                <FormattedMessage id=\"manage-schedule.save-information\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    allDoctors: state.admin.allDoctors,\r\n    allScheduleTime: state.admin.allScheduleTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchALLDoctors: () => dispatch(actions.fetchALLDoctors()),\r\n    fetchALLScheduleTime: () => dispatch(actions.fetchALLScheduleTime()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./RemedyModal.scss\"\r\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\r\n// import moment from \"moment\";\r\n// import { toast } from 'react-toastify';\r\nimport { CommonUtils } from '../../../utils';\r\n\r\n\r\nclass RemedyModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      imgBase64: ''\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModal) {\r\n      this.setState({\r\n        email: this.props.dataModal.email,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModal !== this.props.dataModal) {\r\n      this.setState({\r\n        email: this.props.dataModal.email,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleOnchangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value\r\n    })\r\n  }\r\n\r\n  handleOnchangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0]\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      this.setState({\r\n        imgBase64: base64\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state)\r\n  }\r\n\r\n  render() {\r\n    let { isOpenModal, closeRemedyModal } = this.props;\r\n    console.log(this.state)\r\n    return (\r\n      <Modal\r\n        isOpen={isOpenModal}\r\n        className={'booking-modal-container'}\r\n        size=\"md\"\r\n        centered\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className='modal-title'>Gởi hóa đơn khám bệnh thành công</h5>\r\n          <button className=\"close\" aria-label=\"Close\" onClick={closeRemedyModal} >\r\n            <span aria-hidden=\"true\">X</span>\r\n          </button>\r\n        </div>\r\n        <ModalBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-6 form-group\">\r\n              <label>Email bệnh nhân</label>\r\n              <input className='form-control' type='email' value={this.state.email}\r\n                onChange={(event) => this.handleOnchangeEmail(event)} />\r\n            </div>\r\n            <div className=\"col-6 form-group\">\r\n              <label>Chọn file đơn thuốc</label>\r\n              <input className='form-control-file' type='file'\r\n                onChange={(event) => this.handleOnchangeImage(event)} />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color='primary' onClick={() => this.handleSendRemedy()}>Send</Button>\r\n          <Button color='secondary' onClick={closeRemedyModal}>Cancel</Button>\r\n        </ModalFooter>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./ManagePatient.scss\";\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport { getAllPatientForDoctor, postSendRemedy } from '../../../services/userService';\r\nimport moment from \"moment\";\r\nimport { LANGUAGES } from '../../../utils';\r\nimport RemedyModal from './RemedyModal';\r\nimport { toast } from 'react-toastify';\r\nimport LoaddingOverlay from \"react-loading-overlay\";\r\n\r\n\r\nclass ManagePatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: moment(new Date()).startOf('day').valueOf(),\r\n      dataPatient: [],\r\n      isOpenRemedyModal: false,\r\n      dataModal: {},\r\n      isShowLoading: false\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    // this.getDataPatient(user, formatedDate)\r\n    this.getDataPatient();\r\n  }\r\n\r\n  getDataPatient = async () => {\r\n    let { user } = this.props;\r\n    let { currentDate } = this.state;\r\n    let formatedDate = new Date(currentDate).getTime();\r\n    let res = await getAllPatientForDoctor({\r\n      doctorId: user.id,\r\n      date: formatedDate\r\n    })\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataPatient: res.data\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  handleOnchangeDatePicker = (date) => {\r\n    this.setState({\r\n      currentDate: date[0]\r\n    }, async () => {\r\n      await this.getDataPatient()\r\n    })\r\n  }\r\n\r\n  handleBtnConfirm = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.firstName\r\n    }\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n      dataModal: data\r\n    })\r\n  }\r\n\r\n\r\n  closeRemedyModal = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      dataModal: {}\r\n    })\r\n  }\r\n\r\n  sendRemedy = async (dataChild) => {\r\n    let { dataModal } = this.state;\r\n    this.setState({\r\n      isShowLoading: true\r\n    });\r\n    let res = await postSendRemedy({\r\n      email: dataChild.email,\r\n      imgBase64: dataChild.imgBase64,\r\n      doctorId: dataModal.doctorId,\r\n      patientId: dataModal.patientId,\r\n      timeType: dataModal.timeType,\r\n      language: this.props.language,\r\n      patientName: dataModal.patientName\r\n\r\n    })\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        isShowLoading: false\r\n      })\r\n      toast.success(\"send remedy success: \");\r\n      this.closeRemedyModal();\r\n      await this.getDataPatient();\r\n    } else {\r\n      this.setState({\r\n        isShowLoading: false\r\n      })\r\n      toast.error(\"something worongs ....\");\r\n      console.log(\" error send remedy: \", res)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { dataPatient, isOpenRemedyModal, dataModal } = this.state;\r\n    let { language } = this.props\r\n    return (\r\n      <>\r\n        <LoaddingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading .....\"\r\n        >\r\n\r\n          <div className='manage-patient-container'>\r\n            <div className='m-p-title'>\r\n              Quản Lý Bệnh Nhân Khám Bệnh\r\n            </div>\r\n            <div className='manage-patient-body row'>\r\n              <div className='col-4 form-group'>\r\n                <label>Chọn Ngày khám</label>\r\n                <DatePicker\r\n                  onChange={this.handleOnchangeDatePicker}\r\n                  className=\"form-control\"\r\n                  value={this.state.currentDate}\r\n                />\r\n              </div>\r\n              <div className='col-12 table-manage-patient'>\r\n                <table style={{ width: '100%' }} >\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>STT</th>\r\n                      <th>Thời Gian</th>\r\n                      <th>Họ Và Tên</th>\r\n                      <th>Địa Chỉ</th>\r\n                      <th>Giới Tính</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                    {dataPatient && dataPatient.length > 0 ?\r\n                      dataPatient.map((item, index) => {\r\n                        let time = language === LANGUAGES.VI ?\r\n                          item.timeTypeDataPatient.valueVi : item.timeTypeDataPatient.valueEn;\r\n                        let gender = language === LANGUAGES.VI ?\r\n                          item.patientData.genderData.valueVi : item.patientData.genderData.valueEn\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{time}</td>\r\n                            <td>{item.patientData.firstName}</td>\r\n                            <td>{item.patientData.address}</td>\r\n                            <td>{gender}</td>\r\n                            <td>\r\n                              <button className='mp-btn-confirm' onClick={() => this.handleBtnConfirm(item)}>Xác Nhận</button>\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                      })\r\n                      :\r\n                      <tr>\r\n                        <td colSpan=\"6\" style={{ textAlign: \"center\" }}>no data</td> </tr>\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <RemedyModal\r\n            isOpenModal={isOpenRemedyModal}\r\n            dataModal={dataModal}\r\n            closeRemedyModal={this.closeRemedyModal}\r\n            sendRemedy={this.sendRemedy}\r\n          />\r\n        </LoaddingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n    user: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\nimport ManagePatient from '../containers/System/Doctor/ManagePatient';\r\n\r\nclass Doctor extends Component {\r\n  render() {\r\n    // {this.props.isLoggedIn && <Header />}\r\n    const { isLoggedIn } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"Doctor-container\">\r\n          <div className=\"Doctor-list\">\r\n            <Switch>\r\n              <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n              <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    DoctorMenuPath: state.app.DoctorMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { postVerifyBookAppointment } from \"../../services/userService\";\r\nimport HomeHeader from \"../HomePage/HomeHeader\";\r\nimport \"./VerifyEmail.scss\"\r\n\r\n\r\nclass VerfyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusVerify: false,\r\n      errCode: 0\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.location && this.props.location.search) {\r\n      let urlParams = new URLSearchParams(this.props.location.search);\r\n      let token = urlParams.get('token');\r\n      let doctorId = urlParams.get('doctorId');\r\n      let res = await postVerifyBookAppointment({\r\n        token: token,\r\n        doctorId: doctorId\r\n      })\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res.errCode\r\n        })\r\n      } else {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res && res.errCode ? res.errCode : -1\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { statusVerify, errCode } = this.state;\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className='verify-email-container'>\r\n          {statusVerify === false ?\r\n            <div>\r\n              loading data ...\r\n            </div>\r\n            :\r\n            <div>\r\n              {+errCode === 0 ?\r\n                <div className='infor-booking'>xác nhận lịch hẹn thành công</div>\r\n                :\r\n                <div className='infor-booking'>Lịch hẹn không tồn tại hoặc đã được xác nhận</div>\r\n              }\r\n            </div>\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerfyEmail);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./DetailSpecialty.scss\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport { getAllDetailSpecialtyById, getAllCodeService } from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\n\r\nclass DetailSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctorId: [],\r\n      dataDetailSpecialty: {},\r\n      listProvince: [],\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params && this.props.match.params.id) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: 'ALL'\r\n      });\r\n      let resProvince = await getAllCodeService('PROVINCE')\r\n      console.log(res)\r\n      if (res && res.errCode === 0 && resProvince && resProvince.errCode === 0) {\r\n        let data = res.data;\r\n        let arrDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map(item => {\r\n              arrDoctorId.push(item.doctorId);\r\n            })\r\n          }\r\n        }\r\n        let dataProvince = resProvince.data;\r\n        if (dataProvince && dataProvince.length > 0) {\r\n          dataProvince.unshift({\r\n            createAt: null,\r\n            keyMap: 'ALL',\r\n            type: \"PROVINCE\",\r\n            valueEn: \"ALL\",\r\n            valueVi: \"Toàn Quốc\",\r\n          })\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          arrDoctorId: arrDoctorId,\r\n          listProvince: dataProvince ? dataProvince : []\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  handleOnChangeSelect = async (event) => {\r\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n      let id = this.props.match.params.id;\r\n      let location = event.target.value;\r\n\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: location\r\n      })\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data;\r\n        let arrDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map(item => {\r\n              arrDoctorId.push(item.doctorId)\r\n            })\r\n          }\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          arrDoctorId: arrDoctorId\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { arrDoctorId, dataDetailSpecialty, listProvince } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <div className='detail-specialty-container'>\r\n        <HomeHeader />\r\n        <div className='detail-specialty-body'>\r\n          <div className='description-spcialty'>\r\n            {dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty)\r\n              &&\r\n              <div dangerouslySetInnerHTML={{ __html: dataDetailSpecialty.descriptionHTML }} ></div>\r\n            }\r\n          </div>\r\n          <div className='search-sp-doctor'>\r\n            <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n              {listProvince && listProvince.length > 0 &&\r\n                listProvince.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.keyMap}>\r\n                      {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                    </option>\r\n                  )\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          {arrDoctorId && arrDoctorId.length > 0 &&\r\n            arrDoctorId.map((item, index) => {\r\n              return (\r\n                <div className='each-doctor' key={index}>\r\n                  <div className='dt-content-left'>\r\n                    <div className='profile-doctor'>\r\n                      <ProfileDoctor\r\n                        doctorId={item}\r\n                        isShowDescriptionDoctor={true}\r\n                        isShowLinkDetail={true}\r\n                        isShowPrice={false}\r\n                      //dataTime={dataTime} \r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className='dt-content-right'>\r\n                    <div className='doctor-scheduled'>\r\n                      <DoctorSchedule\r\n                        doctorIdFromParent={item}\r\n                      />\r\n                    </div>\r\n                    <div className='doctor-extra-infor'>\r\n                      <DoctorExtraInfor doctorIdFromParent={item} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { FormattedMessage } from 'react-intl';\r\nimport \"./DetailClinic.scss\";\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport { getAllDetailClinicById } from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\n// import { LANGUAGES } from '../../../utils';\r\n\r\n\r\nclass DetailClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctorId: [],\r\n      dataDetailClinic: {},\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getAllDetailClinicById({\r\n        id: id\r\n      });\r\n      console.log(\"componentDidMount : \", res);\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data;\r\n        let arrDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorClinic;\r\n          if (arr && arr.length > 0) {\r\n            arr.map(item => {\r\n              arrDoctorId.push(item.doctorId);\r\n            })\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          dataDetailClinic: res.data,\r\n          arrDoctorId: arrDoctorId\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { arrDoctorId, dataDetailClinic } = this.state;\r\n    console.log(arrDoctorId)\r\n    // let { language } = this.props;\r\n    return (\r\n      <div className='detail-specialty-container'>\r\n        <HomeHeader />\r\n        <div className='detail-specialty-body'>\r\n          <div className='description-spcialty'>\r\n            {dataDetailClinic && !_.isEmpty(dataDetailClinic)\r\n              &&\r\n              <>\r\n                <div>{dataDetailClinic.name}</div>\r\n                <div dangerouslySetInnerHTML={{ __html: dataDetailClinic.descriptionHTML }} ></div>\r\n              </>\r\n\r\n            }\r\n          </div>\r\n          {arrDoctorId && arrDoctorId.length > 0 &&\r\n            arrDoctorId.map((item, index) => {\r\n              return (\r\n                <div className='each-doctor' key={index}>\r\n                  <div className='dt-content-left'>\r\n                    <div className='profile-doctor'>\r\n                      <ProfileDoctor\r\n                        doctorId={item}\r\n                        isShowDescriptionDoctor={true}\r\n                        isShowLinkDetail={true}\r\n                        isShowPrice={false}\r\n                      //dataTime={dataTime} \r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className='dt-content-right'>\r\n                    <div className='doctor-scheduled'>\r\n                      <DoctorSchedule\r\n                        doctorIdFromParent={item}\r\n                      />\r\n                    </div>\r\n                    <div className='doctor-extra-infor'>\r\n                      <DoctorExtraInfor doctorIdFromParent={item} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n// import Login from '../routes/Login';\r\nimport Login from './Auth/Login';\r\n\r\n\r\nimport System from '../routes/System';\r\n\r\n// import { CustomToastCloseButton } from '../components/CustomToast';\r\n// import ConfirmModal from '../components/ConfirmModal';\r\nimport HomePage from './HomePage/HomePage';\r\nimport CustomScrollbars from '../components/CustomScrollbars';\r\nimport DetailDoctor from './Patient/Doctor/DetailDoctor';\r\nimport Doctor from '../routes/Doctor';\r\nimport VerifyEmail from './Patient/VerifyEmail';\r\nimport DetailSpecialty from './Patient/Specialty/DetailSpecialty';\r\nimport DetailClinic from './Patient/Clinic/DetailClinic';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        {/* {this.props.isLoggedIn && <Header />} */}\r\n\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={{ height: '100vh', width: '100%' }}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={'/doctor/'} component={userIsAuthenticated(Doctor)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                    <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                                    <Route path={path.DETAIL_SPCIALTY} component={DetailSpecialty} />\r\n                                    <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                                    <Route path={path.VERIFY_EMAIL_BOOKING} component={VerifyEmail} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        {/* <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        /> */}\r\n                        <ToastContainer\r\n                            position=\"bottom-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                            theme=\"light\"\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DETAIL_DOCTOR: '/detail-doctor/:id',\r\n    DETAIL_SPCIALTY: '/detail-specialty/:id',\r\n    DETAIL_CLINIC: '/detail-clinic/:id',\r\n\r\n\r\n    VERIFY_EMAIL_BOOKING: '/verify-booking',\r\n};\r\n\r\nexport const LANGUAGES = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const CRUD_ACTIONS = {\r\n    CREATE: \"CREATE\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\",\r\n    READ: \"READ\",\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\n\r\nexport const USER_ROLE = {\r\n    ADMIN: 'R1',\r\n    DOCTOR: 'R2',\r\n    PATIENT: 'R3',\r\n};","class CommonUtils {\r\n    static getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = () => reject(console.log('Error reading file'));\r\n        });\r\n    }\r\n}\r\n\r\nexport default CommonUtils;","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;"],"sourceRoot":""}